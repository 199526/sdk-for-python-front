parameters:
  - name: CondaArtifacts
    type: object
    default: []

steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python $(PythonVersion)'
    inputs:
      versionSpec: $(PythonVersion)

  - script: |
      pip install -r eng/ci_tools.txt
    displayName: 'Prep Environment'

  - pwsh: |
      mkdir $(Agent.BuildDirectory)/conda/
      mkdir $(Agent.BuildDirectory)/conda/output
      mkdir $(Agent.BuildDirectory)/conda/build

      Write-Host "##vso[task.setvariable variable=conda.output]$(Agent.BuildDirectory)/conda/output"
      Write-Host "##vso[task.setvariable variable=conda.build]$(Agent.BuildDirectory)/conda/build"
    displayName: 'Create Conda Working Directories'

  - ${{ each artifact in parameters.CondaArtifacts }}:
    # there may be multiple CondaArtifacts. Be certain $(conda.build) is clean just in case!
    - pwsh:
        Write-Host "Clean up Conda Build Directory $(conda.build)"

        Remove-Item -Recurse -Force "$(conda.build)/*"
        
        Get-ChildItem -Recurse "$(conda.build)"
      displayName: 'Clean Up Before Building ${{ artifact.name }}'

    - ${{ each checkout in artifact.checkout }}:
      - template: /eng/pipelines/templates/steps/get-tagged-code.yml
        parameters:
          DestinationDirectory: $(conda.build)/${{checkout.package}}
          Package: ${{checkout.package}}
          CheckoutPath: ${{checkout.checkout_path}}
          Version: ${{checkout.version}}

    - pwsh:
        Get-ChildItem -Recurse "$(conda.build)"
      displayName: Output visible directories

    - task: PythonScript@0
      displayName: 'Build Source Distribution for ${{ artifact.name }}'
      inputs:
        scriptPath: 'scripts/devops_tasks/build_conda_artifacts.py'
        arguments: >-
          -d "$(conda.output)"
          -b "$(conda.build)"
          -m "$(Build.SourcesDirectory)/sdk/conda/${{ artifact.name }}/meta.yml"
          -r "${{ artifact.common_root }}"
          -n "${{ artifact.name }}"
          -s "${{ artifact.service }}"
          -e "$(Build.SourcesDirectory)/eng/conda_env.yml"
          -c "$(Build.SourcesDirectory)/sdk/conda/conda.ci.yml"

    - bash: |
        echo "##vso[task.prependpath]$CONDA/bin"
      displayName: 'Prepend PATH with Conda and INIT'

    - bash: |
        conda env create --name ${{ artifact.name }} --file $(Build.SourcesDirectory)/eng/conda_env.yml
        conda install --yes --quiet --name ${{ artifact.name }} conda-build
      displayName: 'Prepare Conda Environment for building ${{ artifact.name }}'

    - bash: |
        source activate ${{ artifact.name }}
        conda-build . --output-folder "$(Agent.BuildDirectory)/conda/output/${{ artifact.name }}" -c $(AzureSDKCondaChannel)
        conda deactivate
      displayName: 'Activate Conda Environment and Build ${{ artifact.name }}'
      workingDirectory: $(Build.SourcesDirectory)/sdk/conda/${{ artifact.name }}

    # this is necessary because conda-deactivate doesn't restore our original python version
    - task: UsePythonVersion@0
      displayName: 'Restore Use of Python $(PythonVersion)'
      inputs:
        versionSpec: $(PythonVersion)
  
  - template: /eng/common/pipelines/templates/steps/publish-artifact.yml
    parameters:
      ArtifactPath: '$(Agent.BuildDirectory)/conda/output'
      ArtifactName: 'conda'
