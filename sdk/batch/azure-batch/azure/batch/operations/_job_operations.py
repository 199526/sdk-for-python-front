# pylint: disable=too-many-lines
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import datetime
import sys
from typing import Any, Callable, Dict, Iterable, Optional, TypeVar, cast

from msrest import Serializer

from azure.core.exceptions import ClientAuthenticationError, HttpResponseError, ResourceExistsError, ResourceNotFoundError, map_error
from azure.core.paging import ItemPaged
from azure.core.pipeline import PipelineResponse
from azure.core.pipeline.transport import HttpResponse
from azure.core.rest import HttpRequest
from azure.core.tracing.decorator import distributed_trace
from azure.core.utils import case_insensitive_dict

from .._vendor import _format_url_section
if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore
JSON = MutableMapping[str, Any] # pylint: disable=unsubscriptable-object
T = TypeVar('T')
ClsType = Optional[Callable[[PipelineResponse[HttpRequest, HttpResponse], T, Dict[str, Any]], Any]]

_SERIALIZER = Serializer()
_SERIALIZER.client_side_validation = False

def build_get_all_lifetime_statistics_request(
    *,
    timeout: Optional[int] = 30,
    client_request_id: Optional[str] = None,
    return_client_request_id: Optional[bool] = False,
    ocp_date: Optional[datetime.datetime] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/lifetimejobstats"

    # Construct parameters
    if timeout is not None:
        _params['timeout'] = _SERIALIZER.query("timeout", timeout, 'int')
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if client_request_id is not None:
        _headers['client-request-id'] = _SERIALIZER.header("client_request_id", client_request_id, 'str')
    if return_client_request_id is not None:
        _headers['return-client-request-id'] = _SERIALIZER.header("return_client_request_id", return_client_request_id, 'bool')
    if ocp_date is not None:
        _headers['ocp-date'] = _SERIALIZER.header("ocp_date", ocp_date, 'rfc-1123')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_delete_request(
    job_id: str,
    *,
    timeout: Optional[int] = 30,
    client_request_id: Optional[str] = None,
    return_client_request_id: Optional[bool] = False,
    ocp_date: Optional[datetime.datetime] = None,
    if_match: Optional[str] = None,
    if_none_match: Optional[str] = None,
    if_modified_since: Optional[datetime.datetime] = None,
    if_unmodified_since: Optional[datetime.datetime] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/jobs/{jobId}"
    path_format_arguments = {
        "jobId": _SERIALIZER.url("job_id", job_id, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    if timeout is not None:
        _params['timeout'] = _SERIALIZER.query("timeout", timeout, 'int')
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if client_request_id is not None:
        _headers['client-request-id'] = _SERIALIZER.header("client_request_id", client_request_id, 'str')
    if return_client_request_id is not None:
        _headers['return-client-request-id'] = _SERIALIZER.header("return_client_request_id", return_client_request_id, 'bool')
    if ocp_date is not None:
        _headers['ocp-date'] = _SERIALIZER.header("ocp_date", ocp_date, 'rfc-1123')
    if if_match is not None:
        _headers['If-Match'] = _SERIALIZER.header("if_match", if_match, 'str')
    if if_none_match is not None:
        _headers['If-None-Match'] = _SERIALIZER.header("if_none_match", if_none_match, 'str')
    if if_modified_since is not None:
        _headers['If-Modified-Since'] = _SERIALIZER.header("if_modified_since", if_modified_since, 'rfc-1123')
    if if_unmodified_since is not None:
        _headers['If-Unmodified-Since'] = _SERIALIZER.header("if_unmodified_since", if_unmodified_since, 'rfc-1123')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="DELETE",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_get_request(
    job_id: str,
    *,
    select: Optional[str] = None,
    expand: Optional[str] = None,
    timeout: Optional[int] = 30,
    client_request_id: Optional[str] = None,
    return_client_request_id: Optional[bool] = False,
    ocp_date: Optional[datetime.datetime] = None,
    if_match: Optional[str] = None,
    if_none_match: Optional[str] = None,
    if_modified_since: Optional[datetime.datetime] = None,
    if_unmodified_since: Optional[datetime.datetime] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/jobs/{jobId}"
    path_format_arguments = {
        "jobId": _SERIALIZER.url("job_id", job_id, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    if select is not None:
        _params['$select'] = _SERIALIZER.query("select", select, 'str')
    if expand is not None:
        _params['$expand'] = _SERIALIZER.query("expand", expand, 'str')
    if timeout is not None:
        _params['timeout'] = _SERIALIZER.query("timeout", timeout, 'int')
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if client_request_id is not None:
        _headers['client-request-id'] = _SERIALIZER.header("client_request_id", client_request_id, 'str')
    if return_client_request_id is not None:
        _headers['return-client-request-id'] = _SERIALIZER.header("return_client_request_id", return_client_request_id, 'bool')
    if ocp_date is not None:
        _headers['ocp-date'] = _SERIALIZER.header("ocp_date", ocp_date, 'rfc-1123')
    if if_match is not None:
        _headers['If-Match'] = _SERIALIZER.header("if_match", if_match, 'str')
    if if_none_match is not None:
        _headers['If-None-Match'] = _SERIALIZER.header("if_none_match", if_none_match, 'str')
    if if_modified_since is not None:
        _headers['If-Modified-Since'] = _SERIALIZER.header("if_modified_since", if_modified_since, 'rfc-1123')
    if if_unmodified_since is not None:
        _headers['If-Unmodified-Since'] = _SERIALIZER.header("if_unmodified_since", if_unmodified_since, 'rfc-1123')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_patch_request(
    job_id: str,
    *,
    json: Optional[JSON] = None,
    content: Any = None,
    timeout: Optional[int] = 30,
    client_request_id: Optional[str] = None,
    return_client_request_id: Optional[bool] = False,
    ocp_date: Optional[datetime.datetime] = None,
    if_match: Optional[str] = None,
    if_none_match: Optional[str] = None,
    if_modified_since: Optional[datetime.datetime] = None,
    if_unmodified_since: Optional[datetime.datetime] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
    content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/jobs/{jobId}"
    path_format_arguments = {
        "jobId": _SERIALIZER.url("job_id", job_id, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    if timeout is not None:
        _params['timeout'] = _SERIALIZER.query("timeout", timeout, 'int')
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if client_request_id is not None:
        _headers['client-request-id'] = _SERIALIZER.header("client_request_id", client_request_id, 'str')
    if return_client_request_id is not None:
        _headers['return-client-request-id'] = _SERIALIZER.header("return_client_request_id", return_client_request_id, 'bool')
    if ocp_date is not None:
        _headers['ocp-date'] = _SERIALIZER.header("ocp_date", ocp_date, 'rfc-1123')
    if if_match is not None:
        _headers['If-Match'] = _SERIALIZER.header("if_match", if_match, 'str')
    if if_none_match is not None:
        _headers['If-None-Match'] = _SERIALIZER.header("if_none_match", if_none_match, 'str')
    if if_modified_since is not None:
        _headers['If-Modified-Since'] = _SERIALIZER.header("if_modified_since", if_modified_since, 'rfc-1123')
    if if_unmodified_since is not None:
        _headers['If-Unmodified-Since'] = _SERIALIZER.header("if_unmodified_since", if_unmodified_since, 'rfc-1123')
    if content_type is not None:
        _headers['Content-Type'] = _SERIALIZER.header("content_type", content_type, 'str')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="PATCH",
        url=_url,
        params=_params,
        headers=_headers,
        json=json,
        content=content,
        **kwargs
    )


def build_update_request(
    job_id: str,
    *,
    json: Optional[JSON] = None,
    content: Any = None,
    timeout: Optional[int] = 30,
    client_request_id: Optional[str] = None,
    return_client_request_id: Optional[bool] = False,
    ocp_date: Optional[datetime.datetime] = None,
    if_match: Optional[str] = None,
    if_none_match: Optional[str] = None,
    if_modified_since: Optional[datetime.datetime] = None,
    if_unmodified_since: Optional[datetime.datetime] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
    content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/jobs/{jobId}"
    path_format_arguments = {
        "jobId": _SERIALIZER.url("job_id", job_id, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    if timeout is not None:
        _params['timeout'] = _SERIALIZER.query("timeout", timeout, 'int')
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if client_request_id is not None:
        _headers['client-request-id'] = _SERIALIZER.header("client_request_id", client_request_id, 'str')
    if return_client_request_id is not None:
        _headers['return-client-request-id'] = _SERIALIZER.header("return_client_request_id", return_client_request_id, 'bool')
    if ocp_date is not None:
        _headers['ocp-date'] = _SERIALIZER.header("ocp_date", ocp_date, 'rfc-1123')
    if if_match is not None:
        _headers['If-Match'] = _SERIALIZER.header("if_match", if_match, 'str')
    if if_none_match is not None:
        _headers['If-None-Match'] = _SERIALIZER.header("if_none_match", if_none_match, 'str')
    if if_modified_since is not None:
        _headers['If-Modified-Since'] = _SERIALIZER.header("if_modified_since", if_modified_since, 'rfc-1123')
    if if_unmodified_since is not None:
        _headers['If-Unmodified-Since'] = _SERIALIZER.header("if_unmodified_since", if_unmodified_since, 'rfc-1123')
    if content_type is not None:
        _headers['Content-Type'] = _SERIALIZER.header("content_type", content_type, 'str')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        headers=_headers,
        json=json,
        content=content,
        **kwargs
    )


def build_disable_request(
    job_id: str,
    *,
    json: Optional[JSON] = None,
    content: Any = None,
    timeout: Optional[int] = 30,
    client_request_id: Optional[str] = None,
    return_client_request_id: Optional[bool] = False,
    ocp_date: Optional[datetime.datetime] = None,
    if_match: Optional[str] = None,
    if_none_match: Optional[str] = None,
    if_modified_since: Optional[datetime.datetime] = None,
    if_unmodified_since: Optional[datetime.datetime] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
    content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/jobs/{jobId}/disable"
    path_format_arguments = {
        "jobId": _SERIALIZER.url("job_id", job_id, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    if timeout is not None:
        _params['timeout'] = _SERIALIZER.query("timeout", timeout, 'int')
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if client_request_id is not None:
        _headers['client-request-id'] = _SERIALIZER.header("client_request_id", client_request_id, 'str')
    if return_client_request_id is not None:
        _headers['return-client-request-id'] = _SERIALIZER.header("return_client_request_id", return_client_request_id, 'bool')
    if ocp_date is not None:
        _headers['ocp-date'] = _SERIALIZER.header("ocp_date", ocp_date, 'rfc-1123')
    if if_match is not None:
        _headers['If-Match'] = _SERIALIZER.header("if_match", if_match, 'str')
    if if_none_match is not None:
        _headers['If-None-Match'] = _SERIALIZER.header("if_none_match", if_none_match, 'str')
    if if_modified_since is not None:
        _headers['If-Modified-Since'] = _SERIALIZER.header("if_modified_since", if_modified_since, 'rfc-1123')
    if if_unmodified_since is not None:
        _headers['If-Unmodified-Since'] = _SERIALIZER.header("if_unmodified_since", if_unmodified_since, 'rfc-1123')
    if content_type is not None:
        _headers['Content-Type'] = _SERIALIZER.header("content_type", content_type, 'str')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="POST",
        url=_url,
        params=_params,
        headers=_headers,
        json=json,
        content=content,
        **kwargs
    )


def build_enable_request(
    job_id: str,
    *,
    timeout: Optional[int] = 30,
    client_request_id: Optional[str] = None,
    return_client_request_id: Optional[bool] = False,
    ocp_date: Optional[datetime.datetime] = None,
    if_match: Optional[str] = None,
    if_none_match: Optional[str] = None,
    if_modified_since: Optional[datetime.datetime] = None,
    if_unmodified_since: Optional[datetime.datetime] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/jobs/{jobId}/enable"
    path_format_arguments = {
        "jobId": _SERIALIZER.url("job_id", job_id, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    if timeout is not None:
        _params['timeout'] = _SERIALIZER.query("timeout", timeout, 'int')
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if client_request_id is not None:
        _headers['client-request-id'] = _SERIALIZER.header("client_request_id", client_request_id, 'str')
    if return_client_request_id is not None:
        _headers['return-client-request-id'] = _SERIALIZER.header("return_client_request_id", return_client_request_id, 'bool')
    if ocp_date is not None:
        _headers['ocp-date'] = _SERIALIZER.header("ocp_date", ocp_date, 'rfc-1123')
    if if_match is not None:
        _headers['If-Match'] = _SERIALIZER.header("if_match", if_match, 'str')
    if if_none_match is not None:
        _headers['If-None-Match'] = _SERIALIZER.header("if_none_match", if_none_match, 'str')
    if if_modified_since is not None:
        _headers['If-Modified-Since'] = _SERIALIZER.header("if_modified_since", if_modified_since, 'rfc-1123')
    if if_unmodified_since is not None:
        _headers['If-Unmodified-Since'] = _SERIALIZER.header("if_unmodified_since", if_unmodified_since, 'rfc-1123')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="POST",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_terminate_request(
    job_id: str,
    *,
    json: Optional[JSON] = None,
    content: Any = None,
    timeout: Optional[int] = 30,
    client_request_id: Optional[str] = None,
    return_client_request_id: Optional[bool] = False,
    ocp_date: Optional[datetime.datetime] = None,
    if_match: Optional[str] = None,
    if_none_match: Optional[str] = None,
    if_modified_since: Optional[datetime.datetime] = None,
    if_unmodified_since: Optional[datetime.datetime] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
    content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/jobs/{jobId}/terminate"
    path_format_arguments = {
        "jobId": _SERIALIZER.url("job_id", job_id, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    if timeout is not None:
        _params['timeout'] = _SERIALIZER.query("timeout", timeout, 'int')
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if client_request_id is not None:
        _headers['client-request-id'] = _SERIALIZER.header("client_request_id", client_request_id, 'str')
    if return_client_request_id is not None:
        _headers['return-client-request-id'] = _SERIALIZER.header("return_client_request_id", return_client_request_id, 'bool')
    if ocp_date is not None:
        _headers['ocp-date'] = _SERIALIZER.header("ocp_date", ocp_date, 'rfc-1123')
    if if_match is not None:
        _headers['If-Match'] = _SERIALIZER.header("if_match", if_match, 'str')
    if if_none_match is not None:
        _headers['If-None-Match'] = _SERIALIZER.header("if_none_match", if_none_match, 'str')
    if if_modified_since is not None:
        _headers['If-Modified-Since'] = _SERIALIZER.header("if_modified_since", if_modified_since, 'rfc-1123')
    if if_unmodified_since is not None:
        _headers['If-Unmodified-Since'] = _SERIALIZER.header("if_unmodified_since", if_unmodified_since, 'rfc-1123')
    if content_type is not None:
        _headers['Content-Type'] = _SERIALIZER.header("content_type", content_type, 'str')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="POST",
        url=_url,
        params=_params,
        headers=_headers,
        json=json,
        content=content,
        **kwargs
    )


def build_add_request(
    *,
    json: Optional[JSON] = None,
    content: Any = None,
    timeout: Optional[int] = 30,
    client_request_id: Optional[str] = None,
    return_client_request_id: Optional[bool] = False,
    ocp_date: Optional[datetime.datetime] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
    content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/jobs"

    # Construct parameters
    if timeout is not None:
        _params['timeout'] = _SERIALIZER.query("timeout", timeout, 'int')
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if client_request_id is not None:
        _headers['client-request-id'] = _SERIALIZER.header("client_request_id", client_request_id, 'str')
    if return_client_request_id is not None:
        _headers['return-client-request-id'] = _SERIALIZER.header("return_client_request_id", return_client_request_id, 'bool')
    if ocp_date is not None:
        _headers['ocp-date'] = _SERIALIZER.header("ocp_date", ocp_date, 'rfc-1123')
    if content_type is not None:
        _headers['Content-Type'] = _SERIALIZER.header("content_type", content_type, 'str')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="POST",
        url=_url,
        params=_params,
        headers=_headers,
        json=json,
        content=content,
        **kwargs
    )


def build_list_request(
    *,
    filter: Optional[str] = None,
    select: Optional[str] = None,
    expand: Optional[str] = None,
    max_results: Optional[int] = 1000,
    timeout: Optional[int] = 30,
    client_request_id: Optional[str] = None,
    return_client_request_id: Optional[bool] = False,
    ocp_date: Optional[datetime.datetime] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/jobs"

    # Construct parameters
    if filter is not None:
        _params['$filter'] = _SERIALIZER.query("filter", filter, 'str')
    if select is not None:
        _params['$select'] = _SERIALIZER.query("select", select, 'str')
    if expand is not None:
        _params['$expand'] = _SERIALIZER.query("expand", expand, 'str')
    if max_results is not None:
        _params['maxresults'] = _SERIALIZER.query("max_results", max_results, 'int', maximum=1000, minimum=1)
    if timeout is not None:
        _params['timeout'] = _SERIALIZER.query("timeout", timeout, 'int')
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if client_request_id is not None:
        _headers['client-request-id'] = _SERIALIZER.header("client_request_id", client_request_id, 'str')
    if return_client_request_id is not None:
        _headers['return-client-request-id'] = _SERIALIZER.header("return_client_request_id", return_client_request_id, 'bool')
    if ocp_date is not None:
        _headers['ocp-date'] = _SERIALIZER.header("ocp_date", ocp_date, 'rfc-1123')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_list_from_job_schedule_request(
    job_schedule_id: str,
    *,
    filter: Optional[str] = None,
    select: Optional[str] = None,
    expand: Optional[str] = None,
    max_results: Optional[int] = 1000,
    timeout: Optional[int] = 30,
    client_request_id: Optional[str] = None,
    return_client_request_id: Optional[bool] = False,
    ocp_date: Optional[datetime.datetime] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/jobschedules/{jobScheduleId}/jobs"
    path_format_arguments = {
        "jobScheduleId": _SERIALIZER.url("job_schedule_id", job_schedule_id, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    if filter is not None:
        _params['$filter'] = _SERIALIZER.query("filter", filter, 'str')
    if select is not None:
        _params['$select'] = _SERIALIZER.query("select", select, 'str')
    if expand is not None:
        _params['$expand'] = _SERIALIZER.query("expand", expand, 'str')
    if max_results is not None:
        _params['maxresults'] = _SERIALIZER.query("max_results", max_results, 'int', maximum=1000, minimum=1)
    if timeout is not None:
        _params['timeout'] = _SERIALIZER.query("timeout", timeout, 'int')
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if client_request_id is not None:
        _headers['client-request-id'] = _SERIALIZER.header("client_request_id", client_request_id, 'str')
    if return_client_request_id is not None:
        _headers['return-client-request-id'] = _SERIALIZER.header("return_client_request_id", return_client_request_id, 'bool')
    if ocp_date is not None:
        _headers['ocp-date'] = _SERIALIZER.header("ocp_date", ocp_date, 'rfc-1123')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_list_preparation_and_release_task_status_request(
    job_id: str,
    *,
    filter: Optional[str] = None,
    select: Optional[str] = None,
    max_results: Optional[int] = 1000,
    timeout: Optional[int] = 30,
    client_request_id: Optional[str] = None,
    return_client_request_id: Optional[bool] = False,
    ocp_date: Optional[datetime.datetime] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/jobs/{jobId}/jobpreparationandreleasetaskstatus"
    path_format_arguments = {
        "jobId": _SERIALIZER.url("job_id", job_id, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    if filter is not None:
        _params['$filter'] = _SERIALIZER.query("filter", filter, 'str')
    if select is not None:
        _params['$select'] = _SERIALIZER.query("select", select, 'str')
    if max_results is not None:
        _params['maxresults'] = _SERIALIZER.query("max_results", max_results, 'int', maximum=1000, minimum=1)
    if timeout is not None:
        _params['timeout'] = _SERIALIZER.query("timeout", timeout, 'int')
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if client_request_id is not None:
        _headers['client-request-id'] = _SERIALIZER.header("client_request_id", client_request_id, 'str')
    if return_client_request_id is not None:
        _headers['return-client-request-id'] = _SERIALIZER.header("return_client_request_id", return_client_request_id, 'bool')
    if ocp_date is not None:
        _headers['ocp-date'] = _SERIALIZER.header("ocp_date", ocp_date, 'rfc-1123')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_get_task_counts_request(
    job_id: str,
    *,
    timeout: Optional[int] = 30,
    client_request_id: Optional[str] = None,
    return_client_request_id: Optional[bool] = False,
    ocp_date: Optional[datetime.datetime] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/jobs/{jobId}/taskcounts"
    path_format_arguments = {
        "jobId": _SERIALIZER.url("job_id", job_id, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    if timeout is not None:
        _params['timeout'] = _SERIALIZER.query("timeout", timeout, 'int')
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if client_request_id is not None:
        _headers['client-request-id'] = _SERIALIZER.header("client_request_id", client_request_id, 'str')
    if return_client_request_id is not None:
        _headers['return-client-request-id'] = _SERIALIZER.header("return_client_request_id", return_client_request_id, 'bool')
    if ocp_date is not None:
        _headers['ocp-date'] = _SERIALIZER.header("ocp_date", ocp_date, 'rfc-1123')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )

class JobOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure-batch.BatchServiceClient`'s
        :attr:`job` attribute.
    """

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def get_all_lifetime_statistics(
        self,
        *,
        timeout: Optional[int] = 30,
        client_request_id: Optional[str] = None,
        return_client_request_id: Optional[bool] = False,
        ocp_date: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> JSON:
        """Gets lifetime summary statistics for all of the Jobs in the specified Account.

        Statistics are aggregated across all Jobs that have ever existed in the Account, from Account
        creation to the last update time of the statistics. The statistics may not be immediately
        available. The Batch service performs periodic roll-up of statistics. The typical delay is
        about 30 minutes.

        :keyword timeout: The maximum time that the server can spend processing the request, in
         seconds. The default is 30 seconds.
        :paramtype timeout: int
        :keyword client_request_id: The caller-generated request identity, in the form of a GUID with
         no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. Default value is
         None.
        :paramtype client_request_id: str
        :keyword return_client_request_id: Whether the server should return the client-request-id in
         the response. Default value is False.
        :paramtype return_client_request_id: bool
        :keyword ocp_date: The time the request was issued. Client libraries typically set this to the
         current system clock time; set it explicitly if you are calling the REST API directly. Default
         value is None.
        :paramtype ocp_date: ~datetime.datetime
        :return: JSON object
        :rtype: JSON
        :raises: ~azure.core.exceptions.HttpResponseError

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "kernelCPUTime": "1 day, 0:00:00",  # Required. The total kernel mode CPU
                      time (summed across all cores and all Compute Nodes) consumed by all Tasks in the
                      Job.
                    "lastUpdateTime": "2020-02-20 00:00:00",  # Required. The time at which the
                      statistics were last updated. All statistics are limited to the range between
                      startTime and lastUpdateTime.
                    "numFailedTasks": 0.0,  # Required. A Task fails if it exhausts its maximum
                      retry count without returning exit code 0.
                    "numSucceededTasks": 0.0,  # Required. A Task completes successfully if it
                      returns exit code 0.
                    "numTaskRetries": 0.0,  # Required. The total number of retries on all the
                      Tasks in the Job during the given time range.
                    "readIOGiB": 0.0,  # Required. The total amount of data in GiB read from disk
                      by all Tasks in the Job.
                    "readIOps": 0.0,  # Required. The total number of disk read operations made
                      by all Tasks in the Job.
                    "startTime": "2020-02-20 00:00:00",  # Required. The start time of the time
                      range covered by the statistics.
                    "url": "str",  # Required. The URL of the statistics.
                    "userCPUTime": "1 day, 0:00:00",  # Required. The total user mode CPU time
                      (summed across all cores and all Compute Nodes) consumed by all Tasks in the Job.
                    "waitTime": "1 day, 0:00:00",  # Required. The wait time for a Task is
                      defined as the elapsed time between the creation of the Task and the start of
                      Task execution. (If the Task is retried due to failures, the wait time is the
                      time to the most recent Task execution.) This value is only reported in the
                      Account lifetime statistics; it is not included in the Job statistics.
                    "wallClockTime": "1 day, 0:00:00",  # Required. The wall clock time is the
                      elapsed time from when the Task started running on a Compute Node to when it
                      finished (or to the last time the statistics were updated, if the Task had not
                      finished by then). If a Task was retried, this includes the wall clock time of
                      all the Task retries.
                    "writeIOGiB": 0.0,  # Required. The total amount of data in GiB written to
                      disk by all Tasks in the Job.
                    "writeIOps": 0.0  # Required. The total number of disk write operations made
                      by all Tasks in the Job.
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_get_all_lifetime_statistics_request(
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        response_headers = {}
        response_headers['client-request-id']=self._deserialize('str', response.headers.get('client-request-id'))
        response_headers['request-id']=self._deserialize('str', response.headers.get('request-id'))
        response_headers['ETag']=self._deserialize('str', response.headers.get('ETag'))
        response_headers['Last-Modified']=self._deserialize('rfc-1123', response.headers.get('Last-Modified'))

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), response_headers)

        return cast(JSON, deserialized)



    @distributed_trace
    def delete(  # pylint: disable=inconsistent-return-statements
        self,
        job_id: str,
        *,
        timeout: Optional[int] = 30,
        client_request_id: Optional[str] = None,
        return_client_request_id: Optional[bool] = False,
        ocp_date: Optional[datetime.datetime] = None,
        if_match: Optional[str] = None,
        if_none_match: Optional[str] = None,
        if_modified_since: Optional[datetime.datetime] = None,
        if_unmodified_since: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """Deletes a Job.

        Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This
        also overrides the retention period for Task data; that is, if the Job contains Tasks which are
        still retained on Compute Nodes, the Batch services deletes those Tasks' working directories
        and all their contents.  When a Delete Job request is received, the Batch service sets the Job
        to the deleting state. All update operations on a Job that is in deleting state will fail with
        status code 409 (Conflict), with additional information indicating that the Job is being
        deleted.

        :param job_id: The ID of the Job to delete.
        :type job_id: str
        :keyword timeout: The maximum time that the server can spend processing the request, in
         seconds. The default is 30 seconds.
        :paramtype timeout: int
        :keyword client_request_id: The caller-generated request identity, in the form of a GUID with
         no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. Default value is
         None.
        :paramtype client_request_id: str
        :keyword return_client_request_id: Whether the server should return the client-request-id in
         the response. Default value is False.
        :paramtype return_client_request_id: bool
        :keyword ocp_date: The time the request was issued. Client libraries typically set this to the
         current system clock time; set it explicitly if you are calling the REST API directly. Default
         value is None.
        :paramtype ocp_date: ~datetime.datetime
        :keyword if_match: An ETag value associated with the version of the resource known to the
         client. The operation will be performed only if the resource's current ETag on the service
         exactly matches the value specified by the client. Default value is None.
        :paramtype if_match: str
        :keyword if_none_match: An ETag value associated with the version of the resource known to the
         client. The operation will be performed only if the resource's current ETag on the service does
         not match the value specified by the client. Default value is None.
        :paramtype if_none_match: str
        :keyword if_modified_since: A timestamp indicating the last modified time of the resource known
         to the client. The operation will be performed only if the resource on the service has been
         modified since the specified time. Default value is None.
        :paramtype if_modified_since: ~datetime.datetime
        :keyword if_unmodified_since: A timestamp indicating the last modified time of the resource
         known to the client. The operation will be performed only if the resource on the service has
         not been modified since the specified time. Default value is None.
        :paramtype if_unmodified_since: ~datetime.datetime
        :return: None
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_delete_request(
            job_id=job_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )
        response = pipeline_response.http_response

        if response.status_code not in [202]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        response_headers = {}
        response_headers['client-request-id']=self._deserialize('str', response.headers.get('client-request-id'))
        response_headers['request-id']=self._deserialize('str', response.headers.get('request-id'))


        if cls:
            return cls(pipeline_response, None, response_headers)



    @distributed_trace
    def get(
        self,
        job_id: str,
        *,
        select: Optional[str] = None,
        expand: Optional[str] = None,
        timeout: Optional[int] = 30,
        client_request_id: Optional[str] = None,
        return_client_request_id: Optional[bool] = False,
        ocp_date: Optional[datetime.datetime] = None,
        if_match: Optional[str] = None,
        if_none_match: Optional[str] = None,
        if_modified_since: Optional[datetime.datetime] = None,
        if_unmodified_since: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> JSON:
        """Gets information about the specified Job.

        Gets information about the specified Job.

        :param job_id: The ID of the Job.
        :type job_id: str
        :keyword select: An OData $select clause. Default value is None.
        :paramtype select: str
        :keyword expand: An OData $expand clause. Default value is None.
        :paramtype expand: str
        :keyword timeout: The maximum time that the server can spend processing the request, in
         seconds. The default is 30 seconds.
        :paramtype timeout: int
        :keyword client_request_id: The caller-generated request identity, in the form of a GUID with
         no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. Default value is
         None.
        :paramtype client_request_id: str
        :keyword return_client_request_id: Whether the server should return the client-request-id in
         the response. Default value is False.
        :paramtype return_client_request_id: bool
        :keyword ocp_date: The time the request was issued. Client libraries typically set this to the
         current system clock time; set it explicitly if you are calling the REST API directly. Default
         value is None.
        :paramtype ocp_date: ~datetime.datetime
        :keyword if_match: An ETag value associated with the version of the resource known to the
         client. The operation will be performed only if the resource's current ETag on the service
         exactly matches the value specified by the client. Default value is None.
        :paramtype if_match: str
        :keyword if_none_match: An ETag value associated with the version of the resource known to the
         client. The operation will be performed only if the resource's current ETag on the service does
         not match the value specified by the client. Default value is None.
        :paramtype if_none_match: str
        :keyword if_modified_since: A timestamp indicating the last modified time of the resource known
         to the client. The operation will be performed only if the resource on the service has been
         modified since the specified time. Default value is None.
        :paramtype if_modified_since: ~datetime.datetime
        :keyword if_unmodified_since: A timestamp indicating the last modified time of the resource
         known to the client. The operation will be performed only if the resource on the service has
         not been modified since the specified time. Default value is None.
        :paramtype if_unmodified_since: ~datetime.datetime
        :return: JSON object
        :rtype: JSON
        :raises: ~azure.core.exceptions.HttpResponseError

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "allowTaskPreemption": bool,  # Optional. If the value is set to True, other
                      high priority jobs submitted to the system will take precedence and will be able
                      requeue tasks from this job. You can update a job's allowTaskPreemption after it
                      has been created using the update job API.
                    "commonEnvironmentSettings": [
                        {
                            "name": "str",  # Required. The name of the environment
                              variable.
                            "value": "str"  # Optional. The value of the environment
                              variable.
                        }
                    ],
                    "constraints": {
                        "maxTaskRetryCount": 0,  # Optional. Note that this value
                          specifically controls the number of retries. The Batch service will try each
                          Task once, and may then retry up to this limit. For example, if the maximum
                          retry count is 3, Batch tries a Task up to 4 times (one initial try and 3
                          retries). If the maximum retry count is 0, the Batch service does not retry
                          Tasks. If the maximum retry count is -1, the Batch service retries the Task
                          without limit, however this is not recommended for a start task or any task.
                          The default value is 0 (no retries).
                        "maxWallClockTime": "1 day, 0:00:00"  # Optional. If the Job does not
                          complete within the time limit, the Batch service terminates it and any Tasks
                          that are still running. In this case, the termination reason will be
                          MaxWallClockTimeExpiry. If this property is not specified, there is no time
                          limit on how long the Job may run.
                    },
                    "creationTime": "2020-02-20 00:00:00",  # Optional. The creation time of the
                      Job.
                    "displayName": "str",  # Optional. The display name for the Job.
                    "eTag": "str",  # Optional. This is an opaque string. You can use it to
                      detect whether the Job has changed between requests. In particular, you can be
                      pass the ETag when updating a Job to specify that your changes should take effect
                      only if nobody else has modified the Job in the meantime.
                    "executionInfo": {
                        "endTime": "2020-02-20 00:00:00",  # Optional. This property is set
                          only if the Job is in the completed state.
                        "poolId": "str",  # Optional. This element contains the actual Pool
                          where the Job is assigned. When you get Job details from the service, they
                          also contain a poolInfo element, which contains the Pool configuration data
                          from when the Job was added or updated. That poolInfo element may also
                          contain a poolId element. If it does, the two IDs are the same. If it does
                          not, it means the Job ran on an auto Pool, and this property contains the ID
                          of that auto Pool.
                        "schedulingError": {
                            "category": "str",  # Required. The category of the error.
                              Known values are: "usererror", "servererror".
                            "code": "str",  # Optional. An identifier for the Job
                              scheduling error. Codes are invariant and are intended to be consumed
                              programmatically.
                            "details": [
                                {
                                    "name": "str",  # Optional. The name in the
                                      name-value pair.
                                    "value": "str"  # Optional. The value in the
                                      name-value pair.
                                }
                            ],
                            "message": "str"  # Optional. A message describing the Job
                              scheduling error, intended to be suitable for display in a user
                              interface.
                        },
                        "startTime": "2020-02-20 00:00:00",  # Required. This is the time at
                          which the Job was created.
                        "terminateReason": "str"  # Optional. This property is set only if
                          the Job is in the completed state. If the Batch service terminates the Job,
                          it sets the reason as follows: JMComplete - the Job Manager Task completed,
                          and killJobOnCompletion was set to true. MaxWallClockTimeExpiry - the Job
                          reached its maxWallClockTime constraint. TerminateJobSchedule - the Job ran
                          as part of a schedule, and the schedule terminated. AllTasksComplete - the
                          Job's onAllTasksComplete attribute is set to terminatejob, and all Tasks in
                          the Job are complete. TaskFailed - the Job's onTaskFailure attribute is set
                          to performExitOptionsJobAction, and a Task in the Job failed with an exit
                          condition that specified a jobAction of terminatejob. Any other string is a
                          user-defined reason specified in a call to the 'Terminate a Job' operation.
                    },
                    "id": "str",  # Optional. The ID is case-preserving and case-insensitive
                      (that is, you may not have two IDs within an Account that differ only by case).
                    "jobManagerTask": {
                        "allowLowPriorityNode": bool,  # Optional. The default value is true.
                        "applicationPackageReferences": [
                            {
                                "applicationId": "str",  # Required. The ID of the
                                  application to deploy.
                                "version": "str"  # Optional. If this is omitted on a
                                  Pool, and no default version is specified for this application, the
                                  request fails with the error code InvalidApplicationPackageReferences
                                  and HTTP status code 409. If this is omitted on a Task, and no
                                  default version is specified for this application, the Task fails
                                  with a pre-processing error.
                            }
                        ],
                        "authenticationTokenSettings": {
                            "access": [
                                "job"  # Optional. Default value is "job". The
                                  authentication token grants access to a limited set of Batch service
                                  operations. Currently the only supported value for the access
                                  property is 'job', which grants access to all operations related to
                                  the Job which contains the Task.
                            ]
                        },
                        "commandLine": "str",  # Required. The command line does not run
                          under a shell, and therefore cannot take advantage of shell features such as
                          environment variable expansion. If you want to take advantage of such
                          features, you should invoke the shell in the command line, for example using
                          "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the
                          command line refers to file paths, it should use a relative path (relative to
                          the Task working directory), or use the Batch provided environment variable
                          (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                        "constraints": {
                            "maxTaskRetryCount": 0,  # Optional. Note that this value
                              specifically controls the number of retries for the Task executable due
                              to a nonzero exit code. The Batch service will try the Task once, and may
                              then retry up to this limit. For example, if the maximum retry count is
                              3, Batch tries the Task up to 4 times (one initial try and 3 retries). If
                              the maximum retry count is 0, the Batch service does not retry the Task
                              after the first attempt. If the maximum retry count is -1, the Batch
                              service retries the Task without limit, however this is not recommended
                              for a start task or any task. The default value is 0 (no retries).
                            "maxWallClockTime": "1 day, 0:00:00",  # Optional. If this is
                              not specified, there is no time limit on how long the Task may run.
                            "retentionTime": "1 day, 0:00:00"  # Optional. The default is
                              7 days, i.e. the Task directory will be retained for 7 days unless the
                              Compute Node is removed or the Job is deleted.
                        },
                        "containerSettings": {
                            "containerRunOptions": "str",  # Optional. These additional
                              options are supplied as arguments to the "docker create" command, in
                              addition to those controlled by the Batch Service.
                            "imageName": "str",  # Required. This is the full Image
                              reference, as would be specified to "docker pull". If no tag is provided
                              as part of the Image name, the tag ":latest" is used as a default.
                            "registry": {
                                "identityReference": {
                                    "resourceId": "str"  # Optional. The ARM
                                      resource id of the user assigned identity.
                                },
                                "password": "str",  # Optional. The password to log
                                  into the registry server.
                                "registryServer": "str",  # Optional. If omitted, the
                                  default is "docker.io".
                                "username": "str"  # Optional. The user name to log
                                  into the registry server.
                            },
                            "workingDirectory": "str"  # Optional. The default is
                              'taskWorkingDirectory'. Known values are: "taskWorkingDirectory",
                              "containerImageDefault".
                        },
                        "displayName": "str",  # Optional. It need not be unique and can
                          contain any Unicode characters up to a maximum length of 1024.
                        "environmentSettings": [
                            {
                                "name": "str",  # Required. The name of the
                                  environment variable.
                                "value": "str"  # Optional. The value of the
                                  environment variable.
                            }
                        ],
                        "id": "str",  # Required. The ID can contain any combination of
                          alphanumeric characters including hyphens and underscores and cannot contain
                          more than 64 characters.
                        "killJobOnCompletion": bool,  # Optional. If true, when the Job
                          Manager Task completes, the Batch service marks the Job as complete. If any
                          Tasks are still running at this time (other than Job Release), those Tasks
                          are terminated. If false, the completion of the Job Manager Task does not
                          affect the Job status. In this case, you should either use the
                          onAllTasksComplete attribute to terminate the Job, or have a client or user
                          terminate the Job explicitly. An example of this is if the Job Manager
                          creates a set of Tasks but then takes no further role in their execution. The
                          default value is true. If you are using the onAllTasksComplete and
                          onTaskFailure attributes to control Job lifetime, and using the Job Manager
                          Task only to create the Tasks for the Job (not to monitor progress), then it
                          is important to set killJobOnCompletion to false.
                        "outputFiles": [
                            {
                                "destination": {
                                    "container": {
                                        "containerUrl": "str",  # Required.
                                          If not using a managed identity, the URL must include a
                                          Shared Access Signature (SAS) granting write permissions to
                                          the container.
                                        "identityReference": {
                                            "resourceId": "str"  #
                                              Optional. The ARM resource id of the user assigned
                                              identity.
                                        },
                                        "path": "str",  # Optional. If
                                          filePattern refers to a specific file (i.e. contains no
                                          wildcards), then path is the name of the blob to which to
                                          upload that file. If filePattern contains one or more
                                          wildcards (and therefore may match multiple files), then path
                                          is the name of the blob virtual directory (which is prepended
                                          to each blob name) to which to upload the file(s). If
                                          omitted, file(s) are uploaded to the root of the container
                                          with a blob name matching their file name.
                                        "uploadHeaders": [
                                            {
                                                "name": "str",  #
                                                  Required. The case-insensitive name of the header to
                                                  be used while uploading output files.
                                                "value": "str"  #
                                                  Optional. The value of the header to be used while
                                                  uploading output files.
                                            }
                                        ]
                                    }
                                },
                                "filePattern": "str",  # Required. Both relative and
                                  absolute paths are supported. Relative paths are relative to the Task
                                  working directory. The following wildcards are supported: * matches 0
                                  or more characters (for example pattern abc* would match abc or
                                  abcdef), ** matches any directory, ? matches any single character,
                                  [abc] matches one character in the brackets, and [a-c] matches one
                                  character in the range. Brackets can include a negation to match any
                                  character not specified (for example [!abc] matches any character but
                                  a, b, or c). If a file name starts with "." it is ignored by default
                                  but may be matched by specifying it explicitly (for example *.gif
                                  will not match .a.gif, but .*.gif will). A simple example: **"" *.txt
                                  matches any file that does not start in '.' and ends with .txt in the
                                  Task working directory or any subdirectory. If the filename contains
                                  a wildcard character it can be escaped using brackets (for example
                                  abc["" *] would match a file named abc*"" ). Note that both and / are
                                  treated as directory separators on Windows, but only / is on Linux.
                                  Environment variables (%var% on Windows or $var on Linux) are
                                  expanded prior to the pattern being applied.
                                "uploadOptions": {
                                    "uploadCondition": "str"  # Required. The
                                      default is taskcompletion. Known values are: "tasksuccess",
                                      "taskfailure", "taskcompletion".
                                }
                            }
                        ],
                        "requiredSlots": 0,  # Optional. The default is 1. A Task can only be
                          scheduled to run on a compute node if the node has enough free scheduling
                          slots available. For multi-instance Tasks, this property is not supported and
                          must not be specified.
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified.
                                "blobPrefix": "str",  # Optional. The property is
                                  valid only when autoStorageContainerName or storageContainerUrl is
                                  used. This prefix can be a partial filename or a subdirectory. If a
                                  prefix is not specified, all the files in the container will be
                                  downloaded.
                                "fileMode": "str",  # Optional. This property applies
                                  only to files being downloaded to Linux Compute Nodes. It will be
                                  ignored if it is specified for a resourceFile which will be
                                  downloaded to a Windows Compute Node. If this property is not
                                  specified for a Linux Compute Node, then a default value of 0770 is
                                  applied to the file.
                                "filePath": "str",  # Optional. If the httpUrl
                                  property is specified, the filePath is required and describes the
                                  path which the file will be downloaded to, including the filename.
                                  Otherwise, if the autoStorageContainerName or storageContainerUrl
                                  property is specified, filePath is optional and is the directory to
                                  download the files to. In the case where filePath is used as a
                                  directory, any directory structure already associated with the input
                                  data will be retained in full and appended to the specified filePath
                                  directory. The specified relative path cannot break out of the Task's
                                  working directory (for example by using '..').
                                "httpUrl": "str",  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified. If the URL
                                  points to Azure Blob Storage, it must be readable from compute nodes.
                                  There are three ways to get such a URL for a blob in Azure storage:
                                  include a Shared Access Signature (SAS) granting read permissions on
                                  the blob, use a managed identity with read permission, or set the ACL
                                  for the blob or its container to allow public access.
                                "identityReference": {
                                    "resourceId": "str"  # Optional. The ARM
                                      resource id of the user assigned identity.
                                },
                                "storageContainerUrl": "str"  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified. This URL
                                  must be readable and listable from compute nodes. There are three
                                  ways to get such a URL for a container in Azure storage: include a
                                  Shared Access Signature (SAS) granting read and list permissions on
                                  the container, use a managed identity with read and list permissions,
                                  or set the ACL for the container to allow public access.
                            }
                        ],
                        "runExclusive": bool,  # Optional. If true, no other Tasks will run
                          on the same Node for as long as the Job Manager is running. If false, other
                          Tasks can run simultaneously with the Job Manager on a Compute Node. The Job
                          Manager Task counts normally against the Compute Node's concurrent Task
                          limit, so this is only relevant if the Compute Node allows multiple
                          concurrent Tasks. The default value is true.
                        "userIdentity": {
                            "autoUser": {
                                "elevationLevel": "str",  # Optional. The default
                                  value is nonAdmin. Known values are: "nonadmin", "admin".
                                "scope": "str"  # Optional. The default value is
                                  pool. If the pool is running Windows a value of Task should be
                                  specified if stricter isolation between tasks is required. For
                                  example, if the task mutates the registry in a way which could impact
                                  other tasks, or if certificates have been specified on the pool which
                                  should not be accessible by normal tasks but should be accessible by
                                  StartTasks. Known values are: "task", "pool".
                            },
                            "username": "str"  # Optional. The userName and autoUser
                              properties are mutually exclusive; you must specify one but not both.
                        }
                    },
                    "jobPreparationTask": {
                        "commandLine": "str",  # Required. The command line does not run
                          under a shell, and therefore cannot take advantage of shell features such as
                          environment variable expansion. If you want to take advantage of such
                          features, you should invoke the shell in the command line, for example using
                          "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the
                          command line refers to file paths, it should use a relative path (relative to
                          the Task working directory), or use the Batch provided environment variable
                          (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                        "constraints": {
                            "maxTaskRetryCount": 0,  # Optional. Note that this value
                              specifically controls the number of retries for the Task executable due
                              to a nonzero exit code. The Batch service will try the Task once, and may
                              then retry up to this limit. For example, if the maximum retry count is
                              3, Batch tries the Task up to 4 times (one initial try and 3 retries). If
                              the maximum retry count is 0, the Batch service does not retry the Task
                              after the first attempt. If the maximum retry count is -1, the Batch
                              service retries the Task without limit, however this is not recommended
                              for a start task or any task. The default value is 0 (no retries).
                            "maxWallClockTime": "1 day, 0:00:00",  # Optional. If this is
                              not specified, there is no time limit on how long the Task may run.
                            "retentionTime": "1 day, 0:00:00"  # Optional. The default is
                              7 days, i.e. the Task directory will be retained for 7 days unless the
                              Compute Node is removed or the Job is deleted.
                        },
                        "containerSettings": {
                            "containerRunOptions": "str",  # Optional. These additional
                              options are supplied as arguments to the "docker create" command, in
                              addition to those controlled by the Batch Service.
                            "imageName": "str",  # Required. This is the full Image
                              reference, as would be specified to "docker pull". If no tag is provided
                              as part of the Image name, the tag ":latest" is used as a default.
                            "registry": {
                                "identityReference": {
                                    "resourceId": "str"  # Optional. The ARM
                                      resource id of the user assigned identity.
                                },
                                "password": "str",  # Optional. The password to log
                                  into the registry server.
                                "registryServer": "str",  # Optional. If omitted, the
                                  default is "docker.io".
                                "username": "str"  # Optional. The user name to log
                                  into the registry server.
                            },
                            "workingDirectory": "str"  # Optional. The default is
                              'taskWorkingDirectory'. Known values are: "taskWorkingDirectory",
                              "containerImageDefault".
                        },
                        "environmentSettings": [
                            {
                                "name": "str",  # Required. The name of the
                                  environment variable.
                                "value": "str"  # Optional. The value of the
                                  environment variable.
                            }
                        ],
                        "id": "str",  # Optional. The ID can contain any combination of
                          alphanumeric characters including hyphens and underscores and cannot contain
                          more than 64 characters. If you do not specify this property, the Batch
                          service assigns a default value of 'jobpreparation'. No other Task in the Job
                          can have the same ID as the Job Preparation Task. If you try to submit a Task
                          with the same id, the Batch service rejects the request with error code
                          TaskIdSameAsJobPreparationTask; if you are calling the REST API directly, the
                          HTTP status code is 409 (Conflict).
                        "rerunOnNodeRebootAfterSuccess": bool,  # Optional. The Job
                          Preparation Task is always rerun if a Compute Node is reimaged, or if the Job
                          Preparation Task did not complete (e.g. because the reboot occurred while the
                          Task was running). Therefore, you should always write a Job Preparation Task
                          to be idempotent and to behave correctly if run multiple times. The default
                          value is true.
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified.
                                "blobPrefix": "str",  # Optional. The property is
                                  valid only when autoStorageContainerName or storageContainerUrl is
                                  used. This prefix can be a partial filename or a subdirectory. If a
                                  prefix is not specified, all the files in the container will be
                                  downloaded.
                                "fileMode": "str",  # Optional. This property applies
                                  only to files being downloaded to Linux Compute Nodes. It will be
                                  ignored if it is specified for a resourceFile which will be
                                  downloaded to a Windows Compute Node. If this property is not
                                  specified for a Linux Compute Node, then a default value of 0770 is
                                  applied to the file.
                                "filePath": "str",  # Optional. If the httpUrl
                                  property is specified, the filePath is required and describes the
                                  path which the file will be downloaded to, including the filename.
                                  Otherwise, if the autoStorageContainerName or storageContainerUrl
                                  property is specified, filePath is optional and is the directory to
                                  download the files to. In the case where filePath is used as a
                                  directory, any directory structure already associated with the input
                                  data will be retained in full and appended to the specified filePath
                                  directory. The specified relative path cannot break out of the Task's
                                  working directory (for example by using '..').
                                "httpUrl": "str",  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified. If the URL
                                  points to Azure Blob Storage, it must be readable from compute nodes.
                                  There are three ways to get such a URL for a blob in Azure storage:
                                  include a Shared Access Signature (SAS) granting read permissions on
                                  the blob, use a managed identity with read permission, or set the ACL
                                  for the blob or its container to allow public access.
                                "identityReference": {
                                    "resourceId": "str"  # Optional. The ARM
                                      resource id of the user assigned identity.
                                },
                                "storageContainerUrl": "str"  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified. This URL
                                  must be readable and listable from compute nodes. There are three
                                  ways to get such a URL for a container in Azure storage: include a
                                  Shared Access Signature (SAS) granting read and list permissions on
                                  the container, use a managed identity with read and list permissions,
                                  or set the ACL for the container to allow public access.
                            }
                        ],
                        "userIdentity": {
                            "autoUser": {
                                "elevationLevel": "str",  # Optional. The default
                                  value is nonAdmin. Known values are: "nonadmin", "admin".
                                "scope": "str"  # Optional. The default value is
                                  pool. If the pool is running Windows a value of Task should be
                                  specified if stricter isolation between tasks is required. For
                                  example, if the task mutates the registry in a way which could impact
                                  other tasks, or if certificates have been specified on the pool which
                                  should not be accessible by normal tasks but should be accessible by
                                  StartTasks. Known values are: "task", "pool".
                            },
                            "username": "str"  # Optional. The userName and autoUser
                              properties are mutually exclusive; you must specify one but not both.
                        },
                        "waitForSuccess": bool  # Optional. If true and the Job Preparation
                          Task fails on a Node, the Batch service retries the Job Preparation Task up
                          to its maximum retry count (as specified in the constraints element). If the
                          Task has still not completed successfully after all retries, then the Batch
                          service will not schedule Tasks of the Job to the Node. The Node remains
                          active and eligible to run Tasks of other Jobs. If false, the Batch service
                          will not wait for the Job Preparation Task to complete. In this case, other
                          Tasks of the Job can start executing on the Compute Node while the Job
                          Preparation Task is still running; and even if the Job Preparation Task
                          fails, new Tasks will continue to be scheduled on the Compute Node. The
                          default value is true.
                    },
                    "jobReleaseTask": {
                        "commandLine": "str",  # Required. The command line does not run
                          under a shell, and therefore cannot take advantage of shell features such as
                          environment variable expansion. If you want to take advantage of such
                          features, you should invoke the shell in the command line, for example using
                          "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the
                          command line refers to file paths, it should use a relative path (relative to
                          the Task working directory), or use the Batch provided environment variable
                          (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                        "containerSettings": {
                            "containerRunOptions": "str",  # Optional. These additional
                              options are supplied as arguments to the "docker create" command, in
                              addition to those controlled by the Batch Service.
                            "imageName": "str",  # Required. This is the full Image
                              reference, as would be specified to "docker pull". If no tag is provided
                              as part of the Image name, the tag ":latest" is used as a default.
                            "registry": {
                                "identityReference": {
                                    "resourceId": "str"  # Optional. The ARM
                                      resource id of the user assigned identity.
                                },
                                "password": "str",  # Optional. The password to log
                                  into the registry server.
                                "registryServer": "str",  # Optional. If omitted, the
                                  default is "docker.io".
                                "username": "str"  # Optional. The user name to log
                                  into the registry server.
                            },
                            "workingDirectory": "str"  # Optional. The default is
                              'taskWorkingDirectory'. Known values are: "taskWorkingDirectory",
                              "containerImageDefault".
                        },
                        "environmentSettings": [
                            {
                                "name": "str",  # Required. The name of the
                                  environment variable.
                                "value": "str"  # Optional. The value of the
                                  environment variable.
                            }
                        ],
                        "id": "str",  # Optional. The ID can contain any combination of
                          alphanumeric characters including hyphens and underscores and cannot contain
                          more than 64 characters. If you do not specify this property, the Batch
                          service assigns a default value of 'jobrelease'. No other Task in the Job can
                          have the same ID as the Job Release Task. If you try to submit a Task with
                          the same id, the Batch service rejects the request with error code
                          TaskIdSameAsJobReleaseTask; if you are calling the REST API directly, the
                          HTTP status code is 409 (Conflict).
                        "maxWallClockTime": "1 day, 0:00:00",  # Optional. The maximum
                          elapsed time that the Job Release Task may run on a given Compute Node,
                          measured from the time the Task starts. If the Task does not complete within
                          the time limit, the Batch service terminates it. The default value is 15
                          minutes. You may not specify a timeout longer than 15 minutes. If you do, the
                          Batch service rejects it with an error; if you are calling the REST API
                          directly, the HTTP status code is 400 (Bad Request).
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified.
                                "blobPrefix": "str",  # Optional. The property is
                                  valid only when autoStorageContainerName or storageContainerUrl is
                                  used. This prefix can be a partial filename or a subdirectory. If a
                                  prefix is not specified, all the files in the container will be
                                  downloaded.
                                "fileMode": "str",  # Optional. This property applies
                                  only to files being downloaded to Linux Compute Nodes. It will be
                                  ignored if it is specified for a resourceFile which will be
                                  downloaded to a Windows Compute Node. If this property is not
                                  specified for a Linux Compute Node, then a default value of 0770 is
                                  applied to the file.
                                "filePath": "str",  # Optional. If the httpUrl
                                  property is specified, the filePath is required and describes the
                                  path which the file will be downloaded to, including the filename.
                                  Otherwise, if the autoStorageContainerName or storageContainerUrl
                                  property is specified, filePath is optional and is the directory to
                                  download the files to. In the case where filePath is used as a
                                  directory, any directory structure already associated with the input
                                  data will be retained in full and appended to the specified filePath
                                  directory. The specified relative path cannot break out of the Task's
                                  working directory (for example by using '..').
                                "httpUrl": "str",  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified. If the URL
                                  points to Azure Blob Storage, it must be readable from compute nodes.
                                  There are three ways to get such a URL for a blob in Azure storage:
                                  include a Shared Access Signature (SAS) granting read permissions on
                                  the blob, use a managed identity with read permission, or set the ACL
                                  for the blob or its container to allow public access.
                                "identityReference": {
                                    "resourceId": "str"  # Optional. The ARM
                                      resource id of the user assigned identity.
                                },
                                "storageContainerUrl": "str"  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified. This URL
                                  must be readable and listable from compute nodes. There are three
                                  ways to get such a URL for a container in Azure storage: include a
                                  Shared Access Signature (SAS) granting read and list permissions on
                                  the container, use a managed identity with read and list permissions,
                                  or set the ACL for the container to allow public access.
                            }
                        ],
                        "retentionTime": "1 day, 0:00:00",  # Optional. The default is 7
                          days, i.e. the Task directory will be retained for 7 days unless the Compute
                          Node is removed or the Job is deleted.
                        "userIdentity": {
                            "autoUser": {
                                "elevationLevel": "str",  # Optional. The default
                                  value is nonAdmin. Known values are: "nonadmin", "admin".
                                "scope": "str"  # Optional. The default value is
                                  pool. If the pool is running Windows a value of Task should be
                                  specified if stricter isolation between tasks is required. For
                                  example, if the task mutates the registry in a way which could impact
                                  other tasks, or if certificates have been specified on the pool which
                                  should not be accessible by normal tasks but should be accessible by
                                  StartTasks. Known values are: "task", "pool".
                            },
                            "username": "str"  # Optional. The userName and autoUser
                              properties are mutually exclusive; you must specify one but not both.
                        }
                    },
                    "lastModified": "2020-02-20 00:00:00",  # Optional. This is the last time at
                      which the Job level data, such as the Job state or priority, changed. It does not
                      factor in task-level changes such as adding new Tasks or Tasks changing state.
                    "maxParallelTasks": -1,  # Optional. Default value is -1. The value of
                      maxParallelTasks must be -1 or greater than 0 if specified. If not specified, the
                      default value is -1, which means there's no limit to the number of tasks that can
                      be run at once. You can update a job's maxParallelTasks after it has been created
                      using the update job API.
                    "metadata": [
                        {
                            "name": "str",  # Required. The name of the metadata item.
                            "value": "str"  # Required. The value of the metadata item.
                        }
                    ],
                    "networkConfiguration": {
                        "subnetId": "str"  # Required. The virtual network must be in the
                          same region and subscription as the Azure Batch Account. The specified subnet
                          should have enough free IP addresses to accommodate the number of Compute
                          Nodes which will run Tasks from the Job. This can be up to the number of
                          Compute Nodes in the Pool. The 'MicrosoftAzureBatch' service principal must
                          have the 'Classic Virtual Machine Contributor' Role-Based Access Control
                          (RBAC) role for the specified VNet so that Azure Batch service can schedule
                          Tasks on the Nodes. This can be verified by checking if the specified VNet
                          has any associated Network Security Groups (NSG). If communication to the
                          Nodes in the specified subnet is denied by an NSG, then the Batch service
                          will set the state of the Compute Nodes to unusable. This is of the form
                          /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.
                          If the specified VNet has any associated Network Security Groups (NSG), then
                          a few reserved system ports must be enabled for inbound communication from
                          the Azure Batch service. For Pools created with a Virtual Machine
                          configuration, enable ports 29876 and 29877, as well as port 22 for Linux and
                          port 3389 for Windows. Port 443 is also required to be open for outbound
                          connections for communications to Azure Storage. For more details see:
                          https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                    },
                    "onAllTasksComplete": "str",  # Optional. The default is noaction. Known
                      values are: "noaction", "terminatejob".
                    "onTaskFailure": "str",  # Optional. A Task is considered to have failed if
                      has a failureInfo. A failureInfo is set if the Task completes with a non-zero
                      exit code after exhausting its retry count, or if there was an error starting the
                      Task, for example due to a resource file download error. The default is noaction.
                      Known values are: "noaction", "performexitoptionsjobaction".
                    "poolInfo": {
                        "autoPoolSpecification": {
                            "autoPoolIdPrefix": "str",  # Optional. The Batch service
                              assigns each auto Pool a unique identifier on creation. To distinguish
                              between Pools created for different purposes, you can specify this
                              element to add a prefix to the ID that is assigned. The prefix can be up
                              to 20 characters long.
                            "keepAlive": bool,  # Optional. If false, the Batch service
                              deletes the Pool once its lifetime (as determined by the
                              poolLifetimeOption setting) expires; that is, when the Job or Job
                              Schedule completes. If true, the Batch service does not delete the Pool
                              automatically. It is up to the user to delete auto Pools created with
                              this option.
                            "pool": {
                                "applicationLicenses": [
                                    "str"  # Optional. The list of application
                                      licenses must be a subset of available Batch service application
                                      licenses. If a license is requested which is not supported, Pool
                                      creation will fail. The permitted licenses available on the Pool
                                      are 'maya', 'vray', '3dsmax', 'arnold'. An additional charge
                                      applies for each application license added to the Pool.
                                ],
                                "applicationPackageReferences": [
                                    {
                                        "applicationId": "str",  # Required.
                                          The ID of the application to deploy.
                                        "version": "str"  # Optional. If this
                                          is omitted on a Pool, and no default version is specified for
                                          this application, the request fails with the error code
                                          InvalidApplicationPackageReferences and HTTP status code 409.
                                          If this is omitted on a Task, and no default version is
                                          specified for this application, the Task fails with a
                                          pre-processing error.
                                    }
                                ],
                                "autoScaleEvaluationInterval": "1 day, 0:00:00",  #
                                  Optional. The default value is 15 minutes. The minimum and maximum
                                  value are 5 minutes and 168 hours respectively. If you specify a
                                  value less than 5 minutes or greater than 168 hours, the Batch
                                  service rejects the request with an invalid property value error; if
                                  you are calling the REST API directly, the HTTP status code is 400
                                  (Bad Request).
                                "autoScaleFormula": "str",  # Optional. This property
                                  must not be specified if enableAutoScale is set to false. It is
                                  required if enableAutoScale is set to true. The formula is checked
                                  for validity before the Pool is created. If the formula is not valid,
                                  the Batch service rejects the request with detailed error
                                  information.
                                "certificateReferences": [
                                    {
                                        "storeLocation": "str",  # Optional.
                                          The default value is currentuser. This property is applicable
                                          only for Pools configured with Windows Compute Nodes (that
                                          is, created with cloudServiceConfiguration, or with
                                          virtualMachineConfiguration using a Windows Image reference).
                                          For Linux Compute Nodes, the Certificates are stored in a
                                          directory inside the Task working directory and an
                                          environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to
                                          the Task to query for this location. For Certificates with
                                          visibility of 'remoteUser', a 'certs' directory is created in
                                          the user's home directory (e.g., /home/{user-name}/certs) and
                                          Certificates are placed in that directory. Known values are:
                                          "currentuser", "localmachine".
                                        "storeName": "str",  # Optional. This
                                          property is applicable only for Pools configured with Windows
                                          Compute Nodes (that is, created with
                                          cloudServiceConfiguration, or with
                                          virtualMachineConfiguration using a Windows Image reference).
                                          Common store names include: My, Root, CA, Trust, Disallowed,
                                          TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but
                                          any custom store name can also be used. The default value is
                                          My.
                                        "thumbprint": "str",  # Required. The
                                          thumbprint of the Certificate.
                                        "thumbprintAlgorithm": "str",  #
                                          Required. The algorithm with which the thumbprint is
                                          associated. This must be sha1.
                                        "visibility": [
                                            "str"  # Optional. You can
                                              specify more than one visibility in this collection. The
                                              default is all Accounts.
                                        ]
                                    }
                                ],
                                "cloudServiceConfiguration": {
                                    "osFamily": "str",  # Required. Possible
                                      values are:"n2 - OS Family 2, equivalent to Windows Server 2008
                                      R2 SP1."n3 - OS Family 3, equivalent to Windows Server 2012."n4 -
                                      OS Family 4, equivalent to Windows Server 2012 R2."n5 - OS Family
                                      5, equivalent to Windows Server 2016."n6 - OS Family 6,
                                      equivalent to Windows Server 2019. For more information, see
                                      Azure Guest OS Releases
                                      (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
                                    "osVersion": "str"  # Optional. The default
                                      value is * which specifies the latest operating system version
                                      for the specified OS family.
                                },
                                "displayName": "str",  # Optional. The display name
                                  need not be unique and can contain any Unicode characters up to a
                                  maximum length of 1024.
                                "enableAutoScale": bool,  # Optional. If false, at
                                  least one of targetDedicatedNodes and targetLowPriorityNodes must be
                                  specified. If true, the autoScaleFormula element is required. The
                                  Pool automatically resizes according to the formula. The default
                                  value is false.
                                "enableInterNodeCommunication": bool,  # Optional.
                                  Enabling inter-node communication limits the maximum size of the Pool
                                  due to deployment restrictions on the Compute Nodes of the Pool. This
                                  may result in the Pool not reaching its desired size. The default
                                  value is false.
                                "metadata": [
                                    {
                                        "name": "str",  # Required. The name
                                          of the metadata item.
                                        "value": "str"  # Required. The value
                                          of the metadata item.
                                    }
                                ],
                                "mountConfiguration": [
                                    {
                                        "azureBlobFileSystemConfiguration": {
                                            "accountKey": "str",  #
                                              Optional. This property is mutually exclusive with both
                                              sasKey and identity; exactly one must be specified.
                                            "accountName": "str",  #
                                              Required. The Azure Storage Account name.
                                            "blobfuseOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "containerName": "str",  #
                                              Required. The Azure Blob Storage Container name.
                                            "identityReference": {
                                                "resourceId": "str"
                                                  # Optional. The ARM resource id of the user assigned
                                                  identity.
                                            },
                                            "relativeMountPath": "str",
                                              # Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                            "sasKey": "str"  # Optional.
                                              This property is mutually exclusive with both accountKey
                                              and identity; exactly one must be specified.
                                        },
                                        "azureFileShareConfiguration": {
                                            "accountKey": "str",  #
                                              Required. The Azure Storage account key.
                                            "accountName": "str",  #
                                              Required. The Azure Storage account name.
                                            "azureFileUrl": "str",  #
                                              Required. This is of the form
                                              'https://{account}.file.core.windows.net/'.
                                            "mountOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "relativeMountPath": "str"  #
                                              Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                        },
                                        "cifsMountConfiguration": {
                                            "mountOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "password": "str",  #
                                              Required. The password to use for authentication against
                                              the CIFS file system.
                                            "relativeMountPath": "str",
                                              # Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                            "source": "str",  # Required.
                                              The URI of the file system to mount.
                                            "username": "str"  #
                                              Required. The user to use for authentication against the
                                              CIFS file system.
                                        },
                                        "nfsMountConfiguration": {
                                            "mountOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "relativeMountPath": "str",
                                              # Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                            "source": "str"  # Required.
                                              The URI of the file system to mount.
                                        }
                                    }
                                ],
                                "networkConfiguration": {
                                    "dynamicVNetAssignmentScope": "str",  #
                                      Optional. The scope of dynamic vnet assignment. Known values are:
                                      "none", "job".
                                    "endpointConfiguration": {
                                        "inboundNATPools": [
                                            {
                                                "backendPort": 0,  #
                                                  Required. This must be unique within a Batch Pool.
                                                  Acceptable values are between 1 and 65535 except for
                                                  22, 3389, 29876 and 29877 as these are reserved. If
                                                  any reserved values are provided the request fails
                                                  with HTTP status code 400.
                "frontendPortRangeEnd": 0,  # Required. Acceptable
                                                  values range between 1 and 65534 except ports from
                                                  50000 to 55000 which are reserved by the Batch
                                                  service. All ranges within a Pool must be distinct
                                                  and cannot overlap. Each range must contain at least
                                                  40 ports. If any reserved or overlapping values are
                                                  provided the request fails with HTTP status code 400.
                "frontendPortRangeStart": 0,  # Required. Acceptable
                                                  values range between 1 and 65534 except ports from
                                                  50000 to 55000 which are reserved. All ranges within
                                                  a Pool must be distinct and cannot overlap. Each
                                                  range must contain at least 40 ports. If any reserved
                                                  or overlapping values are provided the request fails
                                                  with HTTP status code 400.
                                                "name": "str",  #
                                                  Required. The name must be unique within a Batch
                                                  Pool, can contain letters, numbers, underscores,
                                                  periods, and hyphens. Names must start with a letter
                                                  or number, must end with a letter, number, or
                                                  underscore, and cannot exceed 77 characters.  If any
                                                  invalid values are provided the request fails with
                                                  HTTP status code 400.
                "networkSecurityGroupRules": [
                                                    {
                "access": "str",  # Required. The action that
                                                          should be taken for a specified IP address,
                                                          subnet range or tag. Known values are:
                                                          "allow", "deny".
                "priority": 0,  # Required. Priorities within
                                                          a Pool must be unique and are evaluated in
                                                          order of priority. The lower the number the
                                                          higher the priority. For example, rules could
                                                          be specified with order numbers of 150, 250,
                                                          and 350. The rule with the order number of
                                                          150 takes precedence over the rule that has
                                                          an order of 250. Allowed priorities are 150
                                                          to 4096. If any reserved or duplicate values
                                                          are provided the request fails with HTTP
                                                          status code 400.
                "sourceAddressPrefix": "str",  # Required.
                                                          Valid values are a single IP address (i.e.
                                                          10.10.10.10), IP subnet (i.e.
                                                          192.168.1.0/24), default tag, or * (for all
                                                          addresses).  If any other values are provided
                                                          the request fails with HTTP status code 400.
                "sourcePortRanges": [
                "str"  # Optional. Valid values are '""
                                                              *' (for all ports 0 - 65535), a specific
                                                              port (i.e. 22), or a port range (i.e.
                                                              100-200). The ports must be in the range
                                                              of 0 to 65535. Each entry in this
                                                              collection must not overlap any other
                                                              entry (either a range or an individual
                                                              port). If any other values are provided
                                                              the request fails with HTTP status code
                                                              400. The default value is '*"" '.
                                                        ]
                                                    }
                                                ],
                                                "protocol": "str"  #
                                                  Required. The protocol of the endpoint. Known values
                                                  are: "tcp", "udp".
                                            }
                                        ]
                                    },
                                    "publicIPAddressConfiguration": {
                                        "ipAddressIds": [
                                            "str"  # Optional. The number
                                              of IPs specified here limits the maximum size of the Pool
                                              - 100 dedicated nodes or 100 Spot/Low-priority nodes can
                                              be allocated for each public IP. For example, a pool
                                              needing 250 dedicated VMs would need at least 3 public
                                              IPs specified. Each element of this collection is of the
                                              form:
                                              /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}.
                                        ],
                                        "provision": "str"  # Optional. The
                                          default value is BatchManaged. Known values are:
                                          "batchmanaged", "usermanaged", "nopublicipaddresses".
                                    },
                                    "subnetId": "str"  # Optional. The virtual
                                      network must be in the same region and subscription as the Azure
                                      Batch Account. The specified subnet should have enough free IP
                                      addresses to accommodate the number of Compute Nodes in the Pool.
                                      If the subnet doesn't have enough free IP addresses, the Pool
                                      will partially allocate Nodes and a resize error will occur. The
                                      'MicrosoftAzureBatch' service principal must have the 'Classic
                                      Virtual Machine Contributor' Role-Based Access Control (RBAC)
                                      role for the specified VNet. The specified subnet must allow
                                      communication from the Azure Batch service to be able to schedule
                                      Tasks on the Nodes. This can be verified by checking if the
                                      specified VNet has any associated Network Security Groups (NSG).
                                      If communication to the Nodes in the specified subnet is denied
                                      by an NSG, then the Batch service will set the state of the
                                      Compute Nodes to unusable. For Pools created with
                                      virtualMachineConfiguration only ARM virtual networks
                                      ('Microsoft.Network/virtualNetworks') are supported, but for
                                      Pools created with cloudServiceConfiguration both ARM and classic
                                      virtual networks are supported. If the specified VNet has any
                                      associated Network Security Groups (NSG), then a few reserved
                                      system ports must be enabled for inbound communication. For Pools
                                      created with a virtual machine configuration, enable ports 29876
                                      and 29877, as well as port 22 for Linux and port 3389 for
                                      Windows. For Pools created with a cloud service configuration,
                                      enable ports 10100, 20100, and 30100. Also enable outbound
                                      connections to Azure Storage on port 443. For more details see:
                                      https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                                },
                                "resizeTimeout": "1 day, 0:00:00",  # Optional. This
                                  timeout applies only to manual scaling; it has no effect when
                                  enableAutoScale is set to true. The default value is 15 minutes. The
                                  minimum value is 5 minutes. If you specify a value less than 5
                                  minutes, the Batch service rejects the request with an error; if you
                                  are calling the REST API directly, the HTTP status code is 400 (Bad
                                  Request).
                                "startTask": {
                                    "commandLine": "str",  # Required. The
                                      command line does not run under a shell, and therefore cannot
                                      take advantage of shell features such as environment variable
                                      expansion. If you want to take advantage of such features, you
                                      should invoke the shell in the command line, for example using
                                      "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
                                      If the command line refers to file paths, it should use a
                                      relative path (relative to the Task working directory), or use
                                      the Batch provided environment variable
                                      (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                                    "containerSettings": {
                                        "containerRunOptions": "str",  #
                                          Optional. These additional options are supplied as arguments
                                          to the "docker create" command, in addition to those
                                          controlled by the Batch Service.
                                        "imageName": "str",  # Required. This
                                          is the full Image reference, as would be specified to "docker
                                          pull". If no tag is provided as part of the Image name, the
                                          tag ":latest" is used as a default.
                                        "registry": {
                                            "identityReference": {
                                                "resourceId": "str"
                                                  # Optional. The ARM resource id of the user assigned
                                                  identity.
                                            },
                                            "password": "str",  #
                                              Optional. The password to log into the registry server.
                                            "registryServer": "str",  #
                                              Optional. If omitted, the default is "docker.io".
                                            "username": "str"  #
                                              Optional. The user name to log into the registry server.
                                        },
                                        "workingDirectory": "str"  #
                                          Optional. The default is 'taskWorkingDirectory'. Known values
                                          are: "taskWorkingDirectory", "containerImageDefault".
                                    },
                                    "environmentSettings": [
                                        {
                                            "name": "str",  # Required.
                                              The name of the environment variable.
                                            "value": "str"  # Optional.
                                              The value of the environment variable.
                                        }
                                    ],
                                    "maxTaskRetryCount": 0,  # Optional. The
                                      Batch service retries a Task if its exit code is nonzero. Note
                                      that this value specifically controls the number of retries. The
                                      Batch service will try the Task once, and may then retry up to
                                      this limit. For example, if the maximum retry count is 3, Batch
                                      tries the Task up to 4 times (one initial try and 3 retries). If
                                      the maximum retry count is 0, the Batch service does not retry
                                      the Task. If the maximum retry count is -1, the Batch service
                                      retries the Task without limit, however this is not recommended
                                      for a start task or any task. The default value is 0 (no
                                      retries).
                                    "resourceFiles": [
                                        {
                                            "autoStorageContainerName":
                                              "str",  # Optional. The autoStorageContainerName,
                                              storageContainerUrl and httpUrl properties are mutually
                                              exclusive and one of them must be specified.
                                            "blobPrefix": "str",  #
                                              Optional. The property is valid only when
                                              autoStorageContainerName or storageContainerUrl is used.
                                              This prefix can be a partial filename or a subdirectory.
                                              If a prefix is not specified, all the files in the
                                              container will be downloaded.
                                            "fileMode": "str",  #
                                              Optional. This property applies only to files being
                                              downloaded to Linux Compute Nodes. It will be ignored if
                                              it is specified for a resourceFile which will be
                                              downloaded to a Windows Compute Node. If this property is
                                              not specified for a Linux Compute Node, then a default
                                              value of 0770 is applied to the file.
                                            "filePath": "str",  #
                                              Optional. If the httpUrl property is specified, the
                                              filePath is required and describes the path which the
                                              file will be downloaded to, including the filename.
                                              Otherwise, if the autoStorageContainerName or
                                              storageContainerUrl property is specified, filePath is
                                              optional and is the directory to download the files to.
                                              In the case where filePath is used as a directory, any
                                              directory structure already associated with the input
                                              data will be retained in full and appended to the
                                              specified filePath directory. The specified relative path
                                              cannot break out of the Task's working directory (for
                                              example by using '..').
                                            "httpUrl": "str",  #
                                              Optional. The autoStorageContainerName,
                                              storageContainerUrl and httpUrl properties are mutually
                                              exclusive and one of them must be specified. If the URL
                                              points to Azure Blob Storage, it must be readable from
                                              compute nodes. There are three ways to get such a URL for
                                              a blob in Azure storage: include a Shared Access
                                              Signature (SAS) granting read permissions on the blob,
                                              use a managed identity with read permission, or set the
                                              ACL for the blob or its container to allow public access.
                                            "identityReference": {
                                                "resourceId": "str"
                                                  # Optional. The ARM resource id of the user assigned
                                                  identity.
                                            },
                                            "storageContainerUrl": "str"
                                              # Optional. The autoStorageContainerName,
                                              storageContainerUrl and httpUrl properties are mutually
                                              exclusive and one of them must be specified. This URL
                                              must be readable and listable from compute nodes. There
                                              are three ways to get such a URL for a container in Azure
                                              storage: include a Shared Access Signature (SAS) granting
                                              read and list permissions on the container, use a managed
                                              identity with read and list permissions, or set the ACL
                                              for the container to allow public access.
                                        }
                                    ],
                                    "userIdentity": {
                                        "autoUser": {
                                            "elevationLevel": "str",  #
                                              Optional. The default value is nonAdmin. Known values
                                              are: "nonadmin", "admin".
                                            "scope": "str"  # Optional.
                                              The default value is pool. If the pool is running Windows
                                              a value of Task should be specified if stricter isolation
                                              between tasks is required. For example, if the task
                                              mutates the registry in a way which could impact other
                                              tasks, or if certificates have been specified on the pool
                                              which should not be accessible by normal tasks but should
                                              be accessible by StartTasks. Known values are: "task",
                                              "pool".
                                        },
                                        "username": "str"  # Optional. The
                                          userName and autoUser properties are mutually exclusive; you
                                          must specify one but not both.
                                    },
                                    "waitForSuccess": bool  # Optional. If true
                                      and the StartTask fails on a Node, the Batch service retries the
                                      StartTask up to its maximum retry count (maxTaskRetryCount). If
                                      the Task has still not completed successfully after all retries,
                                      then the Batch service marks the Node unusable, and will not
                                      schedule Tasks to it. This condition can be detected via the
                                      Compute Node state and failure info details. If false, the Batch
                                      service will not wait for the StartTask to complete. In this
                                      case, other Tasks can start executing on the Compute Node while
                                      the StartTask is still running; and even if the StartTask fails,
                                      new Tasks will continue to be scheduled on the Compute Node. The
                                      default is true.
                                },
                                "targetDedicatedNodes": 0,  # Optional. This property
                                  must not be specified if enableAutoScale is set to true. If
                                  enableAutoScale is set to false, then you must set either
                                  targetDedicatedNodes, targetLowPriorityNodes, or both.
                                "targetLowPriorityNodes": 0,  # Optional. This
                                  property must not be specified if enableAutoScale is set to true. If
                                  enableAutoScale is set to false, then you must set either
                                  targetDedicatedNodes, targetLowPriorityNodes, or both.
                                "taskSchedulingPolicy": {
                                    "nodeFillType": "str"  # Required. If not
                                      specified, the default is spread. Known values are: "spread",
                                      "pack".
                                },
                                "taskSlotsPerNode": 0,  # Optional. The default value
                                  is 1. The maximum value is the smaller of 4 times the number of cores
                                  of the vmSize of the pool or 256.
                                "userAccounts": [
                                    {
                                        "elevationLevel": "str",  # Optional.
                                          The default value is nonAdmin. Known values are: "nonadmin",
                                          "admin".
                                        "linuxUserConfiguration": {
                                            "gid": 0,  # Optional. The
                                              uid and gid properties must be specified together or not
                                              at all. If not specified the underlying operating system
                                              picks the gid.
                                            "sshPrivateKey": "str",  #
                                              Optional. The private key must not be password protected.
                                              The private key is used to automatically configure
                                              asymmetric-key based authentication for SSH between
                                              Compute Nodes in a Linux Pool when the Pool's
                                              enableInterNodeCommunication property is true (it is
                                              ignored if enableInterNodeCommunication is false). It
                                              does this by placing the key pair into the user's .ssh
                                              directory. If not specified, password-less SSH is not
                                              configured between Compute Nodes (no modification of the
                                              user's .ssh directory is done).
                                            "uid": 0  # Optional. The uid
                                              and gid properties must be specified together or not at
                                              all. If not specified the underlying operating system
                                              picks the uid.
                                        },
                                        "name": "str",  # Required. The name
                                          of the user Account.
                                        "password": "str",  # Required. The
                                          password for the user Account.
                                        "windowsUserConfiguration": {
                                            "loginMode": "str"  #
                                              Optional. The default value for
                                              VirtualMachineConfiguration Pools is 'batch' and for
                                              CloudServiceConfiguration Pools is 'interactive'. Known
                                              values are: "batch", "interactive".
                                        }
                                    }
                                ],
                                "virtualMachineConfiguration": {
                                    "containerConfiguration": {
                                        "containerImageNames": [
                                            "str"  # Optional. This is
                                              the full Image reference, as would be specified to
                                              "docker pull". An Image will be sourced from the default
                                              Docker registry unless the Image is fully qualified with
                                              an alternative registry.
                                        ],
                                        "containerRegistries": [
                                            {
                                                "identityReference":
                                                  {
                                                    "resourceId":
                                                      "str"  # Optional. The ARM resource id of the
                                                      user assigned identity.
                                                },
                                                "password": "str",  #
                                                  Optional. The password to log into the registry
                                                  server.
                                                "registryServer":
                                                  "str",  # Optional. If omitted, the default is
                                                  "docker.io".
                                                "username": "str"  #
                                                  Optional. The user name to log into the registry
                                                  server.
                                            }
                                        ],
                                        "type": "dockerCompatible"  # Default
                                          value is "dockerCompatible". The container technology to be
                                          used. Has constant value: "dockerCompatible".
                                    },
                                    "dataDisks": [
                                        {
                                            "caching": "str",  #
                                              Optional. The default value for caching is readwrite. For
                                              information about the caching options see:
                                              https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
                                              Known values are: "none", "readonly", "readwrite".
                                            "diskSizeGB": 0,  # Required.
                                              The initial disk size in gigabytes.
                                            "lun": 0,  # Required. The
                                              lun is used to uniquely identify each data disk. If
                                              attaching multiple disks, each should have a distinct
                                              lun. The value must be between 0 and 63, inclusive.
                                            "storageAccountType": "str"
                                              # Optional. If omitted, the default is "standard_lrs".
                                              Known values are: "standard_lrs", "premium_lrs".
                                        }
                                    ],
                                    "diskEncryptionConfiguration": {
                                        "targets": [
                                            "str"  # Optional. If
                                              omitted, no disks on the compute nodes in the pool will
                                              be encrypted. On Linux pool, only "TemporaryDisk" is
                                              supported; on Windows pool, "OsDisk" and "TemporaryDisk"
                                              must be specified.
                                        ]
                                    },
                                    "extensions": [
                                        {
                                            "autoUpgradeMinorVersion":
                                              bool,  # Optional. Indicates whether the extension should
                                              use a newer minor version if one is available at
                                              deployment time. Once deployed, however, the extension
                                              will not upgrade minor versions unless redeployed, even
                                              with this property set to true.
                                            "name": "str",  # Required.
                                              The name of the virtual machine extension.
                                            "protectedSettings": {},  #
                                              Optional. The extension can contain either
                                              protectedSettings or protectedSettingsFromKeyVault or no
                                              protected settings at all.
                                            "provisionAfterExtensions": [
                                                "str"  # Optional.
                                                  Collection of extension names after which this
                                                  extension needs to be provisioned.
                                            ],
                                            "publisher": "str",  #
                                              Required. The name of the extension handler publisher.
                                            "settings": {},  # Optional.
                                              Any object.
                                            "type": "str",  # Required.
                                              The type of the extension.
                                            "typeHandlerVersion": "str"
                                              # Optional. The version of script handler.
                                        }
                                    ],
                                    "imageReference": {
                                        "exactVersion": "str",  # Optional.
                                          The specific version of the platform image or marketplace
                                          image used to create the node. This read-only field differs
                                          from 'version' only if the value specified for 'version' when
                                          the pool was created was 'latest'.
                                        "offer": "str",  # Optional. For
                                          example, UbuntuServer or WindowsServer.
                                        "publisher": "str",  # Optional. For
                                          example, Canonical or MicrosoftWindowsServer.
                                        "sku": "str",  # Optional. For
                                          example, 18.04-LTS or 2019-Datacenter.
                                        "version": "str",  # Optional. A
                                          value of 'latest' can be specified to select the latest
                                          version of an Image. If omitted, the default is 'latest'.
                                        "virtualMachineImageId": "str"  #
                                          Optional. This property is mutually exclusive with other
                                          ImageReference properties. The Shared Image Gallery Image
                                          must have replicas in the same region and must be in the same
                                          subscription as the Azure Batch account. If the image version
                                          is not specified in the imageId, the latest version will be
                                          used. For information about the firewall settings for the
                                          Batch Compute Node agent to communicate with the Batch
                                          service see
                                          https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                                    },
                                    "licenseType": "str",  # Optional. This only
                                      applies to Images that contain the Windows operating system, and
                                      should only be used when you hold valid on-premises licenses for
                                      the Compute Nodes which will be deployed. If omitted, no
                                      on-premises licensing discount is applied. Values are:"n"n
                                      Windows_Server - The on-premises license is for Windows Server."n
                                      Windows_Client - The on-premises license is for Windows Client.
                                    "nodeAgentSKUId": "str",  # Required. The
                                      Batch Compute Node agent is a program that runs on each Compute
                                      Node in the Pool, and provides the command-and-control interface
                                      between the Compute Node and the Batch service. There are
                                      different implementations of the Compute Node agent, known as
                                      SKUs, for different operating systems. You must specify a Compute
                                      Node agent SKU which matches the selected Image reference. To get
                                      the list of supported Compute Node agent SKUs along with their
                                      list of verified Image references, see the 'List supported
                                      Compute Node agent SKUs' operation.
                                    "nodePlacementConfiguration": {
                                        "policy": "str"  # Optional.
                                          Allocation policy used by Batch Service to provision the
                                          nodes. If not specified, Batch will use the regional policy.
                                          Known values are: "regional", "zonal".
                                    },
                                    "osDisk": {
                                        "ephemeralOSDiskSettings": {
                                            "placement": "CacheDisk"  #
                                              Optional. Default value is "CacheDisk". This property can
                                              be used by user in the request to choose the location
                                              e.g., cache disk space for Ephemeral OS disk
                                              provisioning. For more information on Ephemeral OS disk
                                              size requirements, please refer to Ephemeral OS disk size
                                              requirements for Windows VMs at
                                              https://docs.microsoft.com/en-us/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements
                                              and Linux VMs at
                                              https://docs.microsoft.com/en-us/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements.
                                              The only acceptable values to pass in are None and
                                              "CacheDisk". The default value is None.
                                        }
                                    },
                                    "windowsConfiguration": {
                                        "enableAutomaticUpdates": bool  #
                                          Optional. If omitted, the default value is true.
                                    }
                                },
                                "vmSize": "str"  # Required. For information about
                                  available sizes of virtual machines in Pools, see Choose a VM size
                                  for Compute Nodes in an Azure Batch Pool
                                  (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
                            },
                            "poolLifetimeOption": "str"  # Required. The minimum lifetime
                              of created auto Pools, and how multiple Jobs on a schedule are assigned
                              to Pools. Known values are: "jobschedule", "job".
                        },
                        "poolId": "str"  # Optional. You must ensure that the Pool referenced
                          by this property exists. If the Pool does not exist at the time the Batch
                          service tries to schedule a Job, no Tasks for the Job will run until you
                          create a Pool with that id. Note that the Batch service will not reject the
                          Job request; it will simply not run Tasks until the Pool exists. You must
                          specify either the Pool ID or the auto Pool specification, but not both.
                    },
                    "previousState": "str",  # Optional. This property is not set if the Job is
                      in its initial Active state. Known values are: "active", "disabling", "disabled",
                      "enabling", "terminating", "completed", "deleting".
                    "previousStateTransitionTime": "2020-02-20 00:00:00",  # Optional. This
                      property is not set if the Job is in its initial Active state.
                    "priority": 0,  # Optional. Priority values can range from -1000 to 1000,
                      with -1000 being the lowest priority and 1000 being the highest priority. The
                      default value is 0.
                    "state": "str",  # Optional. The state of the Job. Known values are:
                      "active", "disabling", "disabled", "enabling", "terminating", "completed",
                      "deleting".
                    "stateTransitionTime": "2020-02-20 00:00:00",  # Optional. The time at which
                      the Job entered its current state.
                    "stats": {
                        "kernelCPUTime": "1 day, 0:00:00",  # Required. The total kernel mode
                          CPU time (summed across all cores and all Compute Nodes) consumed by all
                          Tasks in the Job.
                        "lastUpdateTime": "2020-02-20 00:00:00",  # Required. The time at
                          which the statistics were last updated. All statistics are limited to the
                          range between startTime and lastUpdateTime.
                        "numFailedTasks": 0.0,  # Required. A Task fails if it exhausts its
                          maximum retry count without returning exit code 0.
                        "numSucceededTasks": 0.0,  # Required. A Task completes successfully
                          if it returns exit code 0.
                        "numTaskRetries": 0.0,  # Required. The total number of retries on
                          all the Tasks in the Job during the given time range.
                        "readIOGiB": 0.0,  # Required. The total amount of data in GiB read
                          from disk by all Tasks in the Job.
                        "readIOps": 0.0,  # Required. The total number of disk read
                          operations made by all Tasks in the Job.
                        "startTime": "2020-02-20 00:00:00",  # Required. The start time of
                          the time range covered by the statistics.
                        "url": "str",  # Required. The URL of the statistics.
                        "userCPUTime": "1 day, 0:00:00",  # Required. The total user mode CPU
                          time (summed across all cores and all Compute Nodes) consumed by all Tasks in
                          the Job.
                        "waitTime": "1 day, 0:00:00",  # Required. The wait time for a Task
                          is defined as the elapsed time between the creation of the Task and the start
                          of Task execution. (If the Task is retried due to failures, the wait time is
                          the time to the most recent Task execution.) This value is only reported in
                          the Account lifetime statistics; it is not included in the Job statistics.
                        "wallClockTime": "1 day, 0:00:00",  # Required. The wall clock time
                          is the elapsed time from when the Task started running on a Compute Node to
                          when it finished (or to the last time the statistics were updated, if the
                          Task had not finished by then). If a Task was retried, this includes the wall
                          clock time of all the Task retries.
                        "writeIOGiB": 0.0,  # Required. The total amount of data in GiB
                          written to disk by all Tasks in the Job.
                        "writeIOps": 0.0  # Required. The total number of disk write
                          operations made by all Tasks in the Job.
                    },
                    "url": "str",  # Optional. The URL of the Job.
                    "usesTaskDependencies": bool  # Optional. Whether Tasks in the Job can define
                      dependencies on each other. The default is false.
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_get_request(
            job_id=job_id,
            api_version=api_version,
            select=select,
            expand=expand,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        response_headers = {}
        response_headers['client-request-id']=self._deserialize('str', response.headers.get('client-request-id'))
        response_headers['request-id']=self._deserialize('str', response.headers.get('request-id'))
        response_headers['ETag']=self._deserialize('str', response.headers.get('ETag'))
        response_headers['Last-Modified']=self._deserialize('rfc-1123', response.headers.get('Last-Modified'))

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), response_headers)

        return cast(JSON, deserialized)



    @distributed_trace
    def patch(  # pylint: disable=inconsistent-return-statements
        self,
        job_id: str,
        job_patch_parameter: JSON,
        *,
        timeout: Optional[int] = 30,
        client_request_id: Optional[str] = None,
        return_client_request_id: Optional[bool] = False,
        ocp_date: Optional[datetime.datetime] = None,
        if_match: Optional[str] = None,
        if_none_match: Optional[str] = None,
        if_modified_since: Optional[datetime.datetime] = None,
        if_unmodified_since: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """Updates the properties of the specified Job.

        This replaces only the Job properties specified in the request. For example, if the Job has
        constraints, and a request does not specify the constraints element, then the Job keeps the
        existing constraints.

        :param job_id: The ID of the Job whose properties you want to update.
        :type job_id: str
        :param job_patch_parameter: The parameters for the request.
        :type job_patch_parameter: JSON
        :keyword timeout: The maximum time that the server can spend processing the request, in
         seconds. The default is 30 seconds.
        :paramtype timeout: int
        :keyword client_request_id: The caller-generated request identity, in the form of a GUID with
         no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. Default value is
         None.
        :paramtype client_request_id: str
        :keyword return_client_request_id: Whether the server should return the client-request-id in
         the response. Default value is False.
        :paramtype return_client_request_id: bool
        :keyword ocp_date: The time the request was issued. Client libraries typically set this to the
         current system clock time; set it explicitly if you are calling the REST API directly. Default
         value is None.
        :paramtype ocp_date: ~datetime.datetime
        :keyword if_match: An ETag value associated with the version of the resource known to the
         client. The operation will be performed only if the resource's current ETag on the service
         exactly matches the value specified by the client. Default value is None.
        :paramtype if_match: str
        :keyword if_none_match: An ETag value associated with the version of the resource known to the
         client. The operation will be performed only if the resource's current ETag on the service does
         not match the value specified by the client. Default value is None.
        :paramtype if_none_match: str
        :keyword if_modified_since: A timestamp indicating the last modified time of the resource known
         to the client. The operation will be performed only if the resource on the service has been
         modified since the specified time. Default value is None.
        :paramtype if_modified_since: ~datetime.datetime
        :keyword if_unmodified_since: A timestamp indicating the last modified time of the resource
         known to the client. The operation will be performed only if the resource on the service has
         not been modified since the specified time. Default value is None.
        :paramtype if_unmodified_since: ~datetime.datetime
        :return: None
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                job_patch_parameter = {
                    "allowTaskPreemption": bool,  # Optional. If the value is set to True, other
                      high priority jobs submitted to the system will take precedence and will be able
                      requeue tasks from this job. You can update a job's allowTaskPreemption after it
                      has been created using the update job API.
                    "constraints": {
                        "maxTaskRetryCount": 0,  # Optional. Note that this value
                          specifically controls the number of retries. The Batch service will try each
                          Task once, and may then retry up to this limit. For example, if the maximum
                          retry count is 3, Batch tries a Task up to 4 times (one initial try and 3
                          retries). If the maximum retry count is 0, the Batch service does not retry
                          Tasks. If the maximum retry count is -1, the Batch service retries the Task
                          without limit, however this is not recommended for a start task or any task.
                          The default value is 0 (no retries).
                        "maxWallClockTime": "1 day, 0:00:00"  # Optional. If the Job does not
                          complete within the time limit, the Batch service terminates it and any Tasks
                          that are still running. In this case, the termination reason will be
                          MaxWallClockTimeExpiry. If this property is not specified, there is no time
                          limit on how long the Job may run.
                    },
                    "maxParallelTasks": 0,  # Optional. The value of maxParallelTasks must be -1
                      or greater than 0 if specified. If not specified, the default value is -1, which
                      means there's no limit to the number of tasks that can be run at once. You can
                      update a job's maxParallelTasks after it has been created using the update job
                      API.
                    "metadata": [
                        {
                            "name": "str",  # Required. The name of the metadata item.
                            "value": "str"  # Required. The value of the metadata item.
                        }
                    ],
                    "onAllTasksComplete": "str",  # Optional. If omitted, the completion behavior
                      is left unchanged. You may not change the value from terminatejob to noaction -
                      that is, once you have engaged automatic Job termination, you cannot turn it off
                      again. If you try to do this, the request fails with an 'invalid property value'
                      error response; if you are calling the REST API directly, the HTTP status code is
                      400 (Bad Request). Known values are: "noaction", "terminatejob".
                    "poolInfo": {
                        "autoPoolSpecification": {
                            "autoPoolIdPrefix": "str",  # Optional. The Batch service
                              assigns each auto Pool a unique identifier on creation. To distinguish
                              between Pools created for different purposes, you can specify this
                              element to add a prefix to the ID that is assigned. The prefix can be up
                              to 20 characters long.
                            "keepAlive": bool,  # Optional. If false, the Batch service
                              deletes the Pool once its lifetime (as determined by the
                              poolLifetimeOption setting) expires; that is, when the Job or Job
                              Schedule completes. If true, the Batch service does not delete the Pool
                              automatically. It is up to the user to delete auto Pools created with
                              this option.
                            "pool": {
                                "applicationLicenses": [
                                    "str"  # Optional. The list of application
                                      licenses must be a subset of available Batch service application
                                      licenses. If a license is requested which is not supported, Pool
                                      creation will fail. The permitted licenses available on the Pool
                                      are 'maya', 'vray', '3dsmax', 'arnold'. An additional charge
                                      applies for each application license added to the Pool.
                                ],
                                "applicationPackageReferences": [
                                    {
                                        "applicationId": "str",  # Required.
                                          The ID of the application to deploy.
                                        "version": "str"  # Optional. If this
                                          is omitted on a Pool, and no default version is specified for
                                          this application, the request fails with the error code
                                          InvalidApplicationPackageReferences and HTTP status code 409.
                                          If this is omitted on a Task, and no default version is
                                          specified for this application, the Task fails with a
                                          pre-processing error.
                                    }
                                ],
                                "autoScaleEvaluationInterval": "1 day, 0:00:00",  #
                                  Optional. The default value is 15 minutes. The minimum and maximum
                                  value are 5 minutes and 168 hours respectively. If you specify a
                                  value less than 5 minutes or greater than 168 hours, the Batch
                                  service rejects the request with an invalid property value error; if
                                  you are calling the REST API directly, the HTTP status code is 400
                                  (Bad Request).
                                "autoScaleFormula": "str",  # Optional. This property
                                  must not be specified if enableAutoScale is set to false. It is
                                  required if enableAutoScale is set to true. The formula is checked
                                  for validity before the Pool is created. If the formula is not valid,
                                  the Batch service rejects the request with detailed error
                                  information.
                                "certificateReferences": [
                                    {
                                        "storeLocation": "str",  # Optional.
                                          The default value is currentuser. This property is applicable
                                          only for Pools configured with Windows Compute Nodes (that
                                          is, created with cloudServiceConfiguration, or with
                                          virtualMachineConfiguration using a Windows Image reference).
                                          For Linux Compute Nodes, the Certificates are stored in a
                                          directory inside the Task working directory and an
                                          environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to
                                          the Task to query for this location. For Certificates with
                                          visibility of 'remoteUser', a 'certs' directory is created in
                                          the user's home directory (e.g., /home/{user-name}/certs) and
                                          Certificates are placed in that directory. Known values are:
                                          "currentuser", "localmachine".
                                        "storeName": "str",  # Optional. This
                                          property is applicable only for Pools configured with Windows
                                          Compute Nodes (that is, created with
                                          cloudServiceConfiguration, or with
                                          virtualMachineConfiguration using a Windows Image reference).
                                          Common store names include: My, Root, CA, Trust, Disallowed,
                                          TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but
                                          any custom store name can also be used. The default value is
                                          My.
                                        "thumbprint": "str",  # Required. The
                                          thumbprint of the Certificate.
                                        "thumbprintAlgorithm": "str",  #
                                          Required. The algorithm with which the thumbprint is
                                          associated. This must be sha1.
                                        "visibility": [
                                            "str"  # Optional. You can
                                              specify more than one visibility in this collection. The
                                              default is all Accounts.
                                        ]
                                    }
                                ],
                                "cloudServiceConfiguration": {
                                    "osFamily": "str",  # Required. Possible
                                      values are:"n2 - OS Family 2, equivalent to Windows Server 2008
                                      R2 SP1."n3 - OS Family 3, equivalent to Windows Server 2012."n4 -
                                      OS Family 4, equivalent to Windows Server 2012 R2."n5 - OS Family
                                      5, equivalent to Windows Server 2016."n6 - OS Family 6,
                                      equivalent to Windows Server 2019. For more information, see
                                      Azure Guest OS Releases
                                      (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
                                    "osVersion": "str"  # Optional. The default
                                      value is * which specifies the latest operating system version
                                      for the specified OS family.
                                },
                                "displayName": "str",  # Optional. The display name
                                  need not be unique and can contain any Unicode characters up to a
                                  maximum length of 1024.
                                "enableAutoScale": bool,  # Optional. If false, at
                                  least one of targetDedicatedNodes and targetLowPriorityNodes must be
                                  specified. If true, the autoScaleFormula element is required. The
                                  Pool automatically resizes according to the formula. The default
                                  value is false.
                                "enableInterNodeCommunication": bool,  # Optional.
                                  Enabling inter-node communication limits the maximum size of the Pool
                                  due to deployment restrictions on the Compute Nodes of the Pool. This
                                  may result in the Pool not reaching its desired size. The default
                                  value is false.
                                "metadata": [
                                    {
                                        "name": "str",  # Required. The name
                                          of the metadata item.
                                        "value": "str"  # Required. The value
                                          of the metadata item.
                                    }
                                ],
                                "mountConfiguration": [
                                    {
                                        "azureBlobFileSystemConfiguration": {
                                            "accountKey": "str",  #
                                              Optional. This property is mutually exclusive with both
                                              sasKey and identity; exactly one must be specified.
                                            "accountName": "str",  #
                                              Required. The Azure Storage Account name.
                                            "blobfuseOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "containerName": "str",  #
                                              Required. The Azure Blob Storage Container name.
                                            "identityReference": {
                                                "resourceId": "str"
                                                  # Optional. The ARM resource id of the user assigned
                                                  identity.
                                            },
                                            "relativeMountPath": "str",
                                              # Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                            "sasKey": "str"  # Optional.
                                              This property is mutually exclusive with both accountKey
                                              and identity; exactly one must be specified.
                                        },
                                        "azureFileShareConfiguration": {
                                            "accountKey": "str",  #
                                              Required. The Azure Storage account key.
                                            "accountName": "str",  #
                                              Required. The Azure Storage account name.
                                            "azureFileUrl": "str",  #
                                              Required. This is of the form
                                              'https://{account}.file.core.windows.net/'.
                                            "mountOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "relativeMountPath": "str"  #
                                              Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                        },
                                        "cifsMountConfiguration": {
                                            "mountOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "password": "str",  #
                                              Required. The password to use for authentication against
                                              the CIFS file system.
                                            "relativeMountPath": "str",
                                              # Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                            "source": "str",  # Required.
                                              The URI of the file system to mount.
                                            "username": "str"  #
                                              Required. The user to use for authentication against the
                                              CIFS file system.
                                        },
                                        "nfsMountConfiguration": {
                                            "mountOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "relativeMountPath": "str",
                                              # Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                            "source": "str"  # Required.
                                              The URI of the file system to mount.
                                        }
                                    }
                                ],
                                "networkConfiguration": {
                                    "dynamicVNetAssignmentScope": "str",  #
                                      Optional. The scope of dynamic vnet assignment. Known values are:
                                      "none", "job".
                                    "endpointConfiguration": {
                                        "inboundNATPools": [
                                            {
                                                "backendPort": 0,  #
                                                  Required. This must be unique within a Batch Pool.
                                                  Acceptable values are between 1 and 65535 except for
                                                  22, 3389, 29876 and 29877 as these are reserved. If
                                                  any reserved values are provided the request fails
                                                  with HTTP status code 400.
                "frontendPortRangeEnd": 0,  # Required. Acceptable
                                                  values range between 1 and 65534 except ports from
                                                  50000 to 55000 which are reserved by the Batch
                                                  service. All ranges within a Pool must be distinct
                                                  and cannot overlap. Each range must contain at least
                                                  40 ports. If any reserved or overlapping values are
                                                  provided the request fails with HTTP status code 400.
                "frontendPortRangeStart": 0,  # Required. Acceptable
                                                  values range between 1 and 65534 except ports from
                                                  50000 to 55000 which are reserved. All ranges within
                                                  a Pool must be distinct and cannot overlap. Each
                                                  range must contain at least 40 ports. If any reserved
                                                  or overlapping values are provided the request fails
                                                  with HTTP status code 400.
                                                "name": "str",  #
                                                  Required. The name must be unique within a Batch
                                                  Pool, can contain letters, numbers, underscores,
                                                  periods, and hyphens. Names must start with a letter
                                                  or number, must end with a letter, number, or
                                                  underscore, and cannot exceed 77 characters.  If any
                                                  invalid values are provided the request fails with
                                                  HTTP status code 400.
                "networkSecurityGroupRules": [
                                                    {
                "access": "str",  # Required. The action that
                                                          should be taken for a specified IP address,
                                                          subnet range or tag. Known values are:
                                                          "allow", "deny".
                "priority": 0,  # Required. Priorities within
                                                          a Pool must be unique and are evaluated in
                                                          order of priority. The lower the number the
                                                          higher the priority. For example, rules could
                                                          be specified with order numbers of 150, 250,
                                                          and 350. The rule with the order number of
                                                          150 takes precedence over the rule that has
                                                          an order of 250. Allowed priorities are 150
                                                          to 4096. If any reserved or duplicate values
                                                          are provided the request fails with HTTP
                                                          status code 400.
                "sourceAddressPrefix": "str",  # Required.
                                                          Valid values are a single IP address (i.e.
                                                          10.10.10.10), IP subnet (i.e.
                                                          192.168.1.0/24), default tag, or * (for all
                                                          addresses).  If any other values are provided
                                                          the request fails with HTTP status code 400.
                "sourcePortRanges": [
                "str"  # Optional. Valid values are '""
                                                              *' (for all ports 0 - 65535), a specific
                                                              port (i.e. 22), or a port range (i.e.
                                                              100-200). The ports must be in the range
                                                              of 0 to 65535. Each entry in this
                                                              collection must not overlap any other
                                                              entry (either a range or an individual
                                                              port). If any other values are provided
                                                              the request fails with HTTP status code
                                                              400. The default value is '*"" '.
                                                        ]
                                                    }
                                                ],
                                                "protocol": "str"  #
                                                  Required. The protocol of the endpoint. Known values
                                                  are: "tcp", "udp".
                                            }
                                        ]
                                    },
                                    "publicIPAddressConfiguration": {
                                        "ipAddressIds": [
                                            "str"  # Optional. The number
                                              of IPs specified here limits the maximum size of the Pool
                                              - 100 dedicated nodes or 100 Spot/Low-priority nodes can
                                              be allocated for each public IP. For example, a pool
                                              needing 250 dedicated VMs would need at least 3 public
                                              IPs specified. Each element of this collection is of the
                                              form:
                                              /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}.
                                        ],
                                        "provision": "str"  # Optional. The
                                          default value is BatchManaged. Known values are:
                                          "batchmanaged", "usermanaged", "nopublicipaddresses".
                                    },
                                    "subnetId": "str"  # Optional. The virtual
                                      network must be in the same region and subscription as the Azure
                                      Batch Account. The specified subnet should have enough free IP
                                      addresses to accommodate the number of Compute Nodes in the Pool.
                                      If the subnet doesn't have enough free IP addresses, the Pool
                                      will partially allocate Nodes and a resize error will occur. The
                                      'MicrosoftAzureBatch' service principal must have the 'Classic
                                      Virtual Machine Contributor' Role-Based Access Control (RBAC)
                                      role for the specified VNet. The specified subnet must allow
                                      communication from the Azure Batch service to be able to schedule
                                      Tasks on the Nodes. This can be verified by checking if the
                                      specified VNet has any associated Network Security Groups (NSG).
                                      If communication to the Nodes in the specified subnet is denied
                                      by an NSG, then the Batch service will set the state of the
                                      Compute Nodes to unusable. For Pools created with
                                      virtualMachineConfiguration only ARM virtual networks
                                      ('Microsoft.Network/virtualNetworks') are supported, but for
                                      Pools created with cloudServiceConfiguration both ARM and classic
                                      virtual networks are supported. If the specified VNet has any
                                      associated Network Security Groups (NSG), then a few reserved
                                      system ports must be enabled for inbound communication. For Pools
                                      created with a virtual machine configuration, enable ports 29876
                                      and 29877, as well as port 22 for Linux and port 3389 for
                                      Windows. For Pools created with a cloud service configuration,
                                      enable ports 10100, 20100, and 30100. Also enable outbound
                                      connections to Azure Storage on port 443. For more details see:
                                      https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                                },
                                "resizeTimeout": "1 day, 0:00:00",  # Optional. This
                                  timeout applies only to manual scaling; it has no effect when
                                  enableAutoScale is set to true. The default value is 15 minutes. The
                                  minimum value is 5 minutes. If you specify a value less than 5
                                  minutes, the Batch service rejects the request with an error; if you
                                  are calling the REST API directly, the HTTP status code is 400 (Bad
                                  Request).
                                "startTask": {
                                    "commandLine": "str",  # Required. The
                                      command line does not run under a shell, and therefore cannot
                                      take advantage of shell features such as environment variable
                                      expansion. If you want to take advantage of such features, you
                                      should invoke the shell in the command line, for example using
                                      "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
                                      If the command line refers to file paths, it should use a
                                      relative path (relative to the Task working directory), or use
                                      the Batch provided environment variable
                                      (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                                    "containerSettings": {
                                        "containerRunOptions": "str",  #
                                          Optional. These additional options are supplied as arguments
                                          to the "docker create" command, in addition to those
                                          controlled by the Batch Service.
                                        "imageName": "str",  # Required. This
                                          is the full Image reference, as would be specified to "docker
                                          pull". If no tag is provided as part of the Image name, the
                                          tag ":latest" is used as a default.
                                        "registry": {
                                            "identityReference": {
                                                "resourceId": "str"
                                                  # Optional. The ARM resource id of the user assigned
                                                  identity.
                                            },
                                            "password": "str",  #
                                              Optional. The password to log into the registry server.
                                            "registryServer": "str",  #
                                              Optional. If omitted, the default is "docker.io".
                                            "username": "str"  #
                                              Optional. The user name to log into the registry server.
                                        },
                                        "workingDirectory": "str"  #
                                          Optional. The default is 'taskWorkingDirectory'. Known values
                                          are: "taskWorkingDirectory", "containerImageDefault".
                                    },
                                    "environmentSettings": [
                                        {
                                            "name": "str",  # Required.
                                              The name of the environment variable.
                                            "value": "str"  # Optional.
                                              The value of the environment variable.
                                        }
                                    ],
                                    "maxTaskRetryCount": 0,  # Optional. The
                                      Batch service retries a Task if its exit code is nonzero. Note
                                      that this value specifically controls the number of retries. The
                                      Batch service will try the Task once, and may then retry up to
                                      this limit. For example, if the maximum retry count is 3, Batch
                                      tries the Task up to 4 times (one initial try and 3 retries). If
                                      the maximum retry count is 0, the Batch service does not retry
                                      the Task. If the maximum retry count is -1, the Batch service
                                      retries the Task without limit, however this is not recommended
                                      for a start task or any task. The default value is 0 (no
                                      retries).
                                    "resourceFiles": [
                                        {
                                            "autoStorageContainerName":
                                              "str",  # Optional. The autoStorageContainerName,
                                              storageContainerUrl and httpUrl properties are mutually
                                              exclusive and one of them must be specified.
                                            "blobPrefix": "str",  #
                                              Optional. The property is valid only when
                                              autoStorageContainerName or storageContainerUrl is used.
                                              This prefix can be a partial filename or a subdirectory.
                                              If a prefix is not specified, all the files in the
                                              container will be downloaded.
                                            "fileMode": "str",  #
                                              Optional. This property applies only to files being
                                              downloaded to Linux Compute Nodes. It will be ignored if
                                              it is specified for a resourceFile which will be
                                              downloaded to a Windows Compute Node. If this property is
                                              not specified for a Linux Compute Node, then a default
                                              value of 0770 is applied to the file.
                                            "filePath": "str",  #
                                              Optional. If the httpUrl property is specified, the
                                              filePath is required and describes the path which the
                                              file will be downloaded to, including the filename.
                                              Otherwise, if the autoStorageContainerName or
                                              storageContainerUrl property is specified, filePath is
                                              optional and is the directory to download the files to.
                                              In the case where filePath is used as a directory, any
                                              directory structure already associated with the input
                                              data will be retained in full and appended to the
                                              specified filePath directory. The specified relative path
                                              cannot break out of the Task's working directory (for
                                              example by using '..').
                                            "httpUrl": "str",  #
                                              Optional. The autoStorageContainerName,
                                              storageContainerUrl and httpUrl properties are mutually
                                              exclusive and one of them must be specified. If the URL
                                              points to Azure Blob Storage, it must be readable from
                                              compute nodes. There are three ways to get such a URL for
                                              a blob in Azure storage: include a Shared Access
                                              Signature (SAS) granting read permissions on the blob,
                                              use a managed identity with read permission, or set the
                                              ACL for the blob or its container to allow public access.
                                            "identityReference": {
                                                "resourceId": "str"
                                                  # Optional. The ARM resource id of the user assigned
                                                  identity.
                                            },
                                            "storageContainerUrl": "str"
                                              # Optional. The autoStorageContainerName,
                                              storageContainerUrl and httpUrl properties are mutually
                                              exclusive and one of them must be specified. This URL
                                              must be readable and listable from compute nodes. There
                                              are three ways to get such a URL for a container in Azure
                                              storage: include a Shared Access Signature (SAS) granting
                                              read and list permissions on the container, use a managed
                                              identity with read and list permissions, or set the ACL
                                              for the container to allow public access.
                                        }
                                    ],
                                    "userIdentity": {
                                        "autoUser": {
                                            "elevationLevel": "str",  #
                                              Optional. The default value is nonAdmin. Known values
                                              are: "nonadmin", "admin".
                                            "scope": "str"  # Optional.
                                              The default value is pool. If the pool is running Windows
                                              a value of Task should be specified if stricter isolation
                                              between tasks is required. For example, if the task
                                              mutates the registry in a way which could impact other
                                              tasks, or if certificates have been specified on the pool
                                              which should not be accessible by normal tasks but should
                                              be accessible by StartTasks. Known values are: "task",
                                              "pool".
                                        },
                                        "username": "str"  # Optional. The
                                          userName and autoUser properties are mutually exclusive; you
                                          must specify one but not both.
                                    },
                                    "waitForSuccess": bool  # Optional. If true
                                      and the StartTask fails on a Node, the Batch service retries the
                                      StartTask up to its maximum retry count (maxTaskRetryCount). If
                                      the Task has still not completed successfully after all retries,
                                      then the Batch service marks the Node unusable, and will not
                                      schedule Tasks to it. This condition can be detected via the
                                      Compute Node state and failure info details. If false, the Batch
                                      service will not wait for the StartTask to complete. In this
                                      case, other Tasks can start executing on the Compute Node while
                                      the StartTask is still running; and even if the StartTask fails,
                                      new Tasks will continue to be scheduled on the Compute Node. The
                                      default is true.
                                },
                                "targetDedicatedNodes": 0,  # Optional. This property
                                  must not be specified if enableAutoScale is set to true. If
                                  enableAutoScale is set to false, then you must set either
                                  targetDedicatedNodes, targetLowPriorityNodes, or both.
                                "targetLowPriorityNodes": 0,  # Optional. This
                                  property must not be specified if enableAutoScale is set to true. If
                                  enableAutoScale is set to false, then you must set either
                                  targetDedicatedNodes, targetLowPriorityNodes, or both.
                                "taskSchedulingPolicy": {
                                    "nodeFillType": "str"  # Required. If not
                                      specified, the default is spread. Known values are: "spread",
                                      "pack".
                                },
                                "taskSlotsPerNode": 0,  # Optional. The default value
                                  is 1. The maximum value is the smaller of 4 times the number of cores
                                  of the vmSize of the pool or 256.
                                "userAccounts": [
                                    {
                                        "elevationLevel": "str",  # Optional.
                                          The default value is nonAdmin. Known values are: "nonadmin",
                                          "admin".
                                        "linuxUserConfiguration": {
                                            "gid": 0,  # Optional. The
                                              uid and gid properties must be specified together or not
                                              at all. If not specified the underlying operating system
                                              picks the gid.
                                            "sshPrivateKey": "str",  #
                                              Optional. The private key must not be password protected.
                                              The private key is used to automatically configure
                                              asymmetric-key based authentication for SSH between
                                              Compute Nodes in a Linux Pool when the Pool's
                                              enableInterNodeCommunication property is true (it is
                                              ignored if enableInterNodeCommunication is false). It
                                              does this by placing the key pair into the user's .ssh
                                              directory. If not specified, password-less SSH is not
                                              configured between Compute Nodes (no modification of the
                                              user's .ssh directory is done).
                                            "uid": 0  # Optional. The uid
                                              and gid properties must be specified together or not at
                                              all. If not specified the underlying operating system
                                              picks the uid.
                                        },
                                        "name": "str",  # Required. The name
                                          of the user Account.
                                        "password": "str",  # Required. The
                                          password for the user Account.
                                        "windowsUserConfiguration": {
                                            "loginMode": "str"  #
                                              Optional. The default value for
                                              VirtualMachineConfiguration Pools is 'batch' and for
                                              CloudServiceConfiguration Pools is 'interactive'. Known
                                              values are: "batch", "interactive".
                                        }
                                    }
                                ],
                                "virtualMachineConfiguration": {
                                    "containerConfiguration": {
                                        "containerImageNames": [
                                            "str"  # Optional. This is
                                              the full Image reference, as would be specified to
                                              "docker pull". An Image will be sourced from the default
                                              Docker registry unless the Image is fully qualified with
                                              an alternative registry.
                                        ],
                                        "containerRegistries": [
                                            {
                                                "identityReference":
                                                  {
                                                    "resourceId":
                                                      "str"  # Optional. The ARM resource id of the
                                                      user assigned identity.
                                                },
                                                "password": "str",  #
                                                  Optional. The password to log into the registry
                                                  server.
                                                "registryServer":
                                                  "str",  # Optional. If omitted, the default is
                                                  "docker.io".
                                                "username": "str"  #
                                                  Optional. The user name to log into the registry
                                                  server.
                                            }
                                        ],
                                        "type": "dockerCompatible"  # Default
                                          value is "dockerCompatible". The container technology to be
                                          used. Has constant value: "dockerCompatible".
                                    },
                                    "dataDisks": [
                                        {
                                            "caching": "str",  #
                                              Optional. The default value for caching is readwrite. For
                                              information about the caching options see:
                                              https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
                                              Known values are: "none", "readonly", "readwrite".
                                            "diskSizeGB": 0,  # Required.
                                              The initial disk size in gigabytes.
                                            "lun": 0,  # Required. The
                                              lun is used to uniquely identify each data disk. If
                                              attaching multiple disks, each should have a distinct
                                              lun. The value must be between 0 and 63, inclusive.
                                            "storageAccountType": "str"
                                              # Optional. If omitted, the default is "standard_lrs".
                                              Known values are: "standard_lrs", "premium_lrs".
                                        }
                                    ],
                                    "diskEncryptionConfiguration": {
                                        "targets": [
                                            "str"  # Optional. If
                                              omitted, no disks on the compute nodes in the pool will
                                              be encrypted. On Linux pool, only "TemporaryDisk" is
                                              supported; on Windows pool, "OsDisk" and "TemporaryDisk"
                                              must be specified.
                                        ]
                                    },
                                    "extensions": [
                                        {
                                            "autoUpgradeMinorVersion":
                                              bool,  # Optional. Indicates whether the extension should
                                              use a newer minor version if one is available at
                                              deployment time. Once deployed, however, the extension
                                              will not upgrade minor versions unless redeployed, even
                                              with this property set to true.
                                            "name": "str",  # Required.
                                              The name of the virtual machine extension.
                                            "protectedSettings": {},  #
                                              Optional. The extension can contain either
                                              protectedSettings or protectedSettingsFromKeyVault or no
                                              protected settings at all.
                                            "provisionAfterExtensions": [
                                                "str"  # Optional.
                                                  Collection of extension names after which this
                                                  extension needs to be provisioned.
                                            ],
                                            "publisher": "str",  #
                                              Required. The name of the extension handler publisher.
                                            "settings": {},  # Optional.
                                              Any object.
                                            "type": "str",  # Required.
                                              The type of the extension.
                                            "typeHandlerVersion": "str"
                                              # Optional. The version of script handler.
                                        }
                                    ],
                                    "imageReference": {
                                        "exactVersion": "str",  # Optional.
                                          The specific version of the platform image or marketplace
                                          image used to create the node. This read-only field differs
                                          from 'version' only if the value specified for 'version' when
                                          the pool was created was 'latest'.
                                        "offer": "str",  # Optional. For
                                          example, UbuntuServer or WindowsServer.
                                        "publisher": "str",  # Optional. For
                                          example, Canonical or MicrosoftWindowsServer.
                                        "sku": "str",  # Optional. For
                                          example, 18.04-LTS or 2019-Datacenter.
                                        "version": "str",  # Optional. A
                                          value of 'latest' can be specified to select the latest
                                          version of an Image. If omitted, the default is 'latest'.
                                        "virtualMachineImageId": "str"  #
                                          Optional. This property is mutually exclusive with other
                                          ImageReference properties. The Shared Image Gallery Image
                                          must have replicas in the same region and must be in the same
                                          subscription as the Azure Batch account. If the image version
                                          is not specified in the imageId, the latest version will be
                                          used. For information about the firewall settings for the
                                          Batch Compute Node agent to communicate with the Batch
                                          service see
                                          https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                                    },
                                    "licenseType": "str",  # Optional. This only
                                      applies to Images that contain the Windows operating system, and
                                      should only be used when you hold valid on-premises licenses for
                                      the Compute Nodes which will be deployed. If omitted, no
                                      on-premises licensing discount is applied. Values are:"n"n
                                      Windows_Server - The on-premises license is for Windows Server."n
                                      Windows_Client - The on-premises license is for Windows Client.
                                    "nodeAgentSKUId": "str",  # Required. The
                                      Batch Compute Node agent is a program that runs on each Compute
                                      Node in the Pool, and provides the command-and-control interface
                                      between the Compute Node and the Batch service. There are
                                      different implementations of the Compute Node agent, known as
                                      SKUs, for different operating systems. You must specify a Compute
                                      Node agent SKU which matches the selected Image reference. To get
                                      the list of supported Compute Node agent SKUs along with their
                                      list of verified Image references, see the 'List supported
                                      Compute Node agent SKUs' operation.
                                    "nodePlacementConfiguration": {
                                        "policy": "str"  # Optional.
                                          Allocation policy used by Batch Service to provision the
                                          nodes. If not specified, Batch will use the regional policy.
                                          Known values are: "regional", "zonal".
                                    },
                                    "osDisk": {
                                        "ephemeralOSDiskSettings": {
                                            "placement": "CacheDisk"  #
                                              Optional. Default value is "CacheDisk". This property can
                                              be used by user in the request to choose the location
                                              e.g., cache disk space for Ephemeral OS disk
                                              provisioning. For more information on Ephemeral OS disk
                                              size requirements, please refer to Ephemeral OS disk size
                                              requirements for Windows VMs at
                                              https://docs.microsoft.com/en-us/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements
                                              and Linux VMs at
                                              https://docs.microsoft.com/en-us/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements.
                                              The only acceptable values to pass in are None and
                                              "CacheDisk". The default value is None.
                                        }
                                    },
                                    "windowsConfiguration": {
                                        "enableAutomaticUpdates": bool  #
                                          Optional. If omitted, the default value is true.
                                    }
                                },
                                "vmSize": "str"  # Required. For information about
                                  available sizes of virtual machines in Pools, see Choose a VM size
                                  for Compute Nodes in an Azure Batch Pool
                                  (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
                            },
                            "poolLifetimeOption": "str"  # Required. The minimum lifetime
                              of created auto Pools, and how multiple Jobs on a schedule are assigned
                              to Pools. Known values are: "jobschedule", "job".
                        },
                        "poolId": "str"  # Optional. You must ensure that the Pool referenced
                          by this property exists. If the Pool does not exist at the time the Batch
                          service tries to schedule a Job, no Tasks for the Job will run until you
                          create a Pool with that id. Note that the Batch service will not reject the
                          Job request; it will simply not run Tasks until the Pool exists. You must
                          specify either the Pool ID or the auto Pool specification, but not both.
                    },
                    "priority": 0  # Optional. Priority values can range from -1000 to 1000, with
                      -1000 being the lowest priority and 1000 being the highest priority. If omitted,
                      the priority of the Job is left unchanged.
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', "application/json; odata=minimalmetadata"))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        _content = job_patch_parameter

        request = build_patch_request(
            job_id=job_id,
            api_version=api_version,
            content_type=content_type,
            content=_content,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        response_headers = {}
        response_headers['client-request-id']=self._deserialize('str', response.headers.get('client-request-id'))
        response_headers['request-id']=self._deserialize('str', response.headers.get('request-id'))
        response_headers['ETag']=self._deserialize('str', response.headers.get('ETag'))
        response_headers['Last-Modified']=self._deserialize('rfc-1123', response.headers.get('Last-Modified'))
        response_headers['DataServiceId']=self._deserialize('str', response.headers.get('DataServiceId'))


        if cls:
            return cls(pipeline_response, None, response_headers)



    @distributed_trace
    def update(  # pylint: disable=inconsistent-return-statements
        self,
        job_id: str,
        job_update_parameter: JSON,
        *,
        timeout: Optional[int] = 30,
        client_request_id: Optional[str] = None,
        return_client_request_id: Optional[bool] = False,
        ocp_date: Optional[datetime.datetime] = None,
        if_match: Optional[str] = None,
        if_none_match: Optional[str] = None,
        if_modified_since: Optional[datetime.datetime] = None,
        if_unmodified_since: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """Updates the properties of the specified Job.

        This fully replaces all the updatable properties of the Job. For example, if the Job has
        constraints associated with it and if constraints is not specified with this request, then the
        Batch service will remove the existing constraints.

        :param job_id: The ID of the Job whose properties you want to update.
        :type job_id: str
        :param job_update_parameter: The parameters for the request.
        :type job_update_parameter: JSON
        :keyword timeout: The maximum time that the server can spend processing the request, in
         seconds. The default is 30 seconds.
        :paramtype timeout: int
        :keyword client_request_id: The caller-generated request identity, in the form of a GUID with
         no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. Default value is
         None.
        :paramtype client_request_id: str
        :keyword return_client_request_id: Whether the server should return the client-request-id in
         the response. Default value is False.
        :paramtype return_client_request_id: bool
        :keyword ocp_date: The time the request was issued. Client libraries typically set this to the
         current system clock time; set it explicitly if you are calling the REST API directly. Default
         value is None.
        :paramtype ocp_date: ~datetime.datetime
        :keyword if_match: An ETag value associated with the version of the resource known to the
         client. The operation will be performed only if the resource's current ETag on the service
         exactly matches the value specified by the client. Default value is None.
        :paramtype if_match: str
        :keyword if_none_match: An ETag value associated with the version of the resource known to the
         client. The operation will be performed only if the resource's current ETag on the service does
         not match the value specified by the client. Default value is None.
        :paramtype if_none_match: str
        :keyword if_modified_since: A timestamp indicating the last modified time of the resource known
         to the client. The operation will be performed only if the resource on the service has been
         modified since the specified time. Default value is None.
        :paramtype if_modified_since: ~datetime.datetime
        :keyword if_unmodified_since: A timestamp indicating the last modified time of the resource
         known to the client. The operation will be performed only if the resource on the service has
         not been modified since the specified time. Default value is None.
        :paramtype if_unmodified_since: ~datetime.datetime
        :return: None
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                job_update_parameter = {
                    "allowTaskPreemption": bool,  # Optional. If the value is set to True, other
                      high priority jobs submitted to the system will take precedence and will be able
                      requeue tasks from this job. You can update a job's allowTaskPreemption after it
                      has been created using the update job API.
                    "constraints": {
                        "maxTaskRetryCount": 0,  # Optional. Note that this value
                          specifically controls the number of retries. The Batch service will try each
                          Task once, and may then retry up to this limit. For example, if the maximum
                          retry count is 3, Batch tries a Task up to 4 times (one initial try and 3
                          retries). If the maximum retry count is 0, the Batch service does not retry
                          Tasks. If the maximum retry count is -1, the Batch service retries the Task
                          without limit, however this is not recommended for a start task or any task.
                          The default value is 0 (no retries).
                        "maxWallClockTime": "1 day, 0:00:00"  # Optional. If the Job does not
                          complete within the time limit, the Batch service terminates it and any Tasks
                          that are still running. In this case, the termination reason will be
                          MaxWallClockTimeExpiry. If this property is not specified, there is no time
                          limit on how long the Job may run.
                    },
                    "maxParallelTasks": -1,  # Optional. Default value is -1. The value of
                      maxParallelTasks must be -1 or greater than 0 if specified. If not specified, the
                      default value is -1, which means there's no limit to the number of tasks that can
                      be run at once. You can update a job's maxParallelTasks after it has been created
                      using the update job API.
                    "metadata": [
                        {
                            "name": "str",  # Required. The name of the metadata item.
                            "value": "str"  # Required. The value of the metadata item.
                        }
                    ],
                    "onAllTasksComplete": "str",  # Optional. If omitted, the completion behavior
                      is set to noaction. If the current value is terminatejob, this is an error
                      because a Job's completion behavior may not be changed from terminatejob to
                      noaction. You may not change the value from terminatejob to noaction - that is,
                      once you have engaged automatic Job termination, you cannot turn it off again. If
                      you try to do this, the request fails and Batch returns status code 400 (Bad
                      Request) and an 'invalid property value' error response. If you do not specify
                      this element in a PUT request, it is equivalent to passing noaction. This is an
                      error if the current value is terminatejob. Known values are: "noaction",
                      "terminatejob".
                    "poolInfo": {
                        "autoPoolSpecification": {
                            "autoPoolIdPrefix": "str",  # Optional. The Batch service
                              assigns each auto Pool a unique identifier on creation. To distinguish
                              between Pools created for different purposes, you can specify this
                              element to add a prefix to the ID that is assigned. The prefix can be up
                              to 20 characters long.
                            "keepAlive": bool,  # Optional. If false, the Batch service
                              deletes the Pool once its lifetime (as determined by the
                              poolLifetimeOption setting) expires; that is, when the Job or Job
                              Schedule completes. If true, the Batch service does not delete the Pool
                              automatically. It is up to the user to delete auto Pools created with
                              this option.
                            "pool": {
                                "applicationLicenses": [
                                    "str"  # Optional. The list of application
                                      licenses must be a subset of available Batch service application
                                      licenses. If a license is requested which is not supported, Pool
                                      creation will fail. The permitted licenses available on the Pool
                                      are 'maya', 'vray', '3dsmax', 'arnold'. An additional charge
                                      applies for each application license added to the Pool.
                                ],
                                "applicationPackageReferences": [
                                    {
                                        "applicationId": "str",  # Required.
                                          The ID of the application to deploy.
                                        "version": "str"  # Optional. If this
                                          is omitted on a Pool, and no default version is specified for
                                          this application, the request fails with the error code
                                          InvalidApplicationPackageReferences and HTTP status code 409.
                                          If this is omitted on a Task, and no default version is
                                          specified for this application, the Task fails with a
                                          pre-processing error.
                                    }
                                ],
                                "autoScaleEvaluationInterval": "1 day, 0:00:00",  #
                                  Optional. The default value is 15 minutes. The minimum and maximum
                                  value are 5 minutes and 168 hours respectively. If you specify a
                                  value less than 5 minutes or greater than 168 hours, the Batch
                                  service rejects the request with an invalid property value error; if
                                  you are calling the REST API directly, the HTTP status code is 400
                                  (Bad Request).
                                "autoScaleFormula": "str",  # Optional. This property
                                  must not be specified if enableAutoScale is set to false. It is
                                  required if enableAutoScale is set to true. The formula is checked
                                  for validity before the Pool is created. If the formula is not valid,
                                  the Batch service rejects the request with detailed error
                                  information.
                                "certificateReferences": [
                                    {
                                        "storeLocation": "str",  # Optional.
                                          The default value is currentuser. This property is applicable
                                          only for Pools configured with Windows Compute Nodes (that
                                          is, created with cloudServiceConfiguration, or with
                                          virtualMachineConfiguration using a Windows Image reference).
                                          For Linux Compute Nodes, the Certificates are stored in a
                                          directory inside the Task working directory and an
                                          environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to
                                          the Task to query for this location. For Certificates with
                                          visibility of 'remoteUser', a 'certs' directory is created in
                                          the user's home directory (e.g., /home/{user-name}/certs) and
                                          Certificates are placed in that directory. Known values are:
                                          "currentuser", "localmachine".
                                        "storeName": "str",  # Optional. This
                                          property is applicable only for Pools configured with Windows
                                          Compute Nodes (that is, created with
                                          cloudServiceConfiguration, or with
                                          virtualMachineConfiguration using a Windows Image reference).
                                          Common store names include: My, Root, CA, Trust, Disallowed,
                                          TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but
                                          any custom store name can also be used. The default value is
                                          My.
                                        "thumbprint": "str",  # Required. The
                                          thumbprint of the Certificate.
                                        "thumbprintAlgorithm": "str",  #
                                          Required. The algorithm with which the thumbprint is
                                          associated. This must be sha1.
                                        "visibility": [
                                            "str"  # Optional. You can
                                              specify more than one visibility in this collection. The
                                              default is all Accounts.
                                        ]
                                    }
                                ],
                                "cloudServiceConfiguration": {
                                    "osFamily": "str",  # Required. Possible
                                      values are:"n2 - OS Family 2, equivalent to Windows Server 2008
                                      R2 SP1."n3 - OS Family 3, equivalent to Windows Server 2012."n4 -
                                      OS Family 4, equivalent to Windows Server 2012 R2."n5 - OS Family
                                      5, equivalent to Windows Server 2016."n6 - OS Family 6,
                                      equivalent to Windows Server 2019. For more information, see
                                      Azure Guest OS Releases
                                      (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
                                    "osVersion": "str"  # Optional. The default
                                      value is * which specifies the latest operating system version
                                      for the specified OS family.
                                },
                                "displayName": "str",  # Optional. The display name
                                  need not be unique and can contain any Unicode characters up to a
                                  maximum length of 1024.
                                "enableAutoScale": bool,  # Optional. If false, at
                                  least one of targetDedicatedNodes and targetLowPriorityNodes must be
                                  specified. If true, the autoScaleFormula element is required. The
                                  Pool automatically resizes according to the formula. The default
                                  value is false.
                                "enableInterNodeCommunication": bool,  # Optional.
                                  Enabling inter-node communication limits the maximum size of the Pool
                                  due to deployment restrictions on the Compute Nodes of the Pool. This
                                  may result in the Pool not reaching its desired size. The default
                                  value is false.
                                "metadata": [
                                    {
                                        "name": "str",  # Required. The name
                                          of the metadata item.
                                        "value": "str"  # Required. The value
                                          of the metadata item.
                                    }
                                ],
                                "mountConfiguration": [
                                    {
                                        "azureBlobFileSystemConfiguration": {
                                            "accountKey": "str",  #
                                              Optional. This property is mutually exclusive with both
                                              sasKey and identity; exactly one must be specified.
                                            "accountName": "str",  #
                                              Required. The Azure Storage Account name.
                                            "blobfuseOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "containerName": "str",  #
                                              Required. The Azure Blob Storage Container name.
                                            "identityReference": {
                                                "resourceId": "str"
                                                  # Optional. The ARM resource id of the user assigned
                                                  identity.
                                            },
                                            "relativeMountPath": "str",
                                              # Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                            "sasKey": "str"  # Optional.
                                              This property is mutually exclusive with both accountKey
                                              and identity; exactly one must be specified.
                                        },
                                        "azureFileShareConfiguration": {
                                            "accountKey": "str",  #
                                              Required. The Azure Storage account key.
                                            "accountName": "str",  #
                                              Required. The Azure Storage account name.
                                            "azureFileUrl": "str",  #
                                              Required. This is of the form
                                              'https://{account}.file.core.windows.net/'.
                                            "mountOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "relativeMountPath": "str"  #
                                              Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                        },
                                        "cifsMountConfiguration": {
                                            "mountOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "password": "str",  #
                                              Required. The password to use for authentication against
                                              the CIFS file system.
                                            "relativeMountPath": "str",
                                              # Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                            "source": "str",  # Required.
                                              The URI of the file system to mount.
                                            "username": "str"  #
                                              Required. The user to use for authentication against the
                                              CIFS file system.
                                        },
                                        "nfsMountConfiguration": {
                                            "mountOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "relativeMountPath": "str",
                                              # Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                            "source": "str"  # Required.
                                              The URI of the file system to mount.
                                        }
                                    }
                                ],
                                "networkConfiguration": {
                                    "dynamicVNetAssignmentScope": "str",  #
                                      Optional. The scope of dynamic vnet assignment. Known values are:
                                      "none", "job".
                                    "endpointConfiguration": {
                                        "inboundNATPools": [
                                            {
                                                "backendPort": 0,  #
                                                  Required. This must be unique within a Batch Pool.
                                                  Acceptable values are between 1 and 65535 except for
                                                  22, 3389, 29876 and 29877 as these are reserved. If
                                                  any reserved values are provided the request fails
                                                  with HTTP status code 400.
                "frontendPortRangeEnd": 0,  # Required. Acceptable
                                                  values range between 1 and 65534 except ports from
                                                  50000 to 55000 which are reserved by the Batch
                                                  service. All ranges within a Pool must be distinct
                                                  and cannot overlap. Each range must contain at least
                                                  40 ports. If any reserved or overlapping values are
                                                  provided the request fails with HTTP status code 400.
                "frontendPortRangeStart": 0,  # Required. Acceptable
                                                  values range between 1 and 65534 except ports from
                                                  50000 to 55000 which are reserved. All ranges within
                                                  a Pool must be distinct and cannot overlap. Each
                                                  range must contain at least 40 ports. If any reserved
                                                  or overlapping values are provided the request fails
                                                  with HTTP status code 400.
                                                "name": "str",  #
                                                  Required. The name must be unique within a Batch
                                                  Pool, can contain letters, numbers, underscores,
                                                  periods, and hyphens. Names must start with a letter
                                                  or number, must end with a letter, number, or
                                                  underscore, and cannot exceed 77 characters.  If any
                                                  invalid values are provided the request fails with
                                                  HTTP status code 400.
                "networkSecurityGroupRules": [
                                                    {
                "access": "str",  # Required. The action that
                                                          should be taken for a specified IP address,
                                                          subnet range or tag. Known values are:
                                                          "allow", "deny".
                "priority": 0,  # Required. Priorities within
                                                          a Pool must be unique and are evaluated in
                                                          order of priority. The lower the number the
                                                          higher the priority. For example, rules could
                                                          be specified with order numbers of 150, 250,
                                                          and 350. The rule with the order number of
                                                          150 takes precedence over the rule that has
                                                          an order of 250. Allowed priorities are 150
                                                          to 4096. If any reserved or duplicate values
                                                          are provided the request fails with HTTP
                                                          status code 400.
                "sourceAddressPrefix": "str",  # Required.
                                                          Valid values are a single IP address (i.e.
                                                          10.10.10.10), IP subnet (i.e.
                                                          192.168.1.0/24), default tag, or * (for all
                                                          addresses).  If any other values are provided
                                                          the request fails with HTTP status code 400.
                "sourcePortRanges": [
                "str"  # Optional. Valid values are '""
                                                              *' (for all ports 0 - 65535), a specific
                                                              port (i.e. 22), or a port range (i.e.
                                                              100-200). The ports must be in the range
                                                              of 0 to 65535. Each entry in this
                                                              collection must not overlap any other
                                                              entry (either a range or an individual
                                                              port). If any other values are provided
                                                              the request fails with HTTP status code
                                                              400. The default value is '*"" '.
                                                        ]
                                                    }
                                                ],
                                                "protocol": "str"  #
                                                  Required. The protocol of the endpoint. Known values
                                                  are: "tcp", "udp".
                                            }
                                        ]
                                    },
                                    "publicIPAddressConfiguration": {
                                        "ipAddressIds": [
                                            "str"  # Optional. The number
                                              of IPs specified here limits the maximum size of the Pool
                                              - 100 dedicated nodes or 100 Spot/Low-priority nodes can
                                              be allocated for each public IP. For example, a pool
                                              needing 250 dedicated VMs would need at least 3 public
                                              IPs specified. Each element of this collection is of the
                                              form:
                                              /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}.
                                        ],
                                        "provision": "str"  # Optional. The
                                          default value is BatchManaged. Known values are:
                                          "batchmanaged", "usermanaged", "nopublicipaddresses".
                                    },
                                    "subnetId": "str"  # Optional. The virtual
                                      network must be in the same region and subscription as the Azure
                                      Batch Account. The specified subnet should have enough free IP
                                      addresses to accommodate the number of Compute Nodes in the Pool.
                                      If the subnet doesn't have enough free IP addresses, the Pool
                                      will partially allocate Nodes and a resize error will occur. The
                                      'MicrosoftAzureBatch' service principal must have the 'Classic
                                      Virtual Machine Contributor' Role-Based Access Control (RBAC)
                                      role for the specified VNet. The specified subnet must allow
                                      communication from the Azure Batch service to be able to schedule
                                      Tasks on the Nodes. This can be verified by checking if the
                                      specified VNet has any associated Network Security Groups (NSG).
                                      If communication to the Nodes in the specified subnet is denied
                                      by an NSG, then the Batch service will set the state of the
                                      Compute Nodes to unusable. For Pools created with
                                      virtualMachineConfiguration only ARM virtual networks
                                      ('Microsoft.Network/virtualNetworks') are supported, but for
                                      Pools created with cloudServiceConfiguration both ARM and classic
                                      virtual networks are supported. If the specified VNet has any
                                      associated Network Security Groups (NSG), then a few reserved
                                      system ports must be enabled for inbound communication. For Pools
                                      created with a virtual machine configuration, enable ports 29876
                                      and 29877, as well as port 22 for Linux and port 3389 for
                                      Windows. For Pools created with a cloud service configuration,
                                      enable ports 10100, 20100, and 30100. Also enable outbound
                                      connections to Azure Storage on port 443. For more details see:
                                      https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                                },
                                "resizeTimeout": "1 day, 0:00:00",  # Optional. This
                                  timeout applies only to manual scaling; it has no effect when
                                  enableAutoScale is set to true. The default value is 15 minutes. The
                                  minimum value is 5 minutes. If you specify a value less than 5
                                  minutes, the Batch service rejects the request with an error; if you
                                  are calling the REST API directly, the HTTP status code is 400 (Bad
                                  Request).
                                "startTask": {
                                    "commandLine": "str",  # Required. The
                                      command line does not run under a shell, and therefore cannot
                                      take advantage of shell features such as environment variable
                                      expansion. If you want to take advantage of such features, you
                                      should invoke the shell in the command line, for example using
                                      "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
                                      If the command line refers to file paths, it should use a
                                      relative path (relative to the Task working directory), or use
                                      the Batch provided environment variable
                                      (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                                    "containerSettings": {
                                        "containerRunOptions": "str",  #
                                          Optional. These additional options are supplied as arguments
                                          to the "docker create" command, in addition to those
                                          controlled by the Batch Service.
                                        "imageName": "str",  # Required. This
                                          is the full Image reference, as would be specified to "docker
                                          pull". If no tag is provided as part of the Image name, the
                                          tag ":latest" is used as a default.
                                        "registry": {
                                            "identityReference": {
                                                "resourceId": "str"
                                                  # Optional. The ARM resource id of the user assigned
                                                  identity.
                                            },
                                            "password": "str",  #
                                              Optional. The password to log into the registry server.
                                            "registryServer": "str",  #
                                              Optional. If omitted, the default is "docker.io".
                                            "username": "str"  #
                                              Optional. The user name to log into the registry server.
                                        },
                                        "workingDirectory": "str"  #
                                          Optional. The default is 'taskWorkingDirectory'. Known values
                                          are: "taskWorkingDirectory", "containerImageDefault".
                                    },
                                    "environmentSettings": [
                                        {
                                            "name": "str",  # Required.
                                              The name of the environment variable.
                                            "value": "str"  # Optional.
                                              The value of the environment variable.
                                        }
                                    ],
                                    "maxTaskRetryCount": 0,  # Optional. The
                                      Batch service retries a Task if its exit code is nonzero. Note
                                      that this value specifically controls the number of retries. The
                                      Batch service will try the Task once, and may then retry up to
                                      this limit. For example, if the maximum retry count is 3, Batch
                                      tries the Task up to 4 times (one initial try and 3 retries). If
                                      the maximum retry count is 0, the Batch service does not retry
                                      the Task. If the maximum retry count is -1, the Batch service
                                      retries the Task without limit, however this is not recommended
                                      for a start task or any task. The default value is 0 (no
                                      retries).
                                    "resourceFiles": [
                                        {
                                            "autoStorageContainerName":
                                              "str",  # Optional. The autoStorageContainerName,
                                              storageContainerUrl and httpUrl properties are mutually
                                              exclusive and one of them must be specified.
                                            "blobPrefix": "str",  #
                                              Optional. The property is valid only when
                                              autoStorageContainerName or storageContainerUrl is used.
                                              This prefix can be a partial filename or a subdirectory.
                                              If a prefix is not specified, all the files in the
                                              container will be downloaded.
                                            "fileMode": "str",  #
                                              Optional. This property applies only to files being
                                              downloaded to Linux Compute Nodes. It will be ignored if
                                              it is specified for a resourceFile which will be
                                              downloaded to a Windows Compute Node. If this property is
                                              not specified for a Linux Compute Node, then a default
                                              value of 0770 is applied to the file.
                                            "filePath": "str",  #
                                              Optional. If the httpUrl property is specified, the
                                              filePath is required and describes the path which the
                                              file will be downloaded to, including the filename.
                                              Otherwise, if the autoStorageContainerName or
                                              storageContainerUrl property is specified, filePath is
                                              optional and is the directory to download the files to.
                                              In the case where filePath is used as a directory, any
                                              directory structure already associated with the input
                                              data will be retained in full and appended to the
                                              specified filePath directory. The specified relative path
                                              cannot break out of the Task's working directory (for
                                              example by using '..').
                                            "httpUrl": "str",  #
                                              Optional. The autoStorageContainerName,
                                              storageContainerUrl and httpUrl properties are mutually
                                              exclusive and one of them must be specified. If the URL
                                              points to Azure Blob Storage, it must be readable from
                                              compute nodes. There are three ways to get such a URL for
                                              a blob in Azure storage: include a Shared Access
                                              Signature (SAS) granting read permissions on the blob,
                                              use a managed identity with read permission, or set the
                                              ACL for the blob or its container to allow public access.
                                            "identityReference": {
                                                "resourceId": "str"
                                                  # Optional. The ARM resource id of the user assigned
                                                  identity.
                                            },
                                            "storageContainerUrl": "str"
                                              # Optional. The autoStorageContainerName,
                                              storageContainerUrl and httpUrl properties are mutually
                                              exclusive and one of them must be specified. This URL
                                              must be readable and listable from compute nodes. There
                                              are three ways to get such a URL for a container in Azure
                                              storage: include a Shared Access Signature (SAS) granting
                                              read and list permissions on the container, use a managed
                                              identity with read and list permissions, or set the ACL
                                              for the container to allow public access.
                                        }
                                    ],
                                    "userIdentity": {
                                        "autoUser": {
                                            "elevationLevel": "str",  #
                                              Optional. The default value is nonAdmin. Known values
                                              are: "nonadmin", "admin".
                                            "scope": "str"  # Optional.
                                              The default value is pool. If the pool is running Windows
                                              a value of Task should be specified if stricter isolation
                                              between tasks is required. For example, if the task
                                              mutates the registry in a way which could impact other
                                              tasks, or if certificates have been specified on the pool
                                              which should not be accessible by normal tasks but should
                                              be accessible by StartTasks. Known values are: "task",
                                              "pool".
                                        },
                                        "username": "str"  # Optional. The
                                          userName and autoUser properties are mutually exclusive; you
                                          must specify one but not both.
                                    },
                                    "waitForSuccess": bool  # Optional. If true
                                      and the StartTask fails on a Node, the Batch service retries the
                                      StartTask up to its maximum retry count (maxTaskRetryCount). If
                                      the Task has still not completed successfully after all retries,
                                      then the Batch service marks the Node unusable, and will not
                                      schedule Tasks to it. This condition can be detected via the
                                      Compute Node state and failure info details. If false, the Batch
                                      service will not wait for the StartTask to complete. In this
                                      case, other Tasks can start executing on the Compute Node while
                                      the StartTask is still running; and even if the StartTask fails,
                                      new Tasks will continue to be scheduled on the Compute Node. The
                                      default is true.
                                },
                                "targetDedicatedNodes": 0,  # Optional. This property
                                  must not be specified if enableAutoScale is set to true. If
                                  enableAutoScale is set to false, then you must set either
                                  targetDedicatedNodes, targetLowPriorityNodes, or both.
                                "targetLowPriorityNodes": 0,  # Optional. This
                                  property must not be specified if enableAutoScale is set to true. If
                                  enableAutoScale is set to false, then you must set either
                                  targetDedicatedNodes, targetLowPriorityNodes, or both.
                                "taskSchedulingPolicy": {
                                    "nodeFillType": "str"  # Required. If not
                                      specified, the default is spread. Known values are: "spread",
                                      "pack".
                                },
                                "taskSlotsPerNode": 0,  # Optional. The default value
                                  is 1. The maximum value is the smaller of 4 times the number of cores
                                  of the vmSize of the pool or 256.
                                "userAccounts": [
                                    {
                                        "elevationLevel": "str",  # Optional.
                                          The default value is nonAdmin. Known values are: "nonadmin",
                                          "admin".
                                        "linuxUserConfiguration": {
                                            "gid": 0,  # Optional. The
                                              uid and gid properties must be specified together or not
                                              at all. If not specified the underlying operating system
                                              picks the gid.
                                            "sshPrivateKey": "str",  #
                                              Optional. The private key must not be password protected.
                                              The private key is used to automatically configure
                                              asymmetric-key based authentication for SSH between
                                              Compute Nodes in a Linux Pool when the Pool's
                                              enableInterNodeCommunication property is true (it is
                                              ignored if enableInterNodeCommunication is false). It
                                              does this by placing the key pair into the user's .ssh
                                              directory. If not specified, password-less SSH is not
                                              configured between Compute Nodes (no modification of the
                                              user's .ssh directory is done).
                                            "uid": 0  # Optional. The uid
                                              and gid properties must be specified together or not at
                                              all. If not specified the underlying operating system
                                              picks the uid.
                                        },
                                        "name": "str",  # Required. The name
                                          of the user Account.
                                        "password": "str",  # Required. The
                                          password for the user Account.
                                        "windowsUserConfiguration": {
                                            "loginMode": "str"  #
                                              Optional. The default value for
                                              VirtualMachineConfiguration Pools is 'batch' and for
                                              CloudServiceConfiguration Pools is 'interactive'. Known
                                              values are: "batch", "interactive".
                                        }
                                    }
                                ],
                                "virtualMachineConfiguration": {
                                    "containerConfiguration": {
                                        "containerImageNames": [
                                            "str"  # Optional. This is
                                              the full Image reference, as would be specified to
                                              "docker pull". An Image will be sourced from the default
                                              Docker registry unless the Image is fully qualified with
                                              an alternative registry.
                                        ],
                                        "containerRegistries": [
                                            {
                                                "identityReference":
                                                  {
                                                    "resourceId":
                                                      "str"  # Optional. The ARM resource id of the
                                                      user assigned identity.
                                                },
                                                "password": "str",  #
                                                  Optional. The password to log into the registry
                                                  server.
                                                "registryServer":
                                                  "str",  # Optional. If omitted, the default is
                                                  "docker.io".
                                                "username": "str"  #
                                                  Optional. The user name to log into the registry
                                                  server.
                                            }
                                        ],
                                        "type": "dockerCompatible"  # Default
                                          value is "dockerCompatible". The container technology to be
                                          used. Has constant value: "dockerCompatible".
                                    },
                                    "dataDisks": [
                                        {
                                            "caching": "str",  #
                                              Optional. The default value for caching is readwrite. For
                                              information about the caching options see:
                                              https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
                                              Known values are: "none", "readonly", "readwrite".
                                            "diskSizeGB": 0,  # Required.
                                              The initial disk size in gigabytes.
                                            "lun": 0,  # Required. The
                                              lun is used to uniquely identify each data disk. If
                                              attaching multiple disks, each should have a distinct
                                              lun. The value must be between 0 and 63, inclusive.
                                            "storageAccountType": "str"
                                              # Optional. If omitted, the default is "standard_lrs".
                                              Known values are: "standard_lrs", "premium_lrs".
                                        }
                                    ],
                                    "diskEncryptionConfiguration": {
                                        "targets": [
                                            "str"  # Optional. If
                                              omitted, no disks on the compute nodes in the pool will
                                              be encrypted. On Linux pool, only "TemporaryDisk" is
                                              supported; on Windows pool, "OsDisk" and "TemporaryDisk"
                                              must be specified.
                                        ]
                                    },
                                    "extensions": [
                                        {
                                            "autoUpgradeMinorVersion":
                                              bool,  # Optional. Indicates whether the extension should
                                              use a newer minor version if one is available at
                                              deployment time. Once deployed, however, the extension
                                              will not upgrade minor versions unless redeployed, even
                                              with this property set to true.
                                            "name": "str",  # Required.
                                              The name of the virtual machine extension.
                                            "protectedSettings": {},  #
                                              Optional. The extension can contain either
                                              protectedSettings or protectedSettingsFromKeyVault or no
                                              protected settings at all.
                                            "provisionAfterExtensions": [
                                                "str"  # Optional.
                                                  Collection of extension names after which this
                                                  extension needs to be provisioned.
                                            ],
                                            "publisher": "str",  #
                                              Required. The name of the extension handler publisher.
                                            "settings": {},  # Optional.
                                              Any object.
                                            "type": "str",  # Required.
                                              The type of the extension.
                                            "typeHandlerVersion": "str"
                                              # Optional. The version of script handler.
                                        }
                                    ],
                                    "imageReference": {
                                        "exactVersion": "str",  # Optional.
                                          The specific version of the platform image or marketplace
                                          image used to create the node. This read-only field differs
                                          from 'version' only if the value specified for 'version' when
                                          the pool was created was 'latest'.
                                        "offer": "str",  # Optional. For
                                          example, UbuntuServer or WindowsServer.
                                        "publisher": "str",  # Optional. For
                                          example, Canonical or MicrosoftWindowsServer.
                                        "sku": "str",  # Optional. For
                                          example, 18.04-LTS or 2019-Datacenter.
                                        "version": "str",  # Optional. A
                                          value of 'latest' can be specified to select the latest
                                          version of an Image. If omitted, the default is 'latest'.
                                        "virtualMachineImageId": "str"  #
                                          Optional. This property is mutually exclusive with other
                                          ImageReference properties. The Shared Image Gallery Image
                                          must have replicas in the same region and must be in the same
                                          subscription as the Azure Batch account. If the image version
                                          is not specified in the imageId, the latest version will be
                                          used. For information about the firewall settings for the
                                          Batch Compute Node agent to communicate with the Batch
                                          service see
                                          https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                                    },
                                    "licenseType": "str",  # Optional. This only
                                      applies to Images that contain the Windows operating system, and
                                      should only be used when you hold valid on-premises licenses for
                                      the Compute Nodes which will be deployed. If omitted, no
                                      on-premises licensing discount is applied. Values are:"n"n
                                      Windows_Server - The on-premises license is for Windows Server."n
                                      Windows_Client - The on-premises license is for Windows Client.
                                    "nodeAgentSKUId": "str",  # Required. The
                                      Batch Compute Node agent is a program that runs on each Compute
                                      Node in the Pool, and provides the command-and-control interface
                                      between the Compute Node and the Batch service. There are
                                      different implementations of the Compute Node agent, known as
                                      SKUs, for different operating systems. You must specify a Compute
                                      Node agent SKU which matches the selected Image reference. To get
                                      the list of supported Compute Node agent SKUs along with their
                                      list of verified Image references, see the 'List supported
                                      Compute Node agent SKUs' operation.
                                    "nodePlacementConfiguration": {
                                        "policy": "str"  # Optional.
                                          Allocation policy used by Batch Service to provision the
                                          nodes. If not specified, Batch will use the regional policy.
                                          Known values are: "regional", "zonal".
                                    },
                                    "osDisk": {
                                        "ephemeralOSDiskSettings": {
                                            "placement": "CacheDisk"  #
                                              Optional. Default value is "CacheDisk". This property can
                                              be used by user in the request to choose the location
                                              e.g., cache disk space for Ephemeral OS disk
                                              provisioning. For more information on Ephemeral OS disk
                                              size requirements, please refer to Ephemeral OS disk size
                                              requirements for Windows VMs at
                                              https://docs.microsoft.com/en-us/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements
                                              and Linux VMs at
                                              https://docs.microsoft.com/en-us/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements.
                                              The only acceptable values to pass in are None and
                                              "CacheDisk". The default value is None.
                                        }
                                    },
                                    "windowsConfiguration": {
                                        "enableAutomaticUpdates": bool  #
                                          Optional. If omitted, the default value is true.
                                    }
                                },
                                "vmSize": "str"  # Required. For information about
                                  available sizes of virtual machines in Pools, see Choose a VM size
                                  for Compute Nodes in an Azure Batch Pool
                                  (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
                            },
                            "poolLifetimeOption": "str"  # Required. The minimum lifetime
                              of created auto Pools, and how multiple Jobs on a schedule are assigned
                              to Pools. Known values are: "jobschedule", "job".
                        },
                        "poolId": "str"  # Optional. You must ensure that the Pool referenced
                          by this property exists. If the Pool does not exist at the time the Batch
                          service tries to schedule a Job, no Tasks for the Job will run until you
                          create a Pool with that id. Note that the Batch service will not reject the
                          Job request; it will simply not run Tasks until the Pool exists. You must
                          specify either the Pool ID or the auto Pool specification, but not both.
                    },
                    "priority": 0  # Optional. Priority values can range from -1000 to 1000, with
                      -1000 being the lowest priority and 1000 being the highest priority. If omitted,
                      it is set to the default value 0.
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', "application/json; odata=minimalmetadata"))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        _content = job_update_parameter

        request = build_update_request(
            job_id=job_id,
            api_version=api_version,
            content_type=content_type,
            content=_content,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        response_headers = {}
        response_headers['client-request-id']=self._deserialize('str', response.headers.get('client-request-id'))
        response_headers['request-id']=self._deserialize('str', response.headers.get('request-id'))
        response_headers['ETag']=self._deserialize('str', response.headers.get('ETag'))
        response_headers['Last-Modified']=self._deserialize('rfc-1123', response.headers.get('Last-Modified'))
        response_headers['DataServiceId']=self._deserialize('str', response.headers.get('DataServiceId'))


        if cls:
            return cls(pipeline_response, None, response_headers)



    @distributed_trace
    def disable(  # pylint: disable=inconsistent-return-statements
        self,
        job_id: str,
        job_disable_parameter: JSON,
        *,
        timeout: Optional[int] = 30,
        client_request_id: Optional[str] = None,
        return_client_request_id: Optional[bool] = False,
        ocp_date: Optional[datetime.datetime] = None,
        if_match: Optional[str] = None,
        if_none_match: Optional[str] = None,
        if_modified_since: Optional[datetime.datetime] = None,
        if_unmodified_since: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """Disables the specified Job, preventing new Tasks from running.

        The Batch Service immediately moves the Job to the disabling state. Batch then uses the
        disableTasks parameter to determine what to do with the currently running Tasks of the Job. The
        Job remains in the disabling state until the disable operation is completed and all Tasks have
        been dealt with according to the disableTasks option; the Job then moves to the disabled state.
        No new Tasks are started under the Job until it moves back to active state. If you try to
        disable a Job that is in any state other than active, disabling, or disabled, the request fails
        with status code 409.

        :param job_id: The ID of the Job to disable.
        :type job_id: str
        :param job_disable_parameter: The parameters for the request.
        :type job_disable_parameter: JSON
        :keyword timeout: The maximum time that the server can spend processing the request, in
         seconds. The default is 30 seconds.
        :paramtype timeout: int
        :keyword client_request_id: The caller-generated request identity, in the form of a GUID with
         no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. Default value is
         None.
        :paramtype client_request_id: str
        :keyword return_client_request_id: Whether the server should return the client-request-id in
         the response. Default value is False.
        :paramtype return_client_request_id: bool
        :keyword ocp_date: The time the request was issued. Client libraries typically set this to the
         current system clock time; set it explicitly if you are calling the REST API directly. Default
         value is None.
        :paramtype ocp_date: ~datetime.datetime
        :keyword if_match: An ETag value associated with the version of the resource known to the
         client. The operation will be performed only if the resource's current ETag on the service
         exactly matches the value specified by the client. Default value is None.
        :paramtype if_match: str
        :keyword if_none_match: An ETag value associated with the version of the resource known to the
         client. The operation will be performed only if the resource's current ETag on the service does
         not match the value specified by the client. Default value is None.
        :paramtype if_none_match: str
        :keyword if_modified_since: A timestamp indicating the last modified time of the resource known
         to the client. The operation will be performed only if the resource on the service has been
         modified since the specified time. Default value is None.
        :paramtype if_modified_since: ~datetime.datetime
        :keyword if_unmodified_since: A timestamp indicating the last modified time of the resource
         known to the client. The operation will be performed only if the resource on the service has
         not been modified since the specified time. Default value is None.
        :paramtype if_unmodified_since: ~datetime.datetime
        :return: None
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                job_disable_parameter = {
                    "disableTasks": "str"  # Required. What to do with active Tasks associated
                      with the Job. Known values are: "requeue", "terminate", "wait".
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', "application/json; odata=minimalmetadata"))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        _content = job_disable_parameter

        request = build_disable_request(
            job_id=job_id,
            api_version=api_version,
            content_type=content_type,
            content=_content,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )
        response = pipeline_response.http_response

        if response.status_code not in [202]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        response_headers = {}
        response_headers['client-request-id']=self._deserialize('str', response.headers.get('client-request-id'))
        response_headers['request-id']=self._deserialize('str', response.headers.get('request-id'))
        response_headers['ETag']=self._deserialize('str', response.headers.get('ETag'))
        response_headers['Last-Modified']=self._deserialize('rfc-1123', response.headers.get('Last-Modified'))
        response_headers['DataServiceId']=self._deserialize('str', response.headers.get('DataServiceId'))


        if cls:
            return cls(pipeline_response, None, response_headers)



    @distributed_trace
    def enable(  # pylint: disable=inconsistent-return-statements
        self,
        job_id: str,
        *,
        timeout: Optional[int] = 30,
        client_request_id: Optional[str] = None,
        return_client_request_id: Optional[bool] = False,
        ocp_date: Optional[datetime.datetime] = None,
        if_match: Optional[str] = None,
        if_none_match: Optional[str] = None,
        if_modified_since: Optional[datetime.datetime] = None,
        if_unmodified_since: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """Enables the specified Job, allowing new Tasks to run.

        When you call this API, the Batch service sets a disabled Job to the enabling state. After the
        this operation is completed, the Job moves to the active state, and scheduling of new Tasks
        under the Job resumes. The Batch service does not allow a Task to remain in the active state
        for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added
        more than 180 days ago, those Tasks will not run.

        :param job_id: The ID of the Job to enable.
        :type job_id: str
        :keyword timeout: The maximum time that the server can spend processing the request, in
         seconds. The default is 30 seconds.
        :paramtype timeout: int
        :keyword client_request_id: The caller-generated request identity, in the form of a GUID with
         no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. Default value is
         None.
        :paramtype client_request_id: str
        :keyword return_client_request_id: Whether the server should return the client-request-id in
         the response. Default value is False.
        :paramtype return_client_request_id: bool
        :keyword ocp_date: The time the request was issued. Client libraries typically set this to the
         current system clock time; set it explicitly if you are calling the REST API directly. Default
         value is None.
        :paramtype ocp_date: ~datetime.datetime
        :keyword if_match: An ETag value associated with the version of the resource known to the
         client. The operation will be performed only if the resource's current ETag on the service
         exactly matches the value specified by the client. Default value is None.
        :paramtype if_match: str
        :keyword if_none_match: An ETag value associated with the version of the resource known to the
         client. The operation will be performed only if the resource's current ETag on the service does
         not match the value specified by the client. Default value is None.
        :paramtype if_none_match: str
        :keyword if_modified_since: A timestamp indicating the last modified time of the resource known
         to the client. The operation will be performed only if the resource on the service has been
         modified since the specified time. Default value is None.
        :paramtype if_modified_since: ~datetime.datetime
        :keyword if_unmodified_since: A timestamp indicating the last modified time of the resource
         known to the client. The operation will be performed only if the resource on the service has
         not been modified since the specified time. Default value is None.
        :paramtype if_unmodified_since: ~datetime.datetime
        :return: None
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_enable_request(
            job_id=job_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )
        response = pipeline_response.http_response

        if response.status_code not in [202]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        response_headers = {}
        response_headers['client-request-id']=self._deserialize('str', response.headers.get('client-request-id'))
        response_headers['request-id']=self._deserialize('str', response.headers.get('request-id'))
        response_headers['ETag']=self._deserialize('str', response.headers.get('ETag'))
        response_headers['Last-Modified']=self._deserialize('rfc-1123', response.headers.get('Last-Modified'))
        response_headers['DataServiceId']=self._deserialize('str', response.headers.get('DataServiceId'))


        if cls:
            return cls(pipeline_response, None, response_headers)



    @distributed_trace
    def terminate(  # pylint: disable=inconsistent-return-statements
        self,
        job_id: str,
        job_terminate_parameter: Optional[JSON] = None,
        *,
        timeout: Optional[int] = 30,
        client_request_id: Optional[str] = None,
        return_client_request_id: Optional[bool] = False,
        ocp_date: Optional[datetime.datetime] = None,
        if_match: Optional[str] = None,
        if_none_match: Optional[str] = None,
        if_modified_since: Optional[datetime.datetime] = None,
        if_unmodified_since: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """Terminates the specified Job, marking it as completed.

        When a Terminate Job request is received, the Batch service sets the Job to the terminating
        state. The Batch service then terminates any running Tasks associated with the Job and runs any
        required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks
        in the Job in the active state, they will remain in the active state. Once a Job is terminated,
        new Tasks cannot be added and any remaining active Tasks will not be scheduled.

        :param job_id: The ID of the Job to terminate.
        :type job_id: str
        :param job_terminate_parameter: The parameters for the request. Default value is None.
        :type job_terminate_parameter: JSON
        :keyword timeout: The maximum time that the server can spend processing the request, in
         seconds. The default is 30 seconds.
        :paramtype timeout: int
        :keyword client_request_id: The caller-generated request identity, in the form of a GUID with
         no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. Default value is
         None.
        :paramtype client_request_id: str
        :keyword return_client_request_id: Whether the server should return the client-request-id in
         the response. Default value is False.
        :paramtype return_client_request_id: bool
        :keyword ocp_date: The time the request was issued. Client libraries typically set this to the
         current system clock time; set it explicitly if you are calling the REST API directly. Default
         value is None.
        :paramtype ocp_date: ~datetime.datetime
        :keyword if_match: An ETag value associated with the version of the resource known to the
         client. The operation will be performed only if the resource's current ETag on the service
         exactly matches the value specified by the client. Default value is None.
        :paramtype if_match: str
        :keyword if_none_match: An ETag value associated with the version of the resource known to the
         client. The operation will be performed only if the resource's current ETag on the service does
         not match the value specified by the client. Default value is None.
        :paramtype if_none_match: str
        :keyword if_modified_since: A timestamp indicating the last modified time of the resource known
         to the client. The operation will be performed only if the resource on the service has been
         modified since the specified time. Default value is None.
        :paramtype if_modified_since: ~datetime.datetime
        :keyword if_unmodified_since: A timestamp indicating the last modified time of the resource
         known to the client. The operation will be performed only if the resource on the service has
         not been modified since the specified time. Default value is None.
        :paramtype if_unmodified_since: ~datetime.datetime
        :return: None
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                job_terminate_parameter = {
                    "terminateReason": "str"  # Optional. The text you want to appear as the
                      Job's TerminateReason. The default is 'UserTerminate'.
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', "application/json; odata=minimalmetadata"))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        if job_terminate_parameter is not None:
            _content = job_terminate_parameter
        else:
            _content = None

        request = build_terminate_request(
            job_id=job_id,
            api_version=api_version,
            content_type=content_type,
            content=_content,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )
        response = pipeline_response.http_response

        if response.status_code not in [202]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        response_headers = {}
        response_headers['client-request-id']=self._deserialize('str', response.headers.get('client-request-id'))
        response_headers['request-id']=self._deserialize('str', response.headers.get('request-id'))
        response_headers['ETag']=self._deserialize('str', response.headers.get('ETag'))
        response_headers['Last-Modified']=self._deserialize('rfc-1123', response.headers.get('Last-Modified'))
        response_headers['DataServiceId']=self._deserialize('str', response.headers.get('DataServiceId'))


        if cls:
            return cls(pipeline_response, None, response_headers)



    @distributed_trace
    def add(  # pylint: disable=inconsistent-return-statements
        self,
        job: JSON,
        *,
        timeout: Optional[int] = 30,
        client_request_id: Optional[str] = None,
        return_client_request_id: Optional[bool] = False,
        ocp_date: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """Adds a Job to the specified Account.

        The Batch service supports two ways to control the work done as part of a Job. In the first
        approach, the user specifies a Job Manager Task. The Batch service launches this Task when it
        is ready to start the Job. The Job Manager Task controls all other Tasks that run under this
        Job, by using the Task APIs. In the second approach, the user directly controls the execution
        of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid
        including sensitive information such as user names or secret project names. This information
        may appear in telemetry logs accessible to Microsoft Support engineers.

        :param job: The Job to be added.
        :type job: JSON
        :keyword timeout: The maximum time that the server can spend processing the request, in
         seconds. The default is 30 seconds.
        :paramtype timeout: int
        :keyword client_request_id: The caller-generated request identity, in the form of a GUID with
         no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. Default value is
         None.
        :paramtype client_request_id: str
        :keyword return_client_request_id: Whether the server should return the client-request-id in
         the response. Default value is False.
        :paramtype return_client_request_id: bool
        :keyword ocp_date: The time the request was issued. Client libraries typically set this to the
         current system clock time; set it explicitly if you are calling the REST API directly. Default
         value is None.
        :paramtype ocp_date: ~datetime.datetime
        :return: None
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                job = {
                    "allowTaskPreemption": bool,  # Optional. If the value is set to True, other
                      high priority jobs submitted to the system will take precedence and will be able
                      requeue tasks from this job. You can update a job's allowTaskPreemption after it
                      has been created using the update job API.
                    "commonEnvironmentSettings": [
                        {
                            "name": "str",  # Required. The name of the environment
                              variable.
                            "value": "str"  # Optional. The value of the environment
                              variable.
                        }
                    ],
                    "constraints": {
                        "maxTaskRetryCount": 0,  # Optional. Note that this value
                          specifically controls the number of retries. The Batch service will try each
                          Task once, and may then retry up to this limit. For example, if the maximum
                          retry count is 3, Batch tries a Task up to 4 times (one initial try and 3
                          retries). If the maximum retry count is 0, the Batch service does not retry
                          Tasks. If the maximum retry count is -1, the Batch service retries the Task
                          without limit, however this is not recommended for a start task or any task.
                          The default value is 0 (no retries).
                        "maxWallClockTime": "1 day, 0:00:00"  # Optional. If the Job does not
                          complete within the time limit, the Batch service terminates it and any Tasks
                          that are still running. In this case, the termination reason will be
                          MaxWallClockTimeExpiry. If this property is not specified, there is no time
                          limit on how long the Job may run.
                    },
                    "displayName": "str",  # Optional. The display name need not be unique and
                      can contain any Unicode characters up to a maximum length of 1024.
                    "id": "str",  # Required. The ID can contain any combination of alphanumeric
                      characters including hyphens and underscores, and cannot contain more than 64
                      characters. The ID is case-preserving and case-insensitive (that is, you may not
                      have two IDs within an Account that differ only by case).
                    "jobManagerTask": {
                        "allowLowPriorityNode": bool,  # Optional. The default value is true.
                        "applicationPackageReferences": [
                            {
                                "applicationId": "str",  # Required. The ID of the
                                  application to deploy.
                                "version": "str"  # Optional. If this is omitted on a
                                  Pool, and no default version is specified for this application, the
                                  request fails with the error code InvalidApplicationPackageReferences
                                  and HTTP status code 409. If this is omitted on a Task, and no
                                  default version is specified for this application, the Task fails
                                  with a pre-processing error.
                            }
                        ],
                        "authenticationTokenSettings": {
                            "access": [
                                "job"  # Optional. Default value is "job". The
                                  authentication token grants access to a limited set of Batch service
                                  operations. Currently the only supported value for the access
                                  property is 'job', which grants access to all operations related to
                                  the Job which contains the Task.
                            ]
                        },
                        "commandLine": "str",  # Required. The command line does not run
                          under a shell, and therefore cannot take advantage of shell features such as
                          environment variable expansion. If you want to take advantage of such
                          features, you should invoke the shell in the command line, for example using
                          "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the
                          command line refers to file paths, it should use a relative path (relative to
                          the Task working directory), or use the Batch provided environment variable
                          (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                        "constraints": {
                            "maxTaskRetryCount": 0,  # Optional. Note that this value
                              specifically controls the number of retries for the Task executable due
                              to a nonzero exit code. The Batch service will try the Task once, and may
                              then retry up to this limit. For example, if the maximum retry count is
                              3, Batch tries the Task up to 4 times (one initial try and 3 retries). If
                              the maximum retry count is 0, the Batch service does not retry the Task
                              after the first attempt. If the maximum retry count is -1, the Batch
                              service retries the Task without limit, however this is not recommended
                              for a start task or any task. The default value is 0 (no retries).
                            "maxWallClockTime": "1 day, 0:00:00",  # Optional. If this is
                              not specified, there is no time limit on how long the Task may run.
                            "retentionTime": "1 day, 0:00:00"  # Optional. The default is
                              7 days, i.e. the Task directory will be retained for 7 days unless the
                              Compute Node is removed or the Job is deleted.
                        },
                        "containerSettings": {
                            "containerRunOptions": "str",  # Optional. These additional
                              options are supplied as arguments to the "docker create" command, in
                              addition to those controlled by the Batch Service.
                            "imageName": "str",  # Required. This is the full Image
                              reference, as would be specified to "docker pull". If no tag is provided
                              as part of the Image name, the tag ":latest" is used as a default.
                            "registry": {
                                "identityReference": {
                                    "resourceId": "str"  # Optional. The ARM
                                      resource id of the user assigned identity.
                                },
                                "password": "str",  # Optional. The password to log
                                  into the registry server.
                                "registryServer": "str",  # Optional. If omitted, the
                                  default is "docker.io".
                                "username": "str"  # Optional. The user name to log
                                  into the registry server.
                            },
                            "workingDirectory": "str"  # Optional. The default is
                              'taskWorkingDirectory'. Known values are: "taskWorkingDirectory",
                              "containerImageDefault".
                        },
                        "displayName": "str",  # Optional. It need not be unique and can
                          contain any Unicode characters up to a maximum length of 1024.
                        "environmentSettings": [
                            {
                                "name": "str",  # Required. The name of the
                                  environment variable.
                                "value": "str"  # Optional. The value of the
                                  environment variable.
                            }
                        ],
                        "id": "str",  # Required. The ID can contain any combination of
                          alphanumeric characters including hyphens and underscores and cannot contain
                          more than 64 characters.
                        "killJobOnCompletion": bool,  # Optional. If true, when the Job
                          Manager Task completes, the Batch service marks the Job as complete. If any
                          Tasks are still running at this time (other than Job Release), those Tasks
                          are terminated. If false, the completion of the Job Manager Task does not
                          affect the Job status. In this case, you should either use the
                          onAllTasksComplete attribute to terminate the Job, or have a client or user
                          terminate the Job explicitly. An example of this is if the Job Manager
                          creates a set of Tasks but then takes no further role in their execution. The
                          default value is true. If you are using the onAllTasksComplete and
                          onTaskFailure attributes to control Job lifetime, and using the Job Manager
                          Task only to create the Tasks for the Job (not to monitor progress), then it
                          is important to set killJobOnCompletion to false.
                        "outputFiles": [
                            {
                                "destination": {
                                    "container": {
                                        "containerUrl": "str",  # Required.
                                          If not using a managed identity, the URL must include a
                                          Shared Access Signature (SAS) granting write permissions to
                                          the container.
                                        "identityReference": {
                                            "resourceId": "str"  #
                                              Optional. The ARM resource id of the user assigned
                                              identity.
                                        },
                                        "path": "str",  # Optional. If
                                          filePattern refers to a specific file (i.e. contains no
                                          wildcards), then path is the name of the blob to which to
                                          upload that file. If filePattern contains one or more
                                          wildcards (and therefore may match multiple files), then path
                                          is the name of the blob virtual directory (which is prepended
                                          to each blob name) to which to upload the file(s). If
                                          omitted, file(s) are uploaded to the root of the container
                                          with a blob name matching their file name.
                                        "uploadHeaders": [
                                            {
                                                "name": "str",  #
                                                  Required. The case-insensitive name of the header to
                                                  be used while uploading output files.
                                                "value": "str"  #
                                                  Optional. The value of the header to be used while
                                                  uploading output files.
                                            }
                                        ]
                                    }
                                },
                                "filePattern": "str",  # Required. Both relative and
                                  absolute paths are supported. Relative paths are relative to the Task
                                  working directory. The following wildcards are supported: * matches 0
                                  or more characters (for example pattern abc* would match abc or
                                  abcdef), ** matches any directory, ? matches any single character,
                                  [abc] matches one character in the brackets, and [a-c] matches one
                                  character in the range. Brackets can include a negation to match any
                                  character not specified (for example [!abc] matches any character but
                                  a, b, or c). If a file name starts with "." it is ignored by default
                                  but may be matched by specifying it explicitly (for example *.gif
                                  will not match .a.gif, but .*.gif will). A simple example: **"" *.txt
                                  matches any file that does not start in '.' and ends with .txt in the
                                  Task working directory or any subdirectory. If the filename contains
                                  a wildcard character it can be escaped using brackets (for example
                                  abc["" *] would match a file named abc*"" ). Note that both and / are
                                  treated as directory separators on Windows, but only / is on Linux.
                                  Environment variables (%var% on Windows or $var on Linux) are
                                  expanded prior to the pattern being applied.
                                "uploadOptions": {
                                    "uploadCondition": "str"  # Required. The
                                      default is taskcompletion. Known values are: "tasksuccess",
                                      "taskfailure", "taskcompletion".
                                }
                            }
                        ],
                        "requiredSlots": 0,  # Optional. The default is 1. A Task can only be
                          scheduled to run on a compute node if the node has enough free scheduling
                          slots available. For multi-instance Tasks, this property is not supported and
                          must not be specified.
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified.
                                "blobPrefix": "str",  # Optional. The property is
                                  valid only when autoStorageContainerName or storageContainerUrl is
                                  used. This prefix can be a partial filename or a subdirectory. If a
                                  prefix is not specified, all the files in the container will be
                                  downloaded.
                                "fileMode": "str",  # Optional. This property applies
                                  only to files being downloaded to Linux Compute Nodes. It will be
                                  ignored if it is specified for a resourceFile which will be
                                  downloaded to a Windows Compute Node. If this property is not
                                  specified for a Linux Compute Node, then a default value of 0770 is
                                  applied to the file.
                                "filePath": "str",  # Optional. If the httpUrl
                                  property is specified, the filePath is required and describes the
                                  path which the file will be downloaded to, including the filename.
                                  Otherwise, if the autoStorageContainerName or storageContainerUrl
                                  property is specified, filePath is optional and is the directory to
                                  download the files to. In the case where filePath is used as a
                                  directory, any directory structure already associated with the input
                                  data will be retained in full and appended to the specified filePath
                                  directory. The specified relative path cannot break out of the Task's
                                  working directory (for example by using '..').
                                "httpUrl": "str",  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified. If the URL
                                  points to Azure Blob Storage, it must be readable from compute nodes.
                                  There are three ways to get such a URL for a blob in Azure storage:
                                  include a Shared Access Signature (SAS) granting read permissions on
                                  the blob, use a managed identity with read permission, or set the ACL
                                  for the blob or its container to allow public access.
                                "identityReference": {
                                    "resourceId": "str"  # Optional. The ARM
                                      resource id of the user assigned identity.
                                },
                                "storageContainerUrl": "str"  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified. This URL
                                  must be readable and listable from compute nodes. There are three
                                  ways to get such a URL for a container in Azure storage: include a
                                  Shared Access Signature (SAS) granting read and list permissions on
                                  the container, use a managed identity with read and list permissions,
                                  or set the ACL for the container to allow public access.
                            }
                        ],
                        "runExclusive": bool,  # Optional. If true, no other Tasks will run
                          on the same Node for as long as the Job Manager is running. If false, other
                          Tasks can run simultaneously with the Job Manager on a Compute Node. The Job
                          Manager Task counts normally against the Compute Node's concurrent Task
                          limit, so this is only relevant if the Compute Node allows multiple
                          concurrent Tasks. The default value is true.
                        "userIdentity": {
                            "autoUser": {
                                "elevationLevel": "str",  # Optional. The default
                                  value is nonAdmin. Known values are: "nonadmin", "admin".
                                "scope": "str"  # Optional. The default value is
                                  pool. If the pool is running Windows a value of Task should be
                                  specified if stricter isolation between tasks is required. For
                                  example, if the task mutates the registry in a way which could impact
                                  other tasks, or if certificates have been specified on the pool which
                                  should not be accessible by normal tasks but should be accessible by
                                  StartTasks. Known values are: "task", "pool".
                            },
                            "username": "str"  # Optional. The userName and autoUser
                              properties are mutually exclusive; you must specify one but not both.
                        }
                    },
                    "jobPreparationTask": {
                        "commandLine": "str",  # Required. The command line does not run
                          under a shell, and therefore cannot take advantage of shell features such as
                          environment variable expansion. If you want to take advantage of such
                          features, you should invoke the shell in the command line, for example using
                          "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the
                          command line refers to file paths, it should use a relative path (relative to
                          the Task working directory), or use the Batch provided environment variable
                          (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                        "constraints": {
                            "maxTaskRetryCount": 0,  # Optional. Note that this value
                              specifically controls the number of retries for the Task executable due
                              to a nonzero exit code. The Batch service will try the Task once, and may
                              then retry up to this limit. For example, if the maximum retry count is
                              3, Batch tries the Task up to 4 times (one initial try and 3 retries). If
                              the maximum retry count is 0, the Batch service does not retry the Task
                              after the first attempt. If the maximum retry count is -1, the Batch
                              service retries the Task without limit, however this is not recommended
                              for a start task or any task. The default value is 0 (no retries).
                            "maxWallClockTime": "1 day, 0:00:00",  # Optional. If this is
                              not specified, there is no time limit on how long the Task may run.
                            "retentionTime": "1 day, 0:00:00"  # Optional. The default is
                              7 days, i.e. the Task directory will be retained for 7 days unless the
                              Compute Node is removed or the Job is deleted.
                        },
                        "containerSettings": {
                            "containerRunOptions": "str",  # Optional. These additional
                              options are supplied as arguments to the "docker create" command, in
                              addition to those controlled by the Batch Service.
                            "imageName": "str",  # Required. This is the full Image
                              reference, as would be specified to "docker pull". If no tag is provided
                              as part of the Image name, the tag ":latest" is used as a default.
                            "registry": {
                                "identityReference": {
                                    "resourceId": "str"  # Optional. The ARM
                                      resource id of the user assigned identity.
                                },
                                "password": "str",  # Optional. The password to log
                                  into the registry server.
                                "registryServer": "str",  # Optional. If omitted, the
                                  default is "docker.io".
                                "username": "str"  # Optional. The user name to log
                                  into the registry server.
                            },
                            "workingDirectory": "str"  # Optional. The default is
                              'taskWorkingDirectory'. Known values are: "taskWorkingDirectory",
                              "containerImageDefault".
                        },
                        "environmentSettings": [
                            {
                                "name": "str",  # Required. The name of the
                                  environment variable.
                                "value": "str"  # Optional. The value of the
                                  environment variable.
                            }
                        ],
                        "id": "str",  # Optional. The ID can contain any combination of
                          alphanumeric characters including hyphens and underscores and cannot contain
                          more than 64 characters. If you do not specify this property, the Batch
                          service assigns a default value of 'jobpreparation'. No other Task in the Job
                          can have the same ID as the Job Preparation Task. If you try to submit a Task
                          with the same id, the Batch service rejects the request with error code
                          TaskIdSameAsJobPreparationTask; if you are calling the REST API directly, the
                          HTTP status code is 409 (Conflict).
                        "rerunOnNodeRebootAfterSuccess": bool,  # Optional. The Job
                          Preparation Task is always rerun if a Compute Node is reimaged, or if the Job
                          Preparation Task did not complete (e.g. because the reboot occurred while the
                          Task was running). Therefore, you should always write a Job Preparation Task
                          to be idempotent and to behave correctly if run multiple times. The default
                          value is true.
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified.
                                "blobPrefix": "str",  # Optional. The property is
                                  valid only when autoStorageContainerName or storageContainerUrl is
                                  used. This prefix can be a partial filename or a subdirectory. If a
                                  prefix is not specified, all the files in the container will be
                                  downloaded.
                                "fileMode": "str",  # Optional. This property applies
                                  only to files being downloaded to Linux Compute Nodes. It will be
                                  ignored if it is specified for a resourceFile which will be
                                  downloaded to a Windows Compute Node. If this property is not
                                  specified for a Linux Compute Node, then a default value of 0770 is
                                  applied to the file.
                                "filePath": "str",  # Optional. If the httpUrl
                                  property is specified, the filePath is required and describes the
                                  path which the file will be downloaded to, including the filename.
                                  Otherwise, if the autoStorageContainerName or storageContainerUrl
                                  property is specified, filePath is optional and is the directory to
                                  download the files to. In the case where filePath is used as a
                                  directory, any directory structure already associated with the input
                                  data will be retained in full and appended to the specified filePath
                                  directory. The specified relative path cannot break out of the Task's
                                  working directory (for example by using '..').
                                "httpUrl": "str",  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified. If the URL
                                  points to Azure Blob Storage, it must be readable from compute nodes.
                                  There are three ways to get such a URL for a blob in Azure storage:
                                  include a Shared Access Signature (SAS) granting read permissions on
                                  the blob, use a managed identity with read permission, or set the ACL
                                  for the blob or its container to allow public access.
                                "identityReference": {
                                    "resourceId": "str"  # Optional. The ARM
                                      resource id of the user assigned identity.
                                },
                                "storageContainerUrl": "str"  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified. This URL
                                  must be readable and listable from compute nodes. There are three
                                  ways to get such a URL for a container in Azure storage: include a
                                  Shared Access Signature (SAS) granting read and list permissions on
                                  the container, use a managed identity with read and list permissions,
                                  or set the ACL for the container to allow public access.
                            }
                        ],
                        "userIdentity": {
                            "autoUser": {
                                "elevationLevel": "str",  # Optional. The default
                                  value is nonAdmin. Known values are: "nonadmin", "admin".
                                "scope": "str"  # Optional. The default value is
                                  pool. If the pool is running Windows a value of Task should be
                                  specified if stricter isolation between tasks is required. For
                                  example, if the task mutates the registry in a way which could impact
                                  other tasks, or if certificates have been specified on the pool which
                                  should not be accessible by normal tasks but should be accessible by
                                  StartTasks. Known values are: "task", "pool".
                            },
                            "username": "str"  # Optional. The userName and autoUser
                              properties are mutually exclusive; you must specify one but not both.
                        },
                        "waitForSuccess": bool  # Optional. If true and the Job Preparation
                          Task fails on a Node, the Batch service retries the Job Preparation Task up
                          to its maximum retry count (as specified in the constraints element). If the
                          Task has still not completed successfully after all retries, then the Batch
                          service will not schedule Tasks of the Job to the Node. The Node remains
                          active and eligible to run Tasks of other Jobs. If false, the Batch service
                          will not wait for the Job Preparation Task to complete. In this case, other
                          Tasks of the Job can start executing on the Compute Node while the Job
                          Preparation Task is still running; and even if the Job Preparation Task
                          fails, new Tasks will continue to be scheduled on the Compute Node. The
                          default value is true.
                    },
                    "jobReleaseTask": {
                        "commandLine": "str",  # Required. The command line does not run
                          under a shell, and therefore cannot take advantage of shell features such as
                          environment variable expansion. If you want to take advantage of such
                          features, you should invoke the shell in the command line, for example using
                          "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the
                          command line refers to file paths, it should use a relative path (relative to
                          the Task working directory), or use the Batch provided environment variable
                          (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                        "containerSettings": {
                            "containerRunOptions": "str",  # Optional. These additional
                              options are supplied as arguments to the "docker create" command, in
                              addition to those controlled by the Batch Service.
                            "imageName": "str",  # Required. This is the full Image
                              reference, as would be specified to "docker pull". If no tag is provided
                              as part of the Image name, the tag ":latest" is used as a default.
                            "registry": {
                                "identityReference": {
                                    "resourceId": "str"  # Optional. The ARM
                                      resource id of the user assigned identity.
                                },
                                "password": "str",  # Optional. The password to log
                                  into the registry server.
                                "registryServer": "str",  # Optional. If omitted, the
                                  default is "docker.io".
                                "username": "str"  # Optional. The user name to log
                                  into the registry server.
                            },
                            "workingDirectory": "str"  # Optional. The default is
                              'taskWorkingDirectory'. Known values are: "taskWorkingDirectory",
                              "containerImageDefault".
                        },
                        "environmentSettings": [
                            {
                                "name": "str",  # Required. The name of the
                                  environment variable.
                                "value": "str"  # Optional. The value of the
                                  environment variable.
                            }
                        ],
                        "id": "str",  # Optional. The ID can contain any combination of
                          alphanumeric characters including hyphens and underscores and cannot contain
                          more than 64 characters. If you do not specify this property, the Batch
                          service assigns a default value of 'jobrelease'. No other Task in the Job can
                          have the same ID as the Job Release Task. If you try to submit a Task with
                          the same id, the Batch service rejects the request with error code
                          TaskIdSameAsJobReleaseTask; if you are calling the REST API directly, the
                          HTTP status code is 409 (Conflict).
                        "maxWallClockTime": "1 day, 0:00:00",  # Optional. The maximum
                          elapsed time that the Job Release Task may run on a given Compute Node,
                          measured from the time the Task starts. If the Task does not complete within
                          the time limit, the Batch service terminates it. The default value is 15
                          minutes. You may not specify a timeout longer than 15 minutes. If you do, the
                          Batch service rejects it with an error; if you are calling the REST API
                          directly, the HTTP status code is 400 (Bad Request).
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified.
                                "blobPrefix": "str",  # Optional. The property is
                                  valid only when autoStorageContainerName or storageContainerUrl is
                                  used. This prefix can be a partial filename or a subdirectory. If a
                                  prefix is not specified, all the files in the container will be
                                  downloaded.
                                "fileMode": "str",  # Optional. This property applies
                                  only to files being downloaded to Linux Compute Nodes. It will be
                                  ignored if it is specified for a resourceFile which will be
                                  downloaded to a Windows Compute Node. If this property is not
                                  specified for a Linux Compute Node, then a default value of 0770 is
                                  applied to the file.
                                "filePath": "str",  # Optional. If the httpUrl
                                  property is specified, the filePath is required and describes the
                                  path which the file will be downloaded to, including the filename.
                                  Otherwise, if the autoStorageContainerName or storageContainerUrl
                                  property is specified, filePath is optional and is the directory to
                                  download the files to. In the case where filePath is used as a
                                  directory, any directory structure already associated with the input
                                  data will be retained in full and appended to the specified filePath
                                  directory. The specified relative path cannot break out of the Task's
                                  working directory (for example by using '..').
                                "httpUrl": "str",  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified. If the URL
                                  points to Azure Blob Storage, it must be readable from compute nodes.
                                  There are three ways to get such a URL for a blob in Azure storage:
                                  include a Shared Access Signature (SAS) granting read permissions on
                                  the blob, use a managed identity with read permission, or set the ACL
                                  for the blob or its container to allow public access.
                                "identityReference": {
                                    "resourceId": "str"  # Optional. The ARM
                                      resource id of the user assigned identity.
                                },
                                "storageContainerUrl": "str"  # Optional. The
                                  autoStorageContainerName, storageContainerUrl and httpUrl properties
                                  are mutually exclusive and one of them must be specified. This URL
                                  must be readable and listable from compute nodes. There are three
                                  ways to get such a URL for a container in Azure storage: include a
                                  Shared Access Signature (SAS) granting read and list permissions on
                                  the container, use a managed identity with read and list permissions,
                                  or set the ACL for the container to allow public access.
                            }
                        ],
                        "retentionTime": "1 day, 0:00:00",  # Optional. The default is 7
                          days, i.e. the Task directory will be retained for 7 days unless the Compute
                          Node is removed or the Job is deleted.
                        "userIdentity": {
                            "autoUser": {
                                "elevationLevel": "str",  # Optional. The default
                                  value is nonAdmin. Known values are: "nonadmin", "admin".
                                "scope": "str"  # Optional. The default value is
                                  pool. If the pool is running Windows a value of Task should be
                                  specified if stricter isolation between tasks is required. For
                                  example, if the task mutates the registry in a way which could impact
                                  other tasks, or if certificates have been specified on the pool which
                                  should not be accessible by normal tasks but should be accessible by
                                  StartTasks. Known values are: "task", "pool".
                            },
                            "username": "str"  # Optional. The userName and autoUser
                              properties are mutually exclusive; you must specify one but not both.
                        }
                    },
                    "maxParallelTasks": -1,  # Optional. Default value is -1. The value of
                      maxParallelTasks must be -1 or greater than 0 if specified. If not specified, the
                      default value is -1, which means there's no limit to the number of tasks that can
                      be run at once. You can update a job's maxParallelTasks after it has been created
                      using the update job API.
                    "metadata": [
                        {
                            "name": "str",  # Required. The name of the metadata item.
                            "value": "str"  # Required. The value of the metadata item.
                        }
                    ],
                    "networkConfiguration": {
                        "subnetId": "str"  # Required. The virtual network must be in the
                          same region and subscription as the Azure Batch Account. The specified subnet
                          should have enough free IP addresses to accommodate the number of Compute
                          Nodes which will run Tasks from the Job. This can be up to the number of
                          Compute Nodes in the Pool. The 'MicrosoftAzureBatch' service principal must
                          have the 'Classic Virtual Machine Contributor' Role-Based Access Control
                          (RBAC) role for the specified VNet so that Azure Batch service can schedule
                          Tasks on the Nodes. This can be verified by checking if the specified VNet
                          has any associated Network Security Groups (NSG). If communication to the
                          Nodes in the specified subnet is denied by an NSG, then the Batch service
                          will set the state of the Compute Nodes to unusable. This is of the form
                          /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.
                          If the specified VNet has any associated Network Security Groups (NSG), then
                          a few reserved system ports must be enabled for inbound communication from
                          the Azure Batch service. For Pools created with a Virtual Machine
                          configuration, enable ports 29876 and 29877, as well as port 22 for Linux and
                          port 3389 for Windows. Port 443 is also required to be open for outbound
                          connections for communications to Azure Storage. For more details see:
                          https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                    },
                    "onAllTasksComplete": "str",  # Optional. Note that if a Job contains no
                      Tasks, then all Tasks are considered complete. This option is therefore most
                      commonly used with a Job Manager task; if you want to use automatic Job
                      termination without a Job Manager, you should initially set onAllTasksComplete to
                      noaction and update the Job properties to set onAllTasksComplete to terminatejob
                      once you have finished adding Tasks. The default is noaction. Known values are:
                      "noaction", "terminatejob".
                    "onTaskFailure": "str",  # Optional. A Task is considered to have failed if
                      has a failureInfo. A failureInfo is set if the Task completes with a non-zero
                      exit code after exhausting its retry count, or if there was an error starting the
                      Task, for example due to a resource file download error. The default is noaction.
                      Known values are: "noaction", "performexitoptionsjobaction".
                    "poolInfo": {
                        "autoPoolSpecification": {
                            "autoPoolIdPrefix": "str",  # Optional. The Batch service
                              assigns each auto Pool a unique identifier on creation. To distinguish
                              between Pools created for different purposes, you can specify this
                              element to add a prefix to the ID that is assigned. The prefix can be up
                              to 20 characters long.
                            "keepAlive": bool,  # Optional. If false, the Batch service
                              deletes the Pool once its lifetime (as determined by the
                              poolLifetimeOption setting) expires; that is, when the Job or Job
                              Schedule completes. If true, the Batch service does not delete the Pool
                              automatically. It is up to the user to delete auto Pools created with
                              this option.
                            "pool": {
                                "applicationLicenses": [
                                    "str"  # Optional. The list of application
                                      licenses must be a subset of available Batch service application
                                      licenses. If a license is requested which is not supported, Pool
                                      creation will fail. The permitted licenses available on the Pool
                                      are 'maya', 'vray', '3dsmax', 'arnold'. An additional charge
                                      applies for each application license added to the Pool.
                                ],
                                "applicationPackageReferences": [
                                    {
                                        "applicationId": "str",  # Required.
                                          The ID of the application to deploy.
                                        "version": "str"  # Optional. If this
                                          is omitted on a Pool, and no default version is specified for
                                          this application, the request fails with the error code
                                          InvalidApplicationPackageReferences and HTTP status code 409.
                                          If this is omitted on a Task, and no default version is
                                          specified for this application, the Task fails with a
                                          pre-processing error.
                                    }
                                ],
                                "autoScaleEvaluationInterval": "1 day, 0:00:00",  #
                                  Optional. The default value is 15 minutes. The minimum and maximum
                                  value are 5 minutes and 168 hours respectively. If you specify a
                                  value less than 5 minutes or greater than 168 hours, the Batch
                                  service rejects the request with an invalid property value error; if
                                  you are calling the REST API directly, the HTTP status code is 400
                                  (Bad Request).
                                "autoScaleFormula": "str",  # Optional. This property
                                  must not be specified if enableAutoScale is set to false. It is
                                  required if enableAutoScale is set to true. The formula is checked
                                  for validity before the Pool is created. If the formula is not valid,
                                  the Batch service rejects the request with detailed error
                                  information.
                                "certificateReferences": [
                                    {
                                        "storeLocation": "str",  # Optional.
                                          The default value is currentuser. This property is applicable
                                          only for Pools configured with Windows Compute Nodes (that
                                          is, created with cloudServiceConfiguration, or with
                                          virtualMachineConfiguration using a Windows Image reference).
                                          For Linux Compute Nodes, the Certificates are stored in a
                                          directory inside the Task working directory and an
                                          environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to
                                          the Task to query for this location. For Certificates with
                                          visibility of 'remoteUser', a 'certs' directory is created in
                                          the user's home directory (e.g., /home/{user-name}/certs) and
                                          Certificates are placed in that directory. Known values are:
                                          "currentuser", "localmachine".
                                        "storeName": "str",  # Optional. This
                                          property is applicable only for Pools configured with Windows
                                          Compute Nodes (that is, created with
                                          cloudServiceConfiguration, or with
                                          virtualMachineConfiguration using a Windows Image reference).
                                          Common store names include: My, Root, CA, Trust, Disallowed,
                                          TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but
                                          any custom store name can also be used. The default value is
                                          My.
                                        "thumbprint": "str",  # Required. The
                                          thumbprint of the Certificate.
                                        "thumbprintAlgorithm": "str",  #
                                          Required. The algorithm with which the thumbprint is
                                          associated. This must be sha1.
                                        "visibility": [
                                            "str"  # Optional. You can
                                              specify more than one visibility in this collection. The
                                              default is all Accounts.
                                        ]
                                    }
                                ],
                                "cloudServiceConfiguration": {
                                    "osFamily": "str",  # Required. Possible
                                      values are:"n2 - OS Family 2, equivalent to Windows Server 2008
                                      R2 SP1."n3 - OS Family 3, equivalent to Windows Server 2012."n4 -
                                      OS Family 4, equivalent to Windows Server 2012 R2."n5 - OS Family
                                      5, equivalent to Windows Server 2016."n6 - OS Family 6,
                                      equivalent to Windows Server 2019. For more information, see
                                      Azure Guest OS Releases
                                      (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
                                    "osVersion": "str"  # Optional. The default
                                      value is * which specifies the latest operating system version
                                      for the specified OS family.
                                },
                                "displayName": "str",  # Optional. The display name
                                  need not be unique and can contain any Unicode characters up to a
                                  maximum length of 1024.
                                "enableAutoScale": bool,  # Optional. If false, at
                                  least one of targetDedicatedNodes and targetLowPriorityNodes must be
                                  specified. If true, the autoScaleFormula element is required. The
                                  Pool automatically resizes according to the formula. The default
                                  value is false.
                                "enableInterNodeCommunication": bool,  # Optional.
                                  Enabling inter-node communication limits the maximum size of the Pool
                                  due to deployment restrictions on the Compute Nodes of the Pool. This
                                  may result in the Pool not reaching its desired size. The default
                                  value is false.
                                "metadata": [
                                    {
                                        "name": "str",  # Required. The name
                                          of the metadata item.
                                        "value": "str"  # Required. The value
                                          of the metadata item.
                                    }
                                ],
                                "mountConfiguration": [
                                    {
                                        "azureBlobFileSystemConfiguration": {
                                            "accountKey": "str",  #
                                              Optional. This property is mutually exclusive with both
                                              sasKey and identity; exactly one must be specified.
                                            "accountName": "str",  #
                                              Required. The Azure Storage Account name.
                                            "blobfuseOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "containerName": "str",  #
                                              Required. The Azure Blob Storage Container name.
                                            "identityReference": {
                                                "resourceId": "str"
                                                  # Optional. The ARM resource id of the user assigned
                                                  identity.
                                            },
                                            "relativeMountPath": "str",
                                              # Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                            "sasKey": "str"  # Optional.
                                              This property is mutually exclusive with both accountKey
                                              and identity; exactly one must be specified.
                                        },
                                        "azureFileShareConfiguration": {
                                            "accountKey": "str",  #
                                              Required. The Azure Storage account key.
                                            "accountName": "str",  #
                                              Required. The Azure Storage account name.
                                            "azureFileUrl": "str",  #
                                              Required. This is of the form
                                              'https://{account}.file.core.windows.net/'.
                                            "mountOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "relativeMountPath": "str"  #
                                              Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                        },
                                        "cifsMountConfiguration": {
                                            "mountOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "password": "str",  #
                                              Required. The password to use for authentication against
                                              the CIFS file system.
                                            "relativeMountPath": "str",
                                              # Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                            "source": "str",  # Required.
                                              The URI of the file system to mount.
                                            "username": "str"  #
                                              Required. The user to use for authentication against the
                                              CIFS file system.
                                        },
                                        "nfsMountConfiguration": {
                                            "mountOptions": "str",  #
                                              Optional. These are 'net use' options in Windows and
                                              'mount' options in Linux.
                                            "relativeMountPath": "str",
                                              # Required. All file systems are mounted relative to the
                                              Batch mounts directory, accessible via the
                                              AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                            "source": "str"  # Required.
                                              The URI of the file system to mount.
                                        }
                                    }
                                ],
                                "networkConfiguration": {
                                    "dynamicVNetAssignmentScope": "str",  #
                                      Optional. The scope of dynamic vnet assignment. Known values are:
                                      "none", "job".
                                    "endpointConfiguration": {
                                        "inboundNATPools": [
                                            {
                                                "backendPort": 0,  #
                                                  Required. This must be unique within a Batch Pool.
                                                  Acceptable values are between 1 and 65535 except for
                                                  22, 3389, 29876 and 29877 as these are reserved. If
                                                  any reserved values are provided the request fails
                                                  with HTTP status code 400.
                "frontendPortRangeEnd": 0,  # Required. Acceptable
                                                  values range between 1 and 65534 except ports from
                                                  50000 to 55000 which are reserved by the Batch
                                                  service. All ranges within a Pool must be distinct
                                                  and cannot overlap. Each range must contain at least
                                                  40 ports. If any reserved or overlapping values are
                                                  provided the request fails with HTTP status code 400.
                "frontendPortRangeStart": 0,  # Required. Acceptable
                                                  values range between 1 and 65534 except ports from
                                                  50000 to 55000 which are reserved. All ranges within
                                                  a Pool must be distinct and cannot overlap. Each
                                                  range must contain at least 40 ports. If any reserved
                                                  or overlapping values are provided the request fails
                                                  with HTTP status code 400.
                                                "name": "str",  #
                                                  Required. The name must be unique within a Batch
                                                  Pool, can contain letters, numbers, underscores,
                                                  periods, and hyphens. Names must start with a letter
                                                  or number, must end with a letter, number, or
                                                  underscore, and cannot exceed 77 characters.  If any
                                                  invalid values are provided the request fails with
                                                  HTTP status code 400.
                "networkSecurityGroupRules": [
                                                    {
                "access": "str",  # Required. The action that
                                                          should be taken for a specified IP address,
                                                          subnet range or tag. Known values are:
                                                          "allow", "deny".
                "priority": 0,  # Required. Priorities within
                                                          a Pool must be unique and are evaluated in
                                                          order of priority. The lower the number the
                                                          higher the priority. For example, rules could
                                                          be specified with order numbers of 150, 250,
                                                          and 350. The rule with the order number of
                                                          150 takes precedence over the rule that has
                                                          an order of 250. Allowed priorities are 150
                                                          to 4096. If any reserved or duplicate values
                                                          are provided the request fails with HTTP
                                                          status code 400.
                "sourceAddressPrefix": "str",  # Required.
                                                          Valid values are a single IP address (i.e.
                                                          10.10.10.10), IP subnet (i.e.
                                                          192.168.1.0/24), default tag, or * (for all
                                                          addresses).  If any other values are provided
                                                          the request fails with HTTP status code 400.
                "sourcePortRanges": [
                "str"  # Optional. Valid values are '""
                                                              *' (for all ports 0 - 65535), a specific
                                                              port (i.e. 22), or a port range (i.e.
                                                              100-200). The ports must be in the range
                                                              of 0 to 65535. Each entry in this
                                                              collection must not overlap any other
                                                              entry (either a range or an individual
                                                              port). If any other values are provided
                                                              the request fails with HTTP status code
                                                              400. The default value is '*"" '.
                                                        ]
                                                    }
                                                ],
                                                "protocol": "str"  #
                                                  Required. The protocol of the endpoint. Known values
                                                  are: "tcp", "udp".
                                            }
                                        ]
                                    },
                                    "publicIPAddressConfiguration": {
                                        "ipAddressIds": [
                                            "str"  # Optional. The number
                                              of IPs specified here limits the maximum size of the Pool
                                              - 100 dedicated nodes or 100 Spot/Low-priority nodes can
                                              be allocated for each public IP. For example, a pool
                                              needing 250 dedicated VMs would need at least 3 public
                                              IPs specified. Each element of this collection is of the
                                              form:
                                              /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}.
                                        ],
                                        "provision": "str"  # Optional. The
                                          default value is BatchManaged. Known values are:
                                          "batchmanaged", "usermanaged", "nopublicipaddresses".
                                    },
                                    "subnetId": "str"  # Optional. The virtual
                                      network must be in the same region and subscription as the Azure
                                      Batch Account. The specified subnet should have enough free IP
                                      addresses to accommodate the number of Compute Nodes in the Pool.
                                      If the subnet doesn't have enough free IP addresses, the Pool
                                      will partially allocate Nodes and a resize error will occur. The
                                      'MicrosoftAzureBatch' service principal must have the 'Classic
                                      Virtual Machine Contributor' Role-Based Access Control (RBAC)
                                      role for the specified VNet. The specified subnet must allow
                                      communication from the Azure Batch service to be able to schedule
                                      Tasks on the Nodes. This can be verified by checking if the
                                      specified VNet has any associated Network Security Groups (NSG).
                                      If communication to the Nodes in the specified subnet is denied
                                      by an NSG, then the Batch service will set the state of the
                                      Compute Nodes to unusable. For Pools created with
                                      virtualMachineConfiguration only ARM virtual networks
                                      ('Microsoft.Network/virtualNetworks') are supported, but for
                                      Pools created with cloudServiceConfiguration both ARM and classic
                                      virtual networks are supported. If the specified VNet has any
                                      associated Network Security Groups (NSG), then a few reserved
                                      system ports must be enabled for inbound communication. For Pools
                                      created with a virtual machine configuration, enable ports 29876
                                      and 29877, as well as port 22 for Linux and port 3389 for
                                      Windows. For Pools created with a cloud service configuration,
                                      enable ports 10100, 20100, and 30100. Also enable outbound
                                      connections to Azure Storage on port 443. For more details see:
                                      https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                                },
                                "resizeTimeout": "1 day, 0:00:00",  # Optional. This
                                  timeout applies only to manual scaling; it has no effect when
                                  enableAutoScale is set to true. The default value is 15 minutes. The
                                  minimum value is 5 minutes. If you specify a value less than 5
                                  minutes, the Batch service rejects the request with an error; if you
                                  are calling the REST API directly, the HTTP status code is 400 (Bad
                                  Request).
                                "startTask": {
                                    "commandLine": "str",  # Required. The
                                      command line does not run under a shell, and therefore cannot
                                      take advantage of shell features such as environment variable
                                      expansion. If you want to take advantage of such features, you
                                      should invoke the shell in the command line, for example using
                                      "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
                                      If the command line refers to file paths, it should use a
                                      relative path (relative to the Task working directory), or use
                                      the Batch provided environment variable
                                      (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                                    "containerSettings": {
                                        "containerRunOptions": "str",  #
                                          Optional. These additional options are supplied as arguments
                                          to the "docker create" command, in addition to those
                                          controlled by the Batch Service.
                                        "imageName": "str",  # Required. This
                                          is the full Image reference, as would be specified to "docker
                                          pull". If no tag is provided as part of the Image name, the
                                          tag ":latest" is used as a default.
                                        "registry": {
                                            "identityReference": {
                                                "resourceId": "str"
                                                  # Optional. The ARM resource id of the user assigned
                                                  identity.
                                            },
                                            "password": "str",  #
                                              Optional. The password to log into the registry server.
                                            "registryServer": "str",  #
                                              Optional. If omitted, the default is "docker.io".
                                            "username": "str"  #
                                              Optional. The user name to log into the registry server.
                                        },
                                        "workingDirectory": "str"  #
                                          Optional. The default is 'taskWorkingDirectory'. Known values
                                          are: "taskWorkingDirectory", "containerImageDefault".
                                    },
                                    "environmentSettings": [
                                        {
                                            "name": "str",  # Required.
                                              The name of the environment variable.
                                            "value": "str"  # Optional.
                                              The value of the environment variable.
                                        }
                                    ],
                                    "maxTaskRetryCount": 0,  # Optional. The
                                      Batch service retries a Task if its exit code is nonzero. Note
                                      that this value specifically controls the number of retries. The
                                      Batch service will try the Task once, and may then retry up to
                                      this limit. For example, if the maximum retry count is 3, Batch
                                      tries the Task up to 4 times (one initial try and 3 retries). If
                                      the maximum retry count is 0, the Batch service does not retry
                                      the Task. If the maximum retry count is -1, the Batch service
                                      retries the Task without limit, however this is not recommended
                                      for a start task or any task. The default value is 0 (no
                                      retries).
                                    "resourceFiles": [
                                        {
                                            "autoStorageContainerName":
                                              "str",  # Optional. The autoStorageContainerName,
                                              storageContainerUrl and httpUrl properties are mutually
                                              exclusive and one of them must be specified.
                                            "blobPrefix": "str",  #
                                              Optional. The property is valid only when
                                              autoStorageContainerName or storageContainerUrl is used.
                                              This prefix can be a partial filename or a subdirectory.
                                              If a prefix is not specified, all the files in the
                                              container will be downloaded.
                                            "fileMode": "str",  #
                                              Optional. This property applies only to files being
                                              downloaded to Linux Compute Nodes. It will be ignored if
                                              it is specified for a resourceFile which will be
                                              downloaded to a Windows Compute Node. If this property is
                                              not specified for a Linux Compute Node, then a default
                                              value of 0770 is applied to the file.
                                            "filePath": "str",  #
                                              Optional. If the httpUrl property is specified, the
                                              filePath is required and describes the path which the
                                              file will be downloaded to, including the filename.
                                              Otherwise, if the autoStorageContainerName or
                                              storageContainerUrl property is specified, filePath is
                                              optional and is the directory to download the files to.
                                              In the case where filePath is used as a directory, any
                                              directory structure already associated with the input
                                              data will be retained in full and appended to the
                                              specified filePath directory. The specified relative path
                                              cannot break out of the Task's working directory (for
                                              example by using '..').
                                            "httpUrl": "str",  #
                                              Optional. The autoStorageContainerName,
                                              storageContainerUrl and httpUrl properties are mutually
                                              exclusive and one of them must be specified. If the URL
                                              points to Azure Blob Storage, it must be readable from
                                              compute nodes. There are three ways to get such a URL for
                                              a blob in Azure storage: include a Shared Access
                                              Signature (SAS) granting read permissions on the blob,
                                              use a managed identity with read permission, or set the
                                              ACL for the blob or its container to allow public access.
                                            "identityReference": {
                                                "resourceId": "str"
                                                  # Optional. The ARM resource id of the user assigned
                                                  identity.
                                            },
                                            "storageContainerUrl": "str"
                                              # Optional. The autoStorageContainerName,
                                              storageContainerUrl and httpUrl properties are mutually
                                              exclusive and one of them must be specified. This URL
                                              must be readable and listable from compute nodes. There
                                              are three ways to get such a URL for a container in Azure
                                              storage: include a Shared Access Signature (SAS) granting
                                              read and list permissions on the container, use a managed
                                              identity with read and list permissions, or set the ACL
                                              for the container to allow public access.
                                        }
                                    ],
                                    "userIdentity": {
                                        "autoUser": {
                                            "elevationLevel": "str",  #
                                              Optional. The default value is nonAdmin. Known values
                                              are: "nonadmin", "admin".
                                            "scope": "str"  # Optional.
                                              The default value is pool. If the pool is running Windows
                                              a value of Task should be specified if stricter isolation
                                              between tasks is required. For example, if the task
                                              mutates the registry in a way which could impact other
                                              tasks, or if certificates have been specified on the pool
                                              which should not be accessible by normal tasks but should
                                              be accessible by StartTasks. Known values are: "task",
                                              "pool".
                                        },
                                        "username": "str"  # Optional. The
                                          userName and autoUser properties are mutually exclusive; you
                                          must specify one but not both.
                                    },
                                    "waitForSuccess": bool  # Optional. If true
                                      and the StartTask fails on a Node, the Batch service retries the
                                      StartTask up to its maximum retry count (maxTaskRetryCount). If
                                      the Task has still not completed successfully after all retries,
                                      then the Batch service marks the Node unusable, and will not
                                      schedule Tasks to it. This condition can be detected via the
                                      Compute Node state and failure info details. If false, the Batch
                                      service will not wait for the StartTask to complete. In this
                                      case, other Tasks can start executing on the Compute Node while
                                      the StartTask is still running; and even if the StartTask fails,
                                      new Tasks will continue to be scheduled on the Compute Node. The
                                      default is true.
                                },
                                "targetDedicatedNodes": 0,  # Optional. This property
                                  must not be specified if enableAutoScale is set to true. If
                                  enableAutoScale is set to false, then you must set either
                                  targetDedicatedNodes, targetLowPriorityNodes, or both.
                                "targetLowPriorityNodes": 0,  # Optional. This
                                  property must not be specified if enableAutoScale is set to true. If
                                  enableAutoScale is set to false, then you must set either
                                  targetDedicatedNodes, targetLowPriorityNodes, or both.
                                "taskSchedulingPolicy": {
                                    "nodeFillType": "str"  # Required. If not
                                      specified, the default is spread. Known values are: "spread",
                                      "pack".
                                },
                                "taskSlotsPerNode": 0,  # Optional. The default value
                                  is 1. The maximum value is the smaller of 4 times the number of cores
                                  of the vmSize of the pool or 256.
                                "userAccounts": [
                                    {
                                        "elevationLevel": "str",  # Optional.
                                          The default value is nonAdmin. Known values are: "nonadmin",
                                          "admin".
                                        "linuxUserConfiguration": {
                                            "gid": 0,  # Optional. The
                                              uid and gid properties must be specified together or not
                                              at all. If not specified the underlying operating system
                                              picks the gid.
                                            "sshPrivateKey": "str",  #
                                              Optional. The private key must not be password protected.
                                              The private key is used to automatically configure
                                              asymmetric-key based authentication for SSH between
                                              Compute Nodes in a Linux Pool when the Pool's
                                              enableInterNodeCommunication property is true (it is
                                              ignored if enableInterNodeCommunication is false). It
                                              does this by placing the key pair into the user's .ssh
                                              directory. If not specified, password-less SSH is not
                                              configured between Compute Nodes (no modification of the
                                              user's .ssh directory is done).
                                            "uid": 0  # Optional. The uid
                                              and gid properties must be specified together or not at
                                              all. If not specified the underlying operating system
                                              picks the uid.
                                        },
                                        "name": "str",  # Required. The name
                                          of the user Account.
                                        "password": "str",  # Required. The
                                          password for the user Account.
                                        "windowsUserConfiguration": {
                                            "loginMode": "str"  #
                                              Optional. The default value for
                                              VirtualMachineConfiguration Pools is 'batch' and for
                                              CloudServiceConfiguration Pools is 'interactive'. Known
                                              values are: "batch", "interactive".
                                        }
                                    }
                                ],
                                "virtualMachineConfiguration": {
                                    "containerConfiguration": {
                                        "containerImageNames": [
                                            "str"  # Optional. This is
                                              the full Image reference, as would be specified to
                                              "docker pull". An Image will be sourced from the default
                                              Docker registry unless the Image is fully qualified with
                                              an alternative registry.
                                        ],
                                        "containerRegistries": [
                                            {
                                                "identityReference":
                                                  {
                                                    "resourceId":
                                                      "str"  # Optional. The ARM resource id of the
                                                      user assigned identity.
                                                },
                                                "password": "str",  #
                                                  Optional. The password to log into the registry
                                                  server.
                                                "registryServer":
                                                  "str",  # Optional. If omitted, the default is
                                                  "docker.io".
                                                "username": "str"  #
                                                  Optional. The user name to log into the registry
                                                  server.
                                            }
                                        ],
                                        "type": "dockerCompatible"  # Default
                                          value is "dockerCompatible". The container technology to be
                                          used. Has constant value: "dockerCompatible".
                                    },
                                    "dataDisks": [
                                        {
                                            "caching": "str",  #
                                              Optional. The default value for caching is readwrite. For
                                              information about the caching options see:
                                              https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
                                              Known values are: "none", "readonly", "readwrite".
                                            "diskSizeGB": 0,  # Required.
                                              The initial disk size in gigabytes.
                                            "lun": 0,  # Required. The
                                              lun is used to uniquely identify each data disk. If
                                              attaching multiple disks, each should have a distinct
                                              lun. The value must be between 0 and 63, inclusive.
                                            "storageAccountType": "str"
                                              # Optional. If omitted, the default is "standard_lrs".
                                              Known values are: "standard_lrs", "premium_lrs".
                                        }
                                    ],
                                    "diskEncryptionConfiguration": {
                                        "targets": [
                                            "str"  # Optional. If
                                              omitted, no disks on the compute nodes in the pool will
                                              be encrypted. On Linux pool, only "TemporaryDisk" is
                                              supported; on Windows pool, "OsDisk" and "TemporaryDisk"
                                              must be specified.
                                        ]
                                    },
                                    "extensions": [
                                        {
                                            "autoUpgradeMinorVersion":
                                              bool,  # Optional. Indicates whether the extension should
                                              use a newer minor version if one is available at
                                              deployment time. Once deployed, however, the extension
                                              will not upgrade minor versions unless redeployed, even
                                              with this property set to true.
                                            "name": "str",  # Required.
                                              The name of the virtual machine extension.
                                            "protectedSettings": {},  #
                                              Optional. The extension can contain either
                                              protectedSettings or protectedSettingsFromKeyVault or no
                                              protected settings at all.
                                            "provisionAfterExtensions": [
                                                "str"  # Optional.
                                                  Collection of extension names after which this
                                                  extension needs to be provisioned.
                                            ],
                                            "publisher": "str",  #
                                              Required. The name of the extension handler publisher.
                                            "settings": {},  # Optional.
                                              Any object.
                                            "type": "str",  # Required.
                                              The type of the extension.
                                            "typeHandlerVersion": "str"
                                              # Optional. The version of script handler.
                                        }
                                    ],
                                    "imageReference": {
                                        "exactVersion": "str",  # Optional.
                                          The specific version of the platform image or marketplace
                                          image used to create the node. This read-only field differs
                                          from 'version' only if the value specified for 'version' when
                                          the pool was created was 'latest'.
                                        "offer": "str",  # Optional. For
                                          example, UbuntuServer or WindowsServer.
                                        "publisher": "str",  # Optional. For
                                          example, Canonical or MicrosoftWindowsServer.
                                        "sku": "str",  # Optional. For
                                          example, 18.04-LTS or 2019-Datacenter.
                                        "version": "str",  # Optional. A
                                          value of 'latest' can be specified to select the latest
                                          version of an Image. If omitted, the default is 'latest'.
                                        "virtualMachineImageId": "str"  #
                                          Optional. This property is mutually exclusive with other
                                          ImageReference properties. The Shared Image Gallery Image
                                          must have replicas in the same region and must be in the same
                                          subscription as the Azure Batch account. If the image version
                                          is not specified in the imageId, the latest version will be
                                          used. For information about the firewall settings for the
                                          Batch Compute Node agent to communicate with the Batch
                                          service see
                                          https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                                    },
                                    "licenseType": "str",  # Optional. This only
                                      applies to Images that contain the Windows operating system, and
                                      should only be used when you hold valid on-premises licenses for
                                      the Compute Nodes which will be deployed. If omitted, no
                                      on-premises licensing discount is applied. Values are:"n"n
                                      Windows_Server - The on-premises license is for Windows Server."n
                                      Windows_Client - The on-premises license is for Windows Client.
                                    "nodeAgentSKUId": "str",  # Required. The
                                      Batch Compute Node agent is a program that runs on each Compute
                                      Node in the Pool, and provides the command-and-control interface
                                      between the Compute Node and the Batch service. There are
                                      different implementations of the Compute Node agent, known as
                                      SKUs, for different operating systems. You must specify a Compute
                                      Node agent SKU which matches the selected Image reference. To get
                                      the list of supported Compute Node agent SKUs along with their
                                      list of verified Image references, see the 'List supported
                                      Compute Node agent SKUs' operation.
                                    "nodePlacementConfiguration": {
                                        "policy": "str"  # Optional.
                                          Allocation policy used by Batch Service to provision the
                                          nodes. If not specified, Batch will use the regional policy.
                                          Known values are: "regional", "zonal".
                                    },
                                    "osDisk": {
                                        "ephemeralOSDiskSettings": {
                                            "placement": "CacheDisk"  #
                                              Optional. Default value is "CacheDisk". This property can
                                              be used by user in the request to choose the location
                                              e.g., cache disk space for Ephemeral OS disk
                                              provisioning. For more information on Ephemeral OS disk
                                              size requirements, please refer to Ephemeral OS disk size
                                              requirements for Windows VMs at
                                              https://docs.microsoft.com/en-us/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements
                                              and Linux VMs at
                                              https://docs.microsoft.com/en-us/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements.
                                              The only acceptable values to pass in are None and
                                              "CacheDisk". The default value is None.
                                        }
                                    },
                                    "windowsConfiguration": {
                                        "enableAutomaticUpdates": bool  #
                                          Optional. If omitted, the default value is true.
                                    }
                                },
                                "vmSize": "str"  # Required. For information about
                                  available sizes of virtual machines in Pools, see Choose a VM size
                                  for Compute Nodes in an Azure Batch Pool
                                  (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
                            },
                            "poolLifetimeOption": "str"  # Required. The minimum lifetime
                              of created auto Pools, and how multiple Jobs on a schedule are assigned
                              to Pools. Known values are: "jobschedule", "job".
                        },
                        "poolId": "str"  # Optional. You must ensure that the Pool referenced
                          by this property exists. If the Pool does not exist at the time the Batch
                          service tries to schedule a Job, no Tasks for the Job will run until you
                          create a Pool with that id. Note that the Batch service will not reject the
                          Job request; it will simply not run Tasks until the Pool exists. You must
                          specify either the Pool ID or the auto Pool specification, but not both.
                    },
                    "priority": 0,  # Optional. Priority values can range from -1000 to 1000,
                      with -1000 being the lowest priority and 1000 being the highest priority. The
                      default value is 0.
                    "usesTaskDependencies": bool  # Optional. Whether Tasks in the Job can define
                      dependencies on each other. The default is false.
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', "application/json; odata=minimalmetadata"))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        _content = job

        request = build_add_request(
            api_version=api_version,
            content_type=content_type,
            content=_content,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )
        response = pipeline_response.http_response

        if response.status_code not in [201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        response_headers = {}
        response_headers['client-request-id']=self._deserialize('str', response.headers.get('client-request-id'))
        response_headers['request-id']=self._deserialize('str', response.headers.get('request-id'))
        response_headers['ETag']=self._deserialize('str', response.headers.get('ETag'))
        response_headers['Last-Modified']=self._deserialize('rfc-1123', response.headers.get('Last-Modified'))
        response_headers['DataServiceId']=self._deserialize('str', response.headers.get('DataServiceId'))


        if cls:
            return cls(pipeline_response, None, response_headers)



    @distributed_trace
    def list(
        self,
        *,
        filter: Optional[str] = None,
        select: Optional[str] = None,
        expand: Optional[str] = None,
        max_results: Optional[int] = 1000,
        timeout: Optional[int] = 30,
        client_request_id: Optional[str] = None,
        return_client_request_id: Optional[bool] = False,
        ocp_date: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> Iterable[JSON]:
        """Lists all of the Jobs in the specified Account.

        Lists all of the Jobs in the specified Account.

        :keyword filter: An OData $filter clause. For more information on constructing this filter, see
         https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs.
         Default value is None.
        :paramtype filter: str
        :keyword select: An OData $select clause. Default value is None.
        :paramtype select: str
        :keyword expand: An OData $expand clause. Default value is None.
        :paramtype expand: str
        :keyword max_results: The maximum number of items to return in the response. A maximum of 1000
         Jobs can be returned. Default value is 1000.
        :paramtype max_results: int
        :keyword timeout: The maximum time that the server can spend processing the request, in
         seconds. The default is 30 seconds.
        :paramtype timeout: int
        :keyword client_request_id: The caller-generated request identity, in the form of a GUID with
         no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. Default value is
         None.
        :paramtype client_request_id: str
        :keyword return_client_request_id: Whether the server should return the client-request-id in
         the response. Default value is False.
        :paramtype return_client_request_id: bool
        :keyword ocp_date: The time the request was issued. Client libraries typically set this to the
         current system clock time; set it explicitly if you are calling the REST API directly. Default
         value is None.
        :paramtype ocp_date: ~datetime.datetime
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.paging.ItemPaged[JSON]
        :raises: ~azure.core.exceptions.HttpResponseError

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "odata.nextLink": "str",  # Optional. The URL to get the next set of results.
                    "value": [
                        {
                            "allowTaskPreemption": bool,  # Optional. If the value is set
                              to True, other high priority jobs submitted to the system will take
                              precedence and will be able requeue tasks from this job. You can update a
                              job's allowTaskPreemption after it has been created using the update job
                              API.
                            "commonEnvironmentSettings": [
                                {
                                    "name": "str",  # Required. The name of the
                                      environment variable.
                                    "value": "str"  # Optional. The value of the
                                      environment variable.
                                }
                            ],
                            "constraints": {
                                "maxTaskRetryCount": 0,  # Optional. Note that this
                                  value specifically controls the number of retries. The Batch service
                                  will try each Task once, and may then retry up to this limit. For
                                  example, if the maximum retry count is 3, Batch tries a Task up to 4
                                  times (one initial try and 3 retries). If the maximum retry count is
                                  0, the Batch service does not retry Tasks. If the maximum retry count
                                  is -1, the Batch service retries the Task without limit, however this
                                  is not recommended for a start task or any task. The default value is
                                  0 (no retries).
                                "maxWallClockTime": "1 day, 0:00:00"  # Optional. If
                                  the Job does not complete within the time limit, the Batch service
                                  terminates it and any Tasks that are still running. In this case, the
                                  termination reason will be MaxWallClockTimeExpiry. If this property
                                  is not specified, there is no time limit on how long the Job may run.
                            },
                            "creationTime": "2020-02-20 00:00:00",  # Optional. The
                              creation time of the Job.
                            "displayName": "str",  # Optional. The display name for the
                              Job.
                            "eTag": "str",  # Optional. This is an opaque string. You can
                              use it to detect whether the Job has changed between requests. In
                              particular, you can be pass the ETag when updating a Job to specify that
                              your changes should take effect only if nobody else has modified the Job
                              in the meantime.
                            "executionInfo": {
                                "endTime": "2020-02-20 00:00:00",  # Optional. This
                                  property is set only if the Job is in the completed state.
                                "poolId": "str",  # Optional. This element contains
                                  the actual Pool where the Job is assigned. When you get Job details
                                  from the service, they also contain a poolInfo element, which
                                  contains the Pool configuration data from when the Job was added or
                                  updated. That poolInfo element may also contain a poolId element. If
                                  it does, the two IDs are the same. If it does not, it means the Job
                                  ran on an auto Pool, and this property contains the ID of that auto
                                  Pool.
                                "schedulingError": {
                                    "category": "str",  # Required. The category
                                      of the error. Known values are: "usererror", "servererror".
                                    "code": "str",  # Optional. An identifier for
                                      the Job scheduling error. Codes are invariant and are intended to
                                      be consumed programmatically.
                                    "details": [
                                        {
                                            "name": "str",  # Optional.
                                              The name in the name-value pair.
                                            "value": "str"  # Optional.
                                              The value in the name-value pair.
                                        }
                                    ],
                                    "message": "str"  # Optional. A message
                                      describing the Job scheduling error, intended to be suitable for
                                      display in a user interface.
                                },
                                "startTime": "2020-02-20 00:00:00",  # Required. This
                                  is the time at which the Job was created.
                                "terminateReason": "str"  # Optional. This property
                                  is set only if the Job is in the completed state. If the Batch
                                  service terminates the Job, it sets the reason as follows: JMComplete
                                  - the Job Manager Task completed, and killJobOnCompletion was set to
                                  true. MaxWallClockTimeExpiry - the Job reached its maxWallClockTime
                                  constraint. TerminateJobSchedule - the Job ran as part of a schedule,
                                  and the schedule terminated. AllTasksComplete - the Job's
                                  onAllTasksComplete attribute is set to terminatejob, and all Tasks in
                                  the Job are complete. TaskFailed - the Job's onTaskFailure attribute
                                  is set to performExitOptionsJobAction, and a Task in the Job failed
                                  with an exit condition that specified a jobAction of terminatejob.
                                  Any other string is a user-defined reason specified in a call to the
                                  'Terminate a Job' operation.
                            },
                            "id": "str",  # Optional. The ID is case-preserving and
                              case-insensitive (that is, you may not have two IDs within an Account
                              that differ only by case).
                            "jobManagerTask": {
                                "allowLowPriorityNode": bool,  # Optional. The
                                  default value is true.
                                "applicationPackageReferences": [
                                    {
                                        "applicationId": "str",  # Required.
                                          The ID of the application to deploy.
                                        "version": "str"  # Optional. If this
                                          is omitted on a Pool, and no default version is specified for
                                          this application, the request fails with the error code
                                          InvalidApplicationPackageReferences and HTTP status code 409.
                                          If this is omitted on a Task, and no default version is
                                          specified for this application, the Task fails with a
                                          pre-processing error.
                                    }
                                ],
                                "authenticationTokenSettings": {
                                    "access": [
                                        "job"  # Optional. Default value is
                                          "job". The authentication token grants access to a limited
                                          set of Batch service operations. Currently the only supported
                                          value for the access property is 'job', which grants access
                                          to all operations related to the Job which contains the Task.
                                    ]
                                },
                                "commandLine": "str",  # Required. The command line
                                  does not run under a shell, and therefore cannot take advantage of
                                  shell features such as environment variable expansion. If you want to
                                  take advantage of such features, you should invoke the shell in the
                                  command line, for example using "cmd /c MyCommand" in Windows or
                                  "/bin/sh -c MyCommand" in Linux. If the command line refers to file
                                  paths, it should use a relative path (relative to the Task working
                                  directory), or use the Batch provided environment variable
                                  (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                                "constraints": {
                                    "maxTaskRetryCount": 0,  # Optional. Note
                                      that this value specifically controls the number of retries for
                                      the Task executable due to a nonzero exit code. The Batch service
                                      will try the Task once, and may then retry up to this limit. For
                                      example, if the maximum retry count is 3, Batch tries the Task up
                                      to 4 times (one initial try and 3 retries). If the maximum retry
                                      count is 0, the Batch service does not retry the Task after the
                                      first attempt. If the maximum retry count is -1, the Batch
                                      service retries the Task without limit, however this is not
                                      recommended for a start task or any task. The default value is 0
                                      (no retries).
                                    "maxWallClockTime": "1 day, 0:00:00",  #
                                      Optional. If this is not specified, there is no time limit on how
                                      long the Task may run.
                                    "retentionTime": "1 day, 0:00:00"  #
                                      Optional. The default is 7 days, i.e. the Task directory will be
                                      retained for 7 days unless the Compute Node is removed or the Job
                                      is deleted.
                                },
                                "containerSettings": {
                                    "containerRunOptions": "str",  # Optional.
                                      These additional options are supplied as arguments to the "docker
                                      create" command, in addition to those controlled by the Batch
                                      Service.
                                    "imageName": "str",  # Required. This is the
                                      full Image reference, as would be specified to "docker pull". If
                                      no tag is provided as part of the Image name, the tag ":latest"
                                      is used as a default.
                                    "registry": {
                                        "identityReference": {
                                            "resourceId": "str"  #
                                              Optional. The ARM resource id of the user assigned
                                              identity.
                                        },
                                        "password": "str",  # Optional. The
                                          password to log into the registry server.
                                        "registryServer": "str",  # Optional.
                                          If omitted, the default is "docker.io".
                                        "username": "str"  # Optional. The
                                          user name to log into the registry server.
                                    },
                                    "workingDirectory": "str"  # Optional. The
                                      default is 'taskWorkingDirectory'. Known values are:
                                      "taskWorkingDirectory", "containerImageDefault".
                                },
                                "displayName": "str",  # Optional. It need not be
                                  unique and can contain any Unicode characters up to a maximum length
                                  of 1024.
                                "environmentSettings": [
                                    {
                                        "name": "str",  # Required. The name
                                          of the environment variable.
                                        "value": "str"  # Optional. The value
                                          of the environment variable.
                                    }
                                ],
                                "id": "str",  # Required. The ID can contain any
                                  combination of alphanumeric characters including hyphens and
                                  underscores and cannot contain more than 64 characters.
                                "killJobOnCompletion": bool,  # Optional. If true,
                                  when the Job Manager Task completes, the Batch service marks the Job
                                  as complete. If any Tasks are still running at this time (other than
                                  Job Release), those Tasks are terminated. If false, the completion of
                                  the Job Manager Task does not affect the Job status. In this case,
                                  you should either use the onAllTasksComplete attribute to terminate
                                  the Job, or have a client or user terminate the Job explicitly. An
                                  example of this is if the Job Manager creates a set of Tasks but then
                                  takes no further role in their execution. The default value is true.
                                  If you are using the onAllTasksComplete and onTaskFailure attributes
                                  to control Job lifetime, and using the Job Manager Task only to
                                  create the Tasks for the Job (not to monitor progress), then it is
                                  important to set killJobOnCompletion to false.
                                "outputFiles": [
                                    {
                                        "destination": {
                                            "container": {
                                                "containerUrl":
                                                  "str",  # Required. If not using a managed identity,
                                                  the URL must include a Shared Access Signature (SAS)
                                                  granting write permissions to the container.
                                                "identityReference":
                                                  {
                                                    "resourceId":
                                                      "str"  # Optional. The ARM resource id of the
                                                      user assigned identity.
                                                },
                                                "path": "str",  #
                                                  Optional. If filePattern refers to a specific file
                                                  (i.e. contains no wildcards), then path is the name
                                                  of the blob to which to upload that file. If
                                                  filePattern contains one or more wildcards (and
                                                  therefore may match multiple files), then path is the
                                                  name of the blob virtual directory (which is
                                                  prepended to each blob name) to which to upload the
                                                  file(s). If omitted, file(s) are uploaded to the root
                                                  of the container with a blob name matching their file
                                                  name.
                                                "uploadHeaders": [
                                                    {
                "name": "str",  # Required. The
                                                          case-insensitive name of the header to be
                                                          used while uploading output files.
                "value": "str"  # Optional. The value of the
                                                          header to be used while uploading output
                                                          files.
                                                    }
                                                ]
                                            }
                                        },
                                        "filePattern": "str",  # Required.
                                          Both relative and absolute paths are supported. Relative
                                          paths are relative to the Task working directory. The
                                          following wildcards are supported: * matches 0 or more
                                          characters (for example pattern abc* would match abc or
                                          abcdef), ** matches any directory, ? matches any single
                                          character, [abc] matches one character in the brackets, and
                                          [a-c] matches one character in the range. Brackets can
                                          include a negation to match any character not specified (for
                                          example [!abc] matches any character but a, b, or c). If a
                                          file name starts with "." it is ignored by default but may be
                                          matched by specifying it explicitly (for example *.gif will
                                          not match .a.gif, but .*.gif will). A simple example: **""
                                          *.txt matches any file that does not start in '.' and ends
                                          with .txt in the Task working directory or any subdirectory.
                                          If the filename contains a wildcard character it can be
                                          escaped using brackets (for example abc["" *] would match a
                                          file named abc*"" ). Note that both and / are treated as
                                          directory separators on Windows, but only / is on Linux.
                                          Environment variables (%var% on Windows or $var on Linux) are
                                          expanded prior to the pattern being applied.
                                        "uploadOptions": {
                                            "uploadCondition": "str"  #
                                              Required. The default is taskcompletion. Known values
                                              are: "tasksuccess", "taskfailure", "taskcompletion".
                                        }
                                    }
                                ],
                                "requiredSlots": 0,  # Optional. The default is 1. A
                                  Task can only be scheduled to run on a compute node if the node has
                                  enough free scheduling slots available. For multi-instance Tasks,
                                  this property is not supported and must not be specified.
                                "resourceFiles": [
                                    {
                                        "autoStorageContainerName": "str",  #
                                          Optional. The autoStorageContainerName, storageContainerUrl
                                          and httpUrl properties are mutually exclusive and one of them
                                          must be specified.
                                        "blobPrefix": "str",  # Optional. The
                                          property is valid only when autoStorageContainerName or
                                          storageContainerUrl is used. This prefix can be a partial
                                          filename or a subdirectory. If a prefix is not specified, all
                                          the files in the container will be downloaded.
                                        "fileMode": "str",  # Optional. This
                                          property applies only to files being downloaded to Linux
                                          Compute Nodes. It will be ignored if it is specified for a
                                          resourceFile which will be downloaded to a Windows Compute
                                          Node. If this property is not specified for a Linux Compute
                                          Node, then a default value of 0770 is applied to the file.
                                        "filePath": "str",  # Optional. If
                                          the httpUrl property is specified, the filePath is required
                                          and describes the path which the file will be downloaded to,
                                          including the filename. Otherwise, if the
                                          autoStorageContainerName or storageContainerUrl property is
                                          specified, filePath is optional and is the directory to
                                          download the files to. In the case where filePath is used as
                                          a directory, any directory structure already associated with
                                          the input data will be retained in full and appended to the
                                          specified filePath directory. The specified relative path
                                          cannot break out of the Task's working directory (for example
                                          by using '..').
                                        "httpUrl": "str",  # Optional. The
                                          autoStorageContainerName, storageContainerUrl and httpUrl
                                          properties are mutually exclusive and one of them must be
                                          specified. If the URL points to Azure Blob Storage, it must
                                          be readable from compute nodes. There are three ways to get
                                          such a URL for a blob in Azure storage: include a Shared
                                          Access Signature (SAS) granting read permissions on the blob,
                                          use a managed identity with read permission, or set the ACL
                                          for the blob or its container to allow public access.
                                        "identityReference": {
                                            "resourceId": "str"  #
                                              Optional. The ARM resource id of the user assigned
                                              identity.
                                        },
                                        "storageContainerUrl": "str"  #
                                          Optional. The autoStorageContainerName, storageContainerUrl
                                          and httpUrl properties are mutually exclusive and one of them
                                          must be specified. This URL must be readable and listable
                                          from compute nodes. There are three ways to get such a URL
                                          for a container in Azure storage: include a Shared Access
                                          Signature (SAS) granting read and list permissions on the
                                          container, use a managed identity with read and list
                                          permissions, or set the ACL for the container to allow public
                                          access.
                                    }
                                ],
                                "runExclusive": bool,  # Optional. If true, no other
                                  Tasks will run on the same Node for as long as the Job Manager is
                                  running. If false, other Tasks can run simultaneously with the Job
                                  Manager on a Compute Node. The Job Manager Task counts normally
                                  against the Compute Node's concurrent Task limit, so this is only
                                  relevant if the Compute Node allows multiple concurrent Tasks. The
                                  default value is true.
                                "userIdentity": {
                                    "autoUser": {
                                        "elevationLevel": "str",  # Optional.
                                          The default value is nonAdmin. Known values are: "nonadmin",
                                          "admin".
                                        "scope": "str"  # Optional. The
                                          default value is pool. If the pool is running Windows a value
                                          of Task should be specified if stricter isolation between
                                          tasks is required. For example, if the task mutates the
                                          registry in a way which could impact other tasks, or if
                                          certificates have been specified on the pool which should not
                                          be accessible by normal tasks but should be accessible by
                                          StartTasks. Known values are: "task", "pool".
                                    },
                                    "username": "str"  # Optional. The userName
                                      and autoUser properties are mutually exclusive; you must specify
                                      one but not both.
                                }
                            },
                            "jobPreparationTask": {
                                "commandLine": "str",  # Required. The command line
                                  does not run under a shell, and therefore cannot take advantage of
                                  shell features such as environment variable expansion. If you want to
                                  take advantage of such features, you should invoke the shell in the
                                  command line, for example using "cmd /c MyCommand" in Windows or
                                  "/bin/sh -c MyCommand" in Linux. If the command line refers to file
                                  paths, it should use a relative path (relative to the Task working
                                  directory), or use the Batch provided environment variable
                                  (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                                "constraints": {
                                    "maxTaskRetryCount": 0,  # Optional. Note
                                      that this value specifically controls the number of retries for
                                      the Task executable due to a nonzero exit code. The Batch service
                                      will try the Task once, and may then retry up to this limit. For
                                      example, if the maximum retry count is 3, Batch tries the Task up
                                      to 4 times (one initial try and 3 retries). If the maximum retry
                                      count is 0, the Batch service does not retry the Task after the
                                      first attempt. If the maximum retry count is -1, the Batch
                                      service retries the Task without limit, however this is not
                                      recommended for a start task or any task. The default value is 0
                                      (no retries).
                                    "maxWallClockTime": "1 day, 0:00:00",  #
                                      Optional. If this is not specified, there is no time limit on how
                                      long the Task may run.
                                    "retentionTime": "1 day, 0:00:00"  #
                                      Optional. The default is 7 days, i.e. the Task directory will be
                                      retained for 7 days unless the Compute Node is removed or the Job
                                      is deleted.
                                },
                                "containerSettings": {
                                    "containerRunOptions": "str",  # Optional.
                                      These additional options are supplied as arguments to the "docker
                                      create" command, in addition to those controlled by the Batch
                                      Service.
                                    "imageName": "str",  # Required. This is the
                                      full Image reference, as would be specified to "docker pull". If
                                      no tag is provided as part of the Image name, the tag ":latest"
                                      is used as a default.
                                    "registry": {
                                        "identityReference": {
                                            "resourceId": "str"  #
                                              Optional. The ARM resource id of the user assigned
                                              identity.
                                        },
                                        "password": "str",  # Optional. The
                                          password to log into the registry server.
                                        "registryServer": "str",  # Optional.
                                          If omitted, the default is "docker.io".
                                        "username": "str"  # Optional. The
                                          user name to log into the registry server.
                                    },
                                    "workingDirectory": "str"  # Optional. The
                                      default is 'taskWorkingDirectory'. Known values are:
                                      "taskWorkingDirectory", "containerImageDefault".
                                },
                                "environmentSettings": [
                                    {
                                        "name": "str",  # Required. The name
                                          of the environment variable.
                                        "value": "str"  # Optional. The value
                                          of the environment variable.
                                    }
                                ],
                                "id": "str",  # Optional. The ID can contain any
                                  combination of alphanumeric characters including hyphens and
                                  underscores and cannot contain more than 64 characters. If you do not
                                  specify this property, the Batch service assigns a default value of
                                  'jobpreparation'. No other Task in the Job can have the same ID as
                                  the Job Preparation Task. If you try to submit a Task with the same
                                  id, the Batch service rejects the request with error code
                                  TaskIdSameAsJobPreparationTask; if you are calling the REST API
                                  directly, the HTTP status code is 409 (Conflict).
                                "rerunOnNodeRebootAfterSuccess": bool,  # Optional.
                                  The Job Preparation Task is always rerun if a Compute Node is
                                  reimaged, or if the Job Preparation Task did not complete (e.g.
                                  because the reboot occurred while the Task was running). Therefore,
                                  you should always write a Job Preparation Task to be idempotent and
                                  to behave correctly if run multiple times. The default value is true.
                                "resourceFiles": [
                                    {
                                        "autoStorageContainerName": "str",  #
                                          Optional. The autoStorageContainerName, storageContainerUrl
                                          and httpUrl properties are mutually exclusive and one of them
                                          must be specified.
                                        "blobPrefix": "str",  # Optional. The
                                          property is valid only when autoStorageContainerName or
                                          storageContainerUrl is used. This prefix can be a partial
                                          filename or a subdirectory. If a prefix is not specified, all
                                          the files in the container will be downloaded.
                                        "fileMode": "str",  # Optional. This
                                          property applies only to files being downloaded to Linux
                                          Compute Nodes. It will be ignored if it is specified for a
                                          resourceFile which will be downloaded to a Windows Compute
                                          Node. If this property is not specified for a Linux Compute
                                          Node, then a default value of 0770 is applied to the file.
                                        "filePath": "str",  # Optional. If
                                          the httpUrl property is specified, the filePath is required
                                          and describes the path which the file will be downloaded to,
                                          including the filename. Otherwise, if the
                                          autoStorageContainerName or storageContainerUrl property is
                                          specified, filePath is optional and is the directory to
                                          download the files to. In the case where filePath is used as
                                          a directory, any directory structure already associated with
                                          the input data will be retained in full and appended to the
                                          specified filePath directory. The specified relative path
                                          cannot break out of the Task's working directory (for example
                                          by using '..').
                                        "httpUrl": "str",  # Optional. The
                                          autoStorageContainerName, storageContainerUrl and httpUrl
                                          properties are mutually exclusive and one of them must be
                                          specified. If the URL points to Azure Blob Storage, it must
                                          be readable from compute nodes. There are three ways to get
                                          such a URL for a blob in Azure storage: include a Shared
                                          Access Signature (SAS) granting read permissions on the blob,
                                          use a managed identity with read permission, or set the ACL
                                          for the blob or its container to allow public access.
                                        "identityReference": {
                                            "resourceId": "str"  #
                                              Optional. The ARM resource id of the user assigned
                                              identity.
                                        },
                                        "storageContainerUrl": "str"  #
                                          Optional. The autoStorageContainerName, storageContainerUrl
                                          and httpUrl properties are mutually exclusive and one of them
                                          must be specified. This URL must be readable and listable
                                          from compute nodes. There are three ways to get such a URL
                                          for a container in Azure storage: include a Shared Access
                                          Signature (SAS) granting read and list permissions on the
                                          container, use a managed identity with read and list
                                          permissions, or set the ACL for the container to allow public
                                          access.
                                    }
                                ],
                                "userIdentity": {
                                    "autoUser": {
                                        "elevationLevel": "str",  # Optional.
                                          The default value is nonAdmin. Known values are: "nonadmin",
                                          "admin".
                                        "scope": "str"  # Optional. The
                                          default value is pool. If the pool is running Windows a value
                                          of Task should be specified if stricter isolation between
                                          tasks is required. For example, if the task mutates the
                                          registry in a way which could impact other tasks, or if
                                          certificates have been specified on the pool which should not
                                          be accessible by normal tasks but should be accessible by
                                          StartTasks. Known values are: "task", "pool".
                                    },
                                    "username": "str"  # Optional. The userName
                                      and autoUser properties are mutually exclusive; you must specify
                                      one but not both.
                                },
                                "waitForSuccess": bool  # Optional. If true and the
                                  Job Preparation Task fails on a Node, the Batch service retries the
                                  Job Preparation Task up to its maximum retry count (as specified in
                                  the constraints element). If the Task has still not completed
                                  successfully after all retries, then the Batch service will not
                                  schedule Tasks of the Job to the Node. The Node remains active and
                                  eligible to run Tasks of other Jobs. If false, the Batch service will
                                  not wait for the Job Preparation Task to complete. In this case,
                                  other Tasks of the Job can start executing on the Compute Node while
                                  the Job Preparation Task is still running; and even if the Job
                                  Preparation Task fails, new Tasks will continue to be scheduled on
                                  the Compute Node. The default value is true.
                            },
                            "jobReleaseTask": {
                                "commandLine": "str",  # Required. The command line
                                  does not run under a shell, and therefore cannot take advantage of
                                  shell features such as environment variable expansion. If you want to
                                  take advantage of such features, you should invoke the shell in the
                                  command line, for example using "cmd /c MyCommand" in Windows or
                                  "/bin/sh -c MyCommand" in Linux. If the command line refers to file
                                  paths, it should use a relative path (relative to the Task working
                                  directory), or use the Batch provided environment variable
                                  (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                                "containerSettings": {
                                    "containerRunOptions": "str",  # Optional.
                                      These additional options are supplied as arguments to the "docker
                                      create" command, in addition to those controlled by the Batch
                                      Service.
                                    "imageName": "str",  # Required. This is the
                                      full Image reference, as would be specified to "docker pull". If
                                      no tag is provided as part of the Image name, the tag ":latest"
                                      is used as a default.
                                    "registry": {
                                        "identityReference": {
                                            "resourceId": "str"  #
                                              Optional. The ARM resource id of the user assigned
                                              identity.
                                        },
                                        "password": "str",  # Optional. The
                                          password to log into the registry server.
                                        "registryServer": "str",  # Optional.
                                          If omitted, the default is "docker.io".
                                        "username": "str"  # Optional. The
                                          user name to log into the registry server.
                                    },
                                    "workingDirectory": "str"  # Optional. The
                                      default is 'taskWorkingDirectory'. Known values are:
                                      "taskWorkingDirectory", "containerImageDefault".
                                },
                                "environmentSettings": [
                                    {
                                        "name": "str",  # Required. The name
                                          of the environment variable.
                                        "value": "str"  # Optional. The value
                                          of the environment variable.
                                    }
                                ],
                                "id": "str",  # Optional. The ID can contain any
                                  combination of alphanumeric characters including hyphens and
                                  underscores and cannot contain more than 64 characters. If you do not
                                  specify this property, the Batch service assigns a default value of
                                  'jobrelease'. No other Task in the Job can have the same ID as the
                                  Job Release Task. If you try to submit a Task with the same id, the
                                  Batch service rejects the request with error code
                                  TaskIdSameAsJobReleaseTask; if you are calling the REST API directly,
                                  the HTTP status code is 409 (Conflict).
                                "maxWallClockTime": "1 day, 0:00:00",  # Optional.
                                  The maximum elapsed time that the Job Release Task may run on a given
                                  Compute Node, measured from the time the Task starts. If the Task
                                  does not complete within the time limit, the Batch service terminates
                                  it. The default value is 15 minutes. You may not specify a timeout
                                  longer than 15 minutes. If you do, the Batch service rejects it with
                                  an error; if you are calling the REST API directly, the HTTP status
                                  code is 400 (Bad Request).
                                "resourceFiles": [
                                    {
                                        "autoStorageContainerName": "str",  #
                                          Optional. The autoStorageContainerName, storageContainerUrl
                                          and httpUrl properties are mutually exclusive and one of them
                                          must be specified.
                                        "blobPrefix": "str",  # Optional. The
                                          property is valid only when autoStorageContainerName or
                                          storageContainerUrl is used. This prefix can be a partial
                                          filename or a subdirectory. If a prefix is not specified, all
                                          the files in the container will be downloaded.
                                        "fileMode": "str",  # Optional. This
                                          property applies only to files being downloaded to Linux
                                          Compute Nodes. It will be ignored if it is specified for a
                                          resourceFile which will be downloaded to a Windows Compute
                                          Node. If this property is not specified for a Linux Compute
                                          Node, then a default value of 0770 is applied to the file.
                                        "filePath": "str",  # Optional. If
                                          the httpUrl property is specified, the filePath is required
                                          and describes the path which the file will be downloaded to,
                                          including the filename. Otherwise, if the
                                          autoStorageContainerName or storageContainerUrl property is
                                          specified, filePath is optional and is the directory to
                                          download the files to. In the case where filePath is used as
                                          a directory, any directory structure already associated with
                                          the input data will be retained in full and appended to the
                                          specified filePath directory. The specified relative path
                                          cannot break out of the Task's working directory (for example
                                          by using '..').
                                        "httpUrl": "str",  # Optional. The
                                          autoStorageContainerName, storageContainerUrl and httpUrl
                                          properties are mutually exclusive and one of them must be
                                          specified. If the URL points to Azure Blob Storage, it must
                                          be readable from compute nodes. There are three ways to get
                                          such a URL for a blob in Azure storage: include a Shared
                                          Access Signature (SAS) granting read permissions on the blob,
                                          use a managed identity with read permission, or set the ACL
                                          for the blob or its container to allow public access.
                                        "identityReference": {
                                            "resourceId": "str"  #
                                              Optional. The ARM resource id of the user assigned
                                              identity.
                                        },
                                        "storageContainerUrl": "str"  #
                                          Optional. The autoStorageContainerName, storageContainerUrl
                                          and httpUrl properties are mutually exclusive and one of them
                                          must be specified. This URL must be readable and listable
                                          from compute nodes. There are three ways to get such a URL
                                          for a container in Azure storage: include a Shared Access
                                          Signature (SAS) granting read and list permissions on the
                                          container, use a managed identity with read and list
                                          permissions, or set the ACL for the container to allow public
                                          access.
                                    }
                                ],
                                "retentionTime": "1 day, 0:00:00",  # Optional. The
                                  default is 7 days, i.e. the Task directory will be retained for 7
                                  days unless the Compute Node is removed or the Job is deleted.
                                "userIdentity": {
                                    "autoUser": {
                                        "elevationLevel": "str",  # Optional.
                                          The default value is nonAdmin. Known values are: "nonadmin",
                                          "admin".
                                        "scope": "str"  # Optional. The
                                          default value is pool. If the pool is running Windows a value
                                          of Task should be specified if stricter isolation between
                                          tasks is required. For example, if the task mutates the
                                          registry in a way which could impact other tasks, or if
                                          certificates have been specified on the pool which should not
                                          be accessible by normal tasks but should be accessible by
                                          StartTasks. Known values are: "task", "pool".
                                    },
                                    "username": "str"  # Optional. The userName
                                      and autoUser properties are mutually exclusive; you must specify
                                      one but not both.
                                }
                            },
                            "lastModified": "2020-02-20 00:00:00",  # Optional. This is
                              the last time at which the Job level data, such as the Job state or
                              priority, changed. It does not factor in task-level changes such as
                              adding new Tasks or Tasks changing state.
                            "maxParallelTasks": -1,  # Optional. Default value is -1. The
                              value of maxParallelTasks must be -1 or greater than 0 if specified. If
                              not specified, the default value is -1, which means there's no limit to
                              the number of tasks that can be run at once. You can update a job's
                              maxParallelTasks after it has been created using the update job API.
                            "metadata": [
                                {
                                    "name": "str",  # Required. The name of the
                                      metadata item.
                                    "value": "str"  # Required. The value of the
                                      metadata item.
                                }
                            ],
                            "networkConfiguration": {
                                "subnetId": "str"  # Required. The virtual network
                                  must be in the same region and subscription as the Azure Batch
                                  Account. The specified subnet should have enough free IP addresses to
                                  accommodate the number of Compute Nodes which will run Tasks from the
                                  Job. This can be up to the number of Compute Nodes in the Pool. The
                                  'MicrosoftAzureBatch' service principal must have the 'Classic
                                  Virtual Machine Contributor' Role-Based Access Control (RBAC) role
                                  for the specified VNet so that Azure Batch service can schedule Tasks
                                  on the Nodes. This can be verified by checking if the specified VNet
                                  has any associated Network Security Groups (NSG). If communication to
                                  the Nodes in the specified subnet is denied by an NSG, then the Batch
                                  service will set the state of the Compute Nodes to unusable. This is
                                  of the form
                                  /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.
                                  If the specified VNet has any associated Network Security Groups
                                  (NSG), then a few reserved system ports must be enabled for inbound
                                  communication from the Azure Batch service. For Pools created with a
                                  Virtual Machine configuration, enable ports 29876 and 29877, as well
                                  as port 22 for Linux and port 3389 for Windows. Port 443 is also
                                  required to be open for outbound connections for communications to
                                  Azure Storage. For more details see:
                                  https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                            },
                            "onAllTasksComplete": "str",  # Optional. The default is
                              noaction. Known values are: "noaction", "terminatejob".
                            "onTaskFailure": "str",  # Optional. A Task is considered to
                              have failed if has a failureInfo. A failureInfo is set if the Task
                              completes with a non-zero exit code after exhausting its retry count, or
                              if there was an error starting the Task, for example due to a resource
                              file download error. The default is noaction. Known values are:
                              "noaction", "performexitoptionsjobaction".
                            "poolInfo": {
                                "autoPoolSpecification": {
                                    "autoPoolIdPrefix": "str",  # Optional. The
                                      Batch service assigns each auto Pool a unique identifier on
                                      creation. To distinguish between Pools created for different
                                      purposes, you can specify this element to add a prefix to the ID
                                      that is assigned. The prefix can be up to 20 characters long.
                                    "keepAlive": bool,  # Optional. If false, the
                                      Batch service deletes the Pool once its lifetime (as determined
                                      by the poolLifetimeOption setting) expires; that is, when the Job
                                      or Job Schedule completes. If true, the Batch service does not
                                      delete the Pool automatically. It is up to the user to delete
                                      auto Pools created with this option.
                                    "pool": {
                                        "applicationLicenses": [
                                            "str"  # Optional. The list
                                              of application licenses must be a subset of available
                                              Batch service application licenses. If a license is
                                              requested which is not supported, Pool creation will
                                              fail. The permitted licenses available on the Pool are
                                              'maya', 'vray', '3dsmax', 'arnold'. An additional charge
                                              applies for each application license added to the Pool.
                                        ],
                                        "applicationPackageReferences": [
                                            {
                                                "applicationId":
                                                  "str",  # Required. The ID of the application to
                                                  deploy.
                                                "version": "str"  #
                                                  Optional. If this is omitted on a Pool, and no
                                                  default version is specified for this application,
                                                  the request fails with the error code
                                                  InvalidApplicationPackageReferences and HTTP status
                                                  code 409. If this is omitted on a Task, and no
                                                  default version is specified for this application,
                                                  the Task fails with a pre-processing error.
                                            }
                                        ],
                                        "autoScaleEvaluationInterval": "1
                                          day, 0:00:00",  # Optional. The default value is 15 minutes.
                                          The minimum and maximum value are 5 minutes and 168 hours
                                          respectively. If you specify a value less than 5 minutes or
                                          greater than 168 hours, the Batch service rejects the request
                                          with an invalid property value error; if you are calling the
                                          REST API directly, the HTTP status code is 400 (Bad Request).
                                        "autoScaleFormula": "str",  #
                                          Optional. This property must not be specified if
                                          enableAutoScale is set to false. It is required if
                                          enableAutoScale is set to true. The formula is checked for
                                          validity before the Pool is created. If the formula is not
                                          valid, the Batch service rejects the request with detailed
                                          error information.
                                        "certificateReferences": [
                                            {
                                                "storeLocation":
                                                  "str",  # Optional. The default value is currentuser.
                                                  This property is applicable only for Pools configured
                                                  with Windows Compute Nodes (that is, created with
                                                  cloudServiceConfiguration, or with
                                                  virtualMachineConfiguration using a Windows Image
                                                  reference). For Linux Compute Nodes, the Certificates
                                                  are stored in a directory inside the Task working
                                                  directory and an environment variable
                                                  AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to
                                                  query for this location. For Certificates with
                                                  visibility of 'remoteUser', a 'certs' directory is
                                                  created in the user's home directory (e.g.,
                                                  /home/{user-name}/certs) and Certificates are placed
                                                  in that directory. Known values are: "currentuser",
                                                  "localmachine".
                                                "storeName": "str",
                                                  # Optional. This property is applicable only for
                                                  Pools configured with Windows Compute Nodes (that is,
                                                  created with cloudServiceConfiguration, or with
                                                  virtualMachineConfiguration using a Windows Image
                                                  reference). Common store names include: My, Root, CA,
                                                  Trust, Disallowed, TrustedPeople, TrustedPublisher,
                                                  AuthRoot, AddressBook, but any custom store name can
                                                  also be used. The default value is My.
                                                "thumbprint": "str",
                                                  # Required. The thumbprint of the Certificate.
                "thumbprintAlgorithm": "str",  # Required. The
                                                  algorithm with which the thumbprint is associated.
                                                  This must be sha1.
                                                "visibility": [
                                                    "str"  #
                                                      Optional. You can specify more than one
                                                      visibility in this collection. The default is all
                                                      Accounts.
                                                ]
                                            }
                                        ],
                                        "cloudServiceConfiguration": {
                                            "osFamily": "str",  #
                                              Required. Possible values are:"n2 - OS Family 2,
                                              equivalent to Windows Server 2008 R2 SP1."n3 - OS Family
                                              3, equivalent to Windows Server 2012."n4 - OS Family 4,
                                              equivalent to Windows Server 2012 R2."n5 - OS Family 5,
                                              equivalent to Windows Server 2016."n6 - OS Family 6,
                                              equivalent to Windows Server 2019. For more information,
                                              see Azure Guest OS Releases
                                              (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
                                            "osVersion": "str"  #
                                              Optional. The default value is * which specifies the
                                              latest operating system version for the specified OS
                                              family.
                                        },
                                        "displayName": "str",  # Optional.
                                          The display name need not be unique and can contain any
                                          Unicode characters up to a maximum length of 1024.
                                        "enableAutoScale": bool,  # Optional.
                                          If false, at least one of targetDedicatedNodes and
                                          targetLowPriorityNodes must be specified. If true, the
                                          autoScaleFormula element is required. The Pool automatically
                                          resizes according to the formula. The default value is false.
                                        "enableInterNodeCommunication": bool,
                                          # Optional. Enabling inter-node communication limits the
                                          maximum size of the Pool due to deployment restrictions on
                                          the Compute Nodes of the Pool. This may result in the Pool
                                          not reaching its desired size. The default value is false.
                                        "metadata": [
                                            {
                                                "name": "str",  #
                                                  Required. The name of the metadata item.
                                                "value": "str"  #
                                                  Required. The value of the metadata item.
                                            }
                                        ],
                                        "mountConfiguration": [
                                            {
                "azureBlobFileSystemConfiguration": {
                                                    "accountKey":
                                                      "str",  # Optional. This property is mutually
                                                      exclusive with both sasKey and identity; exactly
                                                      one must be specified.
                "accountName": "str",  # Required. The Azure
                                                      Storage Account name.
                "blobfuseOptions": "str",  # Optional. These are
                                                      'net use' options in Windows and 'mount' options
                                                      in Linux.
                "containerName": "str",  # Required. The Azure
                                                      Blob Storage Container name.
                "identityReference": {
                "resourceId": "str"  # Optional. The ARM
                                                          resource id of the user assigned identity.
                                                    },
                "relativeMountPath": "str",  # Required. All file
                                                      systems are mounted relative to the Batch mounts
                                                      directory, accessible via the
                                                      AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                                    "sasKey":
                                                      "str"  # Optional. This property is mutually
                                                      exclusive with both accountKey and identity;
                                                      exactly one must be specified.
                                                },
                "azureFileShareConfiguration": {
                                                    "accountKey":
                                                      "str",  # Required. The Azure Storage account
                                                      key.
                "accountName": "str",  # Required. The Azure
                                                      Storage account name.
                "azureFileUrl": "str",  # Required. This is of
                                                      the form
                                                      'https://{account}.file.core.windows.net/'.
                "mountOptions": "str",  # Optional. These are
                                                      'net use' options in Windows and 'mount' options
                                                      in Linux.
                "relativeMountPath": "str"  # Required. All file
                                                      systems are mounted relative to the Batch mounts
                                                      directory, accessible via the
                                                      AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                                },
                "cifsMountConfiguration": {
                "mountOptions": "str",  # Optional. These are
                                                      'net use' options in Windows and 'mount' options
                                                      in Linux.
                                                    "password":
                                                      "str",  # Required. The password to use for
                                                      authentication against the CIFS file system.
                "relativeMountPath": "str",  # Required. All file
                                                      systems are mounted relative to the Batch mounts
                                                      directory, accessible via the
                                                      AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                                    "source":
                                                      "str",  # Required. The URI of the file system to
                                                      mount.
                                                    "username":
                                                      "str"  # Required. The user to use for
                                                      authentication against the CIFS file system.
                                                },
                "nfsMountConfiguration": {
                "mountOptions": "str",  # Optional. These are
                                                      'net use' options in Windows and 'mount' options
                                                      in Linux.
                "relativeMountPath": "str",  # Required. All file
                                                      systems are mounted relative to the Batch mounts
                                                      directory, accessible via the
                                                      AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                                    "source":
                                                      "str"  # Required. The URI of the file system to
                                                      mount.
                                                }
                                            }
                                        ],
                                        "networkConfiguration": {
                                            "dynamicVNetAssignmentScope":
                                              "str",  # Optional. The scope of dynamic vnet assignment.
                                              Known values are: "none", "job".
                                            "endpointConfiguration": {
                                                "inboundNATPools": [
                                                    {
                "backendPort": 0,  # Required. This must be
                                                          unique within a Batch Pool. Acceptable values
                                                          are between 1 and 65535 except for 22, 3389,
                                                          29876 and 29877 as these are reserved. If any
                                                          reserved values are provided the request
                                                          fails with HTTP status code 400.
                "frontendPortRangeEnd": 0,  # Required.
                                                          Acceptable values range between 1 and 65534
                                                          except ports from 50000 to 55000 which are
                                                          reserved by the Batch service. All ranges
                                                          within a Pool must be distinct and cannot
                                                          overlap. Each range must contain at least 40
                                                          ports. If any reserved or overlapping values
                                                          are provided the request fails with HTTP
                                                          status code 400.
                "frontendPortRangeStart": 0,  # Required.
                                                          Acceptable values range between 1 and 65534
                                                          except ports from 50000 to 55000 which are
                                                          reserved. All ranges within a Pool must be
                                                          distinct and cannot overlap. Each range must
                                                          contain at least 40 ports. If any reserved or
                                                          overlapping values are provided the request
                                                          fails with HTTP status code 400.
                "name": "str",  # Required. The name must be
                                                          unique within a Batch Pool, can contain
                                                          letters, numbers, underscores, periods, and
                                                          hyphens. Names must start with a letter or
                                                          number, must end with a letter, number, or
                                                          underscore, and cannot exceed 77 characters.
                                                          If any invalid values are provided the
                                                          request fails with HTTP status code 400.
                "networkSecurityGroupRules": [
                {
                "access": "str",  # Required. The
                                                                  action that should be taken for a
                                                                  specified IP address, subnet range or
                                                                  tag. Known values are: "allow",
                                                                  "deny".
                "priority": 0,  # Required.
                                                                  Priorities within a Pool must be
                                                                  unique and are evaluated in order of
                                                                  priority. The lower the number the
                                                                  higher the priority. For example,
                                                                  rules could be specified with order
                                                                  numbers of 150, 250, and 350. The
                                                                  rule with the order number of 150
                                                                  takes precedence over the rule that
                                                                  has an order of 250. Allowed
                                                                  priorities are 150 to 4096. If any
                                                                  reserved or duplicate values are
                                                                  provided the request fails with HTTP
                                                                  status code 400.
                "sourceAddressPrefix": "str",  #
                                                                  Required. Valid values are a single
                                                                  IP address (i.e. 10.10.10.10), IP
                                                                  subnet (i.e. 192.168.1.0/24), default
                                                                  tag, or * (for all addresses).  If
                                                                  any other values are provided the
                                                                  request fails with HTTP status code
                                                                  400.
                "sourcePortRanges": [
                "str"  # Optional. Valid values
                                                                      are '"" *' (for all ports 0 -
                                                                      65535), a specific port (i.e.
                                                                      22), or a port range (i.e.
                                                                      100-200). The ports must be in
                                                                      the range of 0 to 65535. Each
                                                                      entry in this collection must not
                                                                      overlap any other entry (either a
                                                                      range or an individual port). If
                                                                      any other values are provided the
                                                                      request fails with HTTP status
                                                                      code 400. The default value is
                                                                      '*"" '.
                ]
                }
                                                        ],
                "protocol": "str"  # Required. The protocol
                                                          of the endpoint. Known values are: "tcp",
                                                          "udp".
                                                    }
                                                ]
                                            },
                "publicIPAddressConfiguration": {
                                                "ipAddressIds": [
                                                    "str"  #
                                                      Optional. The number of IPs specified here limits
                                                      the maximum size of the Pool - 100 dedicated
                                                      nodes or 100 Spot/Low-priority nodes can be
                                                      allocated for each public IP. For example, a pool
                                                      needing 250 dedicated VMs would need at least 3
                                                      public IPs specified. Each element of this
                                                      collection is of the form:
                                                      /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}.
                                                ],
                                                "provision": "str"  #
                                                  Optional. The default value is BatchManaged. Known
                                                  values are: "batchmanaged", "usermanaged",
                                                  "nopublicipaddresses".
                                            },
                                            "subnetId": "str"  #
                                              Optional. The virtual network must be in the same region
                                              and subscription as the Azure Batch Account. The
                                              specified subnet should have enough free IP addresses to
                                              accommodate the number of Compute Nodes in the Pool. If
                                              the subnet doesn't have enough free IP addresses, the
                                              Pool will partially allocate Nodes and a resize error
                                              will occur. The 'MicrosoftAzureBatch' service principal
                                              must have the 'Classic Virtual Machine Contributor'
                                              Role-Based Access Control (RBAC) role for the specified
                                              VNet. The specified subnet must allow communication from
                                              the Azure Batch service to be able to schedule Tasks on
                                              the Nodes. This can be verified by checking if the
                                              specified VNet has any associated Network Security Groups
                                              (NSG). If communication to the Nodes in the specified
                                              subnet is denied by an NSG, then the Batch service will
                                              set the state of the Compute Nodes to unusable. For Pools
                                              created with virtualMachineConfiguration only ARM virtual
                                              networks ('Microsoft.Network/virtualNetworks') are
                                              supported, but for Pools created with
                                              cloudServiceConfiguration both ARM and classic virtual
                                              networks are supported. If the specified VNet has any
                                              associated Network Security Groups (NSG), then a few
                                              reserved system ports must be enabled for inbound
                                              communication. For Pools created with a virtual machine
                                              configuration, enable ports 29876 and 29877, as well as
                                              port 22 for Linux and port 3389 for Windows. For Pools
                                              created with a cloud service configuration, enable ports
                                              10100, 20100, and 30100. Also enable outbound connections
                                              to Azure Storage on port 443. For more details see:
                                              https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                                        },
                                        "resizeTimeout": "1 day, 0:00:00",  #
                                          Optional. This timeout applies only to manual scaling; it has
                                          no effect when enableAutoScale is set to true. The default
                                          value is 15 minutes. The minimum value is 5 minutes. If you
                                          specify a value less than 5 minutes, the Batch service
                                          rejects the request with an error; if you are calling the
                                          REST API directly, the HTTP status code is 400 (Bad Request).
                                        "startTask": {
                                            "commandLine": "str",  #
                                              Required. The command line does not run under a shell,
                                              and therefore cannot take advantage of shell features
                                              such as environment variable expansion. If you want to
                                              take advantage of such features, you should invoke the
                                              shell in the command line, for example using "cmd /c
                                              MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
                                              If the command line refers to file paths, it should use a
                                              relative path (relative to the Task working directory),
                                              or use the Batch provided environment variable
                                              (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                                            "containerSettings": {
                "containerRunOptions": "str",  # Optional. These
                                                  additional options are supplied as arguments to the
                                                  "docker create" command, in addition to those
                                                  controlled by the Batch Service.
                                                "imageName": "str",
                                                  # Required. This is the full Image reference, as
                                                  would be specified to "docker pull". If no tag is
                                                  provided as part of the Image name, the tag ":latest"
                                                  is used as a default.
                                                "registry": {
                "identityReference": {
                "resourceId": "str"  # Optional. The ARM
                                                          resource id of the user assigned identity.
                                                    },
                                                    "password":
                                                      "str",  # Optional. The password to log into the
                                                      registry server.
                "registryServer": "str",  # Optional. If omitted,
                                                      the default is "docker.io".
                                                    "username":
                                                      "str"  # Optional. The user name to log into the
                                                      registry server.
                                                },
                                                "workingDirectory":
                                                  "str"  # Optional. The default is
                                                  'taskWorkingDirectory'. Known values are:
                                                  "taskWorkingDirectory", "containerImageDefault".
                                            },
                                            "environmentSettings": [
                                                {
                                                    "name":
                                                      "str",  # Required. The name of the environment
                                                      variable.
                                                    "value":
                                                      "str"  # Optional. The value of the environment
                                                      variable.
                                                }
                                            ],
                                            "maxTaskRetryCount": 0,  #
                                              Optional. The Batch service retries a Task if its exit
                                              code is nonzero. Note that this value specifically
                                              controls the number of retries. The Batch service will
                                              try the Task once, and may then retry up to this limit.
                                              For example, if the maximum retry count is 3, Batch tries
                                              the Task up to 4 times (one initial try and 3 retries).
                                              If the maximum retry count is 0, the Batch service does
                                              not retry the Task. If the maximum retry count is -1, the
                                              Batch service retries the Task without limit, however
                                              this is not recommended for a start task or any task. The
                                              default value is 0 (no retries).
                                            "resourceFiles": [
                                                {
                "autoStorageContainerName": "str",  # Optional.
                                                      The autoStorageContainerName, storageContainerUrl
                                                      and httpUrl properties are mutually exclusive and
                                                      one of them must be specified.
                                                    "blobPrefix":
                                                      "str",  # Optional. The property is valid only
                                                      when autoStorageContainerName or
                                                      storageContainerUrl is used. This prefix can be a
                                                      partial filename or a subdirectory. If a prefix
                                                      is not specified, all the files in the container
                                                      will be downloaded.
                                                    "fileMode":
                                                      "str",  # Optional. This property applies only to
                                                      files being downloaded to Linux Compute Nodes. It
                                                      will be ignored if it is specified for a
                                                      resourceFile which will be downloaded to a
                                                      Windows Compute Node. If this property is not
                                                      specified for a Linux Compute Node, then a
                                                      default value of 0770 is applied to the file.
                                                    "filePath":
                                                      "str",  # Optional. If the httpUrl property is
                                                      specified, the filePath is required and describes
                                                      the path which the file will be downloaded to,
                                                      including the filename. Otherwise, if the
                                                      autoStorageContainerName or storageContainerUrl
                                                      property is specified, filePath is optional and
                                                      is the directory to download the files to. In the
                                                      case where filePath is used as a directory, any
                                                      directory structure already associated with the
                                                      input data will be retained in full and appended
                                                      to the specified filePath directory. The
                                                      specified relative path cannot break out of the
                                                      Task's working directory (for example by using
                                                      '..').
                                                    "httpUrl":
                                                      "str",  # Optional. The autoStorageContainerName,
                                                      storageContainerUrl and httpUrl properties are
                                                      mutually exclusive and one of them must be
                                                      specified. If the URL points to Azure Blob
                                                      Storage, it must be readable from compute nodes.
                                                      There are three ways to get such a URL for a blob
                                                      in Azure storage: include a Shared Access
                                                      Signature (SAS) granting read permissions on the
                                                      blob, use a managed identity with read
                                                      permission, or set the ACL for the blob or its
                                                      container to allow public access.
                "identityReference": {
                "resourceId": "str"  # Optional. The ARM
                                                          resource id of the user assigned identity.
                                                    },
                "storageContainerUrl": "str"  # Optional. The
                                                      autoStorageContainerName, storageContainerUrl and
                                                      httpUrl properties are mutually exclusive and one
                                                      of them must be specified. This URL must be
                                                      readable and listable from compute nodes. There
                                                      are three ways to get such a URL for a container
                                                      in Azure storage: include a Shared Access
                                                      Signature (SAS) granting read and list
                                                      permissions on the container, use a managed
                                                      identity with read and list permissions, or set
                                                      the ACL for the container to allow public access.
                                                }
                                            ],
                                            "userIdentity": {
                                                "autoUser": {
                "elevationLevel": "str",  # Optional. The default
                                                      value is nonAdmin. Known values are: "nonadmin",
                                                      "admin".
                                                    "scope":
                                                      "str"  # Optional. The default value is pool. If
                                                      the pool is running Windows a value of Task
                                                      should be specified if stricter isolation between
                                                      tasks is required. For example, if the task
                                                      mutates the registry in a way which could impact
                                                      other tasks, or if certificates have been
                                                      specified on the pool which should not be
                                                      accessible by normal tasks but should be
                                                      accessible by StartTasks. Known values are:
                                                      "task", "pool".
                                                },
                                                "username": "str"  #
                                                  Optional. The userName and autoUser properties are
                                                  mutually exclusive; you must specify one but not
                                                  both.
                                            },
                                            "waitForSuccess": bool  #
                                              Optional. If true and the StartTask fails on a Node, the
                                              Batch service retries the StartTask up to its maximum
                                              retry count (maxTaskRetryCount). If the Task has still
                                              not completed successfully after all retries, then the
                                              Batch service marks the Node unusable, and will not
                                              schedule Tasks to it. This condition can be detected via
                                              the Compute Node state and failure info details. If
                                              false, the Batch service will not wait for the StartTask
                                              to complete. In this case, other Tasks can start
                                              executing on the Compute Node while the StartTask is
                                              still running; and even if the StartTask fails, new Tasks
                                              will continue to be scheduled on the Compute Node. The
                                              default is true.
                                        },
                                        "targetDedicatedNodes": 0,  #
                                          Optional. This property must not be specified if
                                          enableAutoScale is set to true. If enableAutoScale is set to
                                          false, then you must set either targetDedicatedNodes,
                                          targetLowPriorityNodes, or both.
                                        "targetLowPriorityNodes": 0,  #
                                          Optional. This property must not be specified if
                                          enableAutoScale is set to true. If enableAutoScale is set to
                                          false, then you must set either targetDedicatedNodes,
                                          targetLowPriorityNodes, or both.
                                        "taskSchedulingPolicy": {
                                            "nodeFillType": "str"  #
                                              Required. If not specified, the default is spread. Known
                                              values are: "spread", "pack".
                                        },
                                        "taskSlotsPerNode": 0,  # Optional.
                                          The default value is 1. The maximum value is the smaller of 4
                                          times the number of cores of the vmSize of the pool or 256.
                                        "userAccounts": [
                                            {
                                                "elevationLevel":
                                                  "str",  # Optional. The default value is nonAdmin.
                                                  Known values are: "nonadmin", "admin".
                "linuxUserConfiguration": {
                                                    "gid": 0,  #
                                                      Optional. The uid and gid properties must be
                                                      specified together or not at all. If not
                                                      specified the underlying operating system picks
                                                      the gid.
                "sshPrivateKey": "str",  # Optional. The private
                                                      key must not be password protected. The private
                                                      key is used to automatically configure
                                                      asymmetric-key based authentication for SSH
                                                      between Compute Nodes in a Linux Pool when the
                                                      Pool's enableInterNodeCommunication property is
                                                      true (it is ignored if
                                                      enableInterNodeCommunication is false). It does
                                                      this by placing the key pair into the user's .ssh
                                                      directory. If not specified, password-less SSH is
                                                      not configured between Compute Nodes (no
                                                      modification of the user's .ssh directory is
                                                      done).
                                                    "uid": 0  #
                                                      Optional. The uid and gid properties must be
                                                      specified together or not at all. If not
                                                      specified the underlying operating system picks
                                                      the uid.
                                                },
                                                "name": "str",  #
                                                  Required. The name of the user Account.
                                                "password": "str",  #
                                                  Required. The password for the user Account.
                "windowsUserConfiguration": {
                                                    "loginMode":
                                                      "str"  # Optional. The default value for
                                                      VirtualMachineConfiguration Pools is 'batch' and
                                                      for CloudServiceConfiguration Pools is
                                                      'interactive'. Known values are: "batch",
                                                      "interactive".
                                                }
                                            }
                                        ],
                                        "virtualMachineConfiguration": {
                                            "containerConfiguration": {
                "containerImageNames": [
                                                    "str"  #
                                                      Optional. This is the full Image reference, as
                                                      would be specified to "docker pull". An Image
                                                      will be sourced from the default Docker registry
                                                      unless the Image is fully qualified with an
                                                      alternative registry.
                                                ],
                "containerRegistries": [
                                                    {
                "identityReference": {
                "resourceId": "str"  # Optional. The ARM
                                                              resource id of the user assigned
                                                              identity.
                                                        },
                "password": "str",  # Optional. The password
                                                          to log into the registry server.
                "registryServer": "str",  # Optional. If
                                                          omitted, the default is "docker.io".
                "username": "str"  # Optional. The user name
                                                          to log into the registry server.
                                                    }
                                                ],
                                                "type":
                                                  "dockerCompatible"  # Default value is
                                                  "dockerCompatible". The container technology to be
                                                  used. Has constant value: "dockerCompatible".
                                            },
                                            "dataDisks": [
                                                {
                                                    "caching":
                                                      "str",  # Optional. The default value for caching
                                                      is readwrite. For information about the caching
                                                      options see:
                                                      https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
                                                      Known values are: "none", "readonly",
                                                      "readwrite".
                                                    "diskSizeGB":
                                                      0,  # Required. The initial disk size in
                                                      gigabytes.
                                                    "lun": 0,  #
                                                      Required. The lun is used to uniquely identify
                                                      each data disk. If attaching multiple disks, each
                                                      should have a distinct lun. The value must be
                                                      between 0 and 63, inclusive.
                "storageAccountType": "str"  # Optional. If
                                                      omitted, the default is "standard_lrs". Known
                                                      values are: "standard_lrs", "premium_lrs".
                                                }
                                            ],
                "diskEncryptionConfiguration": {
                                                "targets": [
                                                    "str"  #
                                                      Optional. If omitted, no disks on the compute
                                                      nodes in the pool will be encrypted. On Linux
                                                      pool, only "TemporaryDisk" is supported; on
                                                      Windows pool, "OsDisk" and "TemporaryDisk" must
                                                      be specified.
                                                ]
                                            },
                                            "extensions": [
                                                {
                "autoUpgradeMinorVersion": bool,  # Optional.
                                                      Indicates whether the extension should use a
                                                      newer minor version if one is available at
                                                      deployment time. Once deployed, however, the
                                                      extension will not upgrade minor versions unless
                                                      redeployed, even with this property set to true.
                                                    "name":
                                                      "str",  # Required. The name of the virtual
                                                      machine extension.
                "protectedSettings": {},  # Optional. The
                                                      extension can contain either protectedSettings or
                                                      protectedSettingsFromKeyVault or no protected
                                                      settings at all.
                "provisionAfterExtensions": [
                                                        "str"
                                                          # Optional. Collection of extension names
                                                          after which this extension needs to be
                                                          provisioned.
                                                    ],
                                                    "publisher":
                                                      "str",  # Required. The name of the extension
                                                      handler publisher.
                                                    "settings":
                                                      {},  # Optional. Any object.
                                                    "type":
                                                      "str",  # Required. The type of the extension.
                "typeHandlerVersion": "str"  # Optional. The
                                                      version of script handler.
                                                }
                                            ],
                                            "imageReference": {
                                                "exactVersion":
                                                  "str",  # Optional. The specific version of the
                                                  platform image or marketplace image used to create
                                                  the node. This read-only field differs from 'version'
                                                  only if the value specified for 'version' when the
                                                  pool was created was 'latest'.
                                                "offer": "str",  #
                                                  Optional. For example, UbuntuServer or WindowsServer.
                                                "publisher": "str",
                                                  # Optional. For example, Canonical or
                                                  MicrosoftWindowsServer.
                                                "sku": "str",  #
                                                  Optional. For example, 18.04-LTS or 2019-Datacenter.
                                                "version": "str",  #
                                                  Optional. A value of 'latest' can be specified to
                                                  select the latest version of an Image. If omitted,
                                                  the default is 'latest'.
                "virtualMachineImageId": "str"  # Optional. This
                                                  property is mutually exclusive with other
                                                  ImageReference properties. The Shared Image Gallery
                                                  Image must have replicas in the same region and must
                                                  be in the same subscription as the Azure Batch
                                                  account. If the image version is not specified in the
                                                  imageId, the latest version will be used. For
                                                  information about the firewall settings for the Batch
                                                  Compute Node agent to communicate with the Batch
                                                  service see
                                                  https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                                            },
                                            "licenseType": "str",  #
                                              Optional. This only applies to Images that contain the
                                              Windows operating system, and should only be used when
                                              you hold valid on-premises licenses for the Compute Nodes
                                              which will be deployed. If omitted, no on-premises
                                              licensing discount is applied. Values are:"n"n
                                              Windows_Server - The on-premises license is for Windows
                                              Server."n Windows_Client - The on-premises license is for
                                              Windows Client.
                                            "nodeAgentSKUId": "str",  #
                                              Required. The Batch Compute Node agent is a program that
                                              runs on each Compute Node in the Pool, and provides the
                                              command-and-control interface between the Compute Node
                                              and the Batch service. There are different
                                              implementations of the Compute Node agent, known as SKUs,
                                              for different operating systems. You must specify a
                                              Compute Node agent SKU which matches the selected Image
                                              reference. To get the list of supported Compute Node
                                              agent SKUs along with their list of verified Image
                                              references, see the 'List supported Compute Node agent
                                              SKUs' operation.
                                            "nodePlacementConfiguration":
                                              {
                                                "policy": "str"  #
                                                  Optional. Allocation policy used by Batch Service to
                                                  provision the nodes. If not specified, Batch will use
                                                  the regional policy. Known values are: "regional",
                                                  "zonal".
                                            },
                                            "osDisk": {
                "ephemeralOSDiskSettings": {
                                                    "placement":
                                                      "CacheDisk"  # Optional. Default value is
                                                      "CacheDisk". This property can be used by user in
                                                      the request to choose the location e.g., cache
                                                      disk space for Ephemeral OS disk provisioning.
                                                      For more information on Ephemeral OS disk size
                                                      requirements, please refer to Ephemeral OS disk
                                                      size requirements for Windows VMs at
                                                      https://docs.microsoft.com/en-us/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements
                                                      and Linux VMs at
                                                      https://docs.microsoft.com/en-us/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements.
                                                      The only acceptable values to pass in are None
                                                      and "CacheDisk". The default value is None.
                                                }
                                            },
                                            "windowsConfiguration": {
                "enableAutomaticUpdates": bool  # Optional. If
                                                  omitted, the default value is true.
                                            }
                                        },
                                        "vmSize": "str"  # Required. For
                                          information about available sizes of virtual machines in
                                          Pools, see Choose a VM size for Compute Nodes in an Azure
                                          Batch Pool
                                          (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
                                    },
                                    "poolLifetimeOption": "str"  # Required. The
                                      minimum lifetime of created auto Pools, and how multiple Jobs on
                                      a schedule are assigned to Pools. Known values are:
                                      "jobschedule", "job".
                                },
                                "poolId": "str"  # Optional. You must ensure that the
                                  Pool referenced by this property exists. If the Pool does not exist
                                  at the time the Batch service tries to schedule a Job, no Tasks for
                                  the Job will run until you create a Pool with that id. Note that the
                                  Batch service will not reject the Job request; it will simply not run
                                  Tasks until the Pool exists. You must specify either the Pool ID or
                                  the auto Pool specification, but not both.
                            },
                            "previousState": "str",  # Optional. This property is not set
                              if the Job is in its initial Active state. Known values are: "active",
                              "disabling", "disabled", "enabling", "terminating", "completed",
                              "deleting".
                            "previousStateTransitionTime": "2020-02-20 00:00:00",  #
                              Optional. This property is not set if the Job is in its initial Active
                              state.
                            "priority": 0,  # Optional. Priority values can range from
                              -1000 to 1000, with -1000 being the lowest priority and 1000 being the
                              highest priority. The default value is 0.
                            "state": "str",  # Optional. The state of the Job. Known
                              values are: "active", "disabling", "disabled", "enabling", "terminating",
                              "completed", "deleting".
                            "stateTransitionTime": "2020-02-20 00:00:00",  # Optional.
                              The time at which the Job entered its current state.
                            "stats": {
                                "kernelCPUTime": "1 day, 0:00:00",  # Required. The
                                  total kernel mode CPU time (summed across all cores and all Compute
                                  Nodes) consumed by all Tasks in the Job.
                                "lastUpdateTime": "2020-02-20 00:00:00",  # Required.
                                  The time at which the statistics were last updated. All statistics
                                  are limited to the range between startTime and lastUpdateTime.
                                "numFailedTasks": 0.0,  # Required. A Task fails if
                                  it exhausts its maximum retry count without returning exit code 0.
                                "numSucceededTasks": 0.0,  # Required. A Task
                                  completes successfully if it returns exit code 0.
                                "numTaskRetries": 0.0,  # Required. The total number
                                  of retries on all the Tasks in the Job during the given time range.
                                "readIOGiB": 0.0,  # Required. The total amount of
                                  data in GiB read from disk by all Tasks in the Job.
                                "readIOps": 0.0,  # Required. The total number of
                                  disk read operations made by all Tasks in the Job.
                                "startTime": "2020-02-20 00:00:00",  # Required. The
                                  start time of the time range covered by the statistics.
                                "url": "str",  # Required. The URL of the statistics.
                                "userCPUTime": "1 day, 0:00:00",  # Required. The
                                  total user mode CPU time (summed across all cores and all Compute
                                  Nodes) consumed by all Tasks in the Job.
                                "waitTime": "1 day, 0:00:00",  # Required. The wait
                                  time for a Task is defined as the elapsed time between the creation
                                  of the Task and the start of Task execution. (If the Task is retried
                                  due to failures, the wait time is the time to the most recent Task
                                  execution.) This value is only reported in the Account lifetime
                                  statistics; it is not included in the Job statistics.
                                "wallClockTime": "1 day, 0:00:00",  # Required. The
                                  wall clock time is the elapsed time from when the Task started
                                  running on a Compute Node to when it finished (or to the last time
                                  the statistics were updated, if the Task had not finished by then).
                                  If a Task was retried, this includes the wall clock time of all the
                                  Task retries.
                                "writeIOGiB": 0.0,  # Required. The total amount of
                                  data in GiB written to disk by all Tasks in the Job.
                                "writeIOps": 0.0  # Required. The total number of
                                  disk write operations made by all Tasks in the Job.
                            },
                            "url": "str",  # Optional. The URL of the Job.
                            "usesTaskDependencies": bool  # Optional. Whether Tasks in
                              the Job can define dependencies on each other. The default is false.
                        }
                    ]
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_list_request(
                    api_version=api_version,
                    filter=filter,
                    select=select,
                    expand=expand,
                    max_results=max_results,
                    timeout=timeout,
                    client_request_id=client_request_id,
                    return_client_request_id=return_client_request_id,
                    ocp_date=ocp_date,
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

            else:
                
                request = build_list_request(
                    client_request_id=client_request_id,
                    return_client_request_id=return_client_request_id,
                    ocp_date=ocp_date,
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(next_link, **path_format_arguments)  # type: ignore

                path_format_arguments = {
                    "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
                }
                request.method = "GET"
            return request

        def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("odata.nextLink", None), iter(list_of_elem)

        def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = self._client._pipeline.run(  # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response)

            return pipeline_response


        return ItemPaged(
            get_next, extract_data
        )


    @distributed_trace
    def list_from_job_schedule(
        self,
        job_schedule_id: str,
        *,
        filter: Optional[str] = None,
        select: Optional[str] = None,
        expand: Optional[str] = None,
        max_results: Optional[int] = 1000,
        timeout: Optional[int] = 30,
        client_request_id: Optional[str] = None,
        return_client_request_id: Optional[bool] = False,
        ocp_date: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> Iterable[JSON]:
        """Lists the Jobs that have been created under the specified Job Schedule.

        Lists the Jobs that have been created under the specified Job Schedule.

        :param job_schedule_id: The ID of the Job Schedule from which you want to get a list of Jobs.
        :type job_schedule_id: str
        :keyword filter: An OData $filter clause. For more information on constructing this filter, see
         https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs-in-a-job-schedule.
         Default value is None.
        :paramtype filter: str
        :keyword select: An OData $select clause. Default value is None.
        :paramtype select: str
        :keyword expand: An OData $expand clause. Default value is None.
        :paramtype expand: str
        :keyword max_results: The maximum number of items to return in the response. A maximum of 1000
         Jobs can be returned. Default value is 1000.
        :paramtype max_results: int
        :keyword timeout: The maximum time that the server can spend processing the request, in
         seconds. The default is 30 seconds.
        :paramtype timeout: int
        :keyword client_request_id: The caller-generated request identity, in the form of a GUID with
         no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. Default value is
         None.
        :paramtype client_request_id: str
        :keyword return_client_request_id: Whether the server should return the client-request-id in
         the response. Default value is False.
        :paramtype return_client_request_id: bool
        :keyword ocp_date: The time the request was issued. Client libraries typically set this to the
         current system clock time; set it explicitly if you are calling the REST API directly. Default
         value is None.
        :paramtype ocp_date: ~datetime.datetime
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.paging.ItemPaged[JSON]
        :raises: ~azure.core.exceptions.HttpResponseError

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "odata.nextLink": "str",  # Optional. The URL to get the next set of results.
                    "value": [
                        {
                            "allowTaskPreemption": bool,  # Optional. If the value is set
                              to True, other high priority jobs submitted to the system will take
                              precedence and will be able requeue tasks from this job. You can update a
                              job's allowTaskPreemption after it has been created using the update job
                              API.
                            "commonEnvironmentSettings": [
                                {
                                    "name": "str",  # Required. The name of the
                                      environment variable.
                                    "value": "str"  # Optional. The value of the
                                      environment variable.
                                }
                            ],
                            "constraints": {
                                "maxTaskRetryCount": 0,  # Optional. Note that this
                                  value specifically controls the number of retries. The Batch service
                                  will try each Task once, and may then retry up to this limit. For
                                  example, if the maximum retry count is 3, Batch tries a Task up to 4
                                  times (one initial try and 3 retries). If the maximum retry count is
                                  0, the Batch service does not retry Tasks. If the maximum retry count
                                  is -1, the Batch service retries the Task without limit, however this
                                  is not recommended for a start task or any task. The default value is
                                  0 (no retries).
                                "maxWallClockTime": "1 day, 0:00:00"  # Optional. If
                                  the Job does not complete within the time limit, the Batch service
                                  terminates it and any Tasks that are still running. In this case, the
                                  termination reason will be MaxWallClockTimeExpiry. If this property
                                  is not specified, there is no time limit on how long the Job may run.
                            },
                            "creationTime": "2020-02-20 00:00:00",  # Optional. The
                              creation time of the Job.
                            "displayName": "str",  # Optional. The display name for the
                              Job.
                            "eTag": "str",  # Optional. This is an opaque string. You can
                              use it to detect whether the Job has changed between requests. In
                              particular, you can be pass the ETag when updating a Job to specify that
                              your changes should take effect only if nobody else has modified the Job
                              in the meantime.
                            "executionInfo": {
                                "endTime": "2020-02-20 00:00:00",  # Optional. This
                                  property is set only if the Job is in the completed state.
                                "poolId": "str",  # Optional. This element contains
                                  the actual Pool where the Job is assigned. When you get Job details
                                  from the service, they also contain a poolInfo element, which
                                  contains the Pool configuration data from when the Job was added or
                                  updated. That poolInfo element may also contain a poolId element. If
                                  it does, the two IDs are the same. If it does not, it means the Job
                                  ran on an auto Pool, and this property contains the ID of that auto
                                  Pool.
                                "schedulingError": {
                                    "category": "str",  # Required. The category
                                      of the error. Known values are: "usererror", "servererror".
                                    "code": "str",  # Optional. An identifier for
                                      the Job scheduling error. Codes are invariant and are intended to
                                      be consumed programmatically.
                                    "details": [
                                        {
                                            "name": "str",  # Optional.
                                              The name in the name-value pair.
                                            "value": "str"  # Optional.
                                              The value in the name-value pair.
                                        }
                                    ],
                                    "message": "str"  # Optional. A message
                                      describing the Job scheduling error, intended to be suitable for
                                      display in a user interface.
                                },
                                "startTime": "2020-02-20 00:00:00",  # Required. This
                                  is the time at which the Job was created.
                                "terminateReason": "str"  # Optional. This property
                                  is set only if the Job is in the completed state. If the Batch
                                  service terminates the Job, it sets the reason as follows: JMComplete
                                  - the Job Manager Task completed, and killJobOnCompletion was set to
                                  true. MaxWallClockTimeExpiry - the Job reached its maxWallClockTime
                                  constraint. TerminateJobSchedule - the Job ran as part of a schedule,
                                  and the schedule terminated. AllTasksComplete - the Job's
                                  onAllTasksComplete attribute is set to terminatejob, and all Tasks in
                                  the Job are complete. TaskFailed - the Job's onTaskFailure attribute
                                  is set to performExitOptionsJobAction, and a Task in the Job failed
                                  with an exit condition that specified a jobAction of terminatejob.
                                  Any other string is a user-defined reason specified in a call to the
                                  'Terminate a Job' operation.
                            },
                            "id": "str",  # Optional. The ID is case-preserving and
                              case-insensitive (that is, you may not have two IDs within an Account
                              that differ only by case).
                            "jobManagerTask": {
                                "allowLowPriorityNode": bool,  # Optional. The
                                  default value is true.
                                "applicationPackageReferences": [
                                    {
                                        "applicationId": "str",  # Required.
                                          The ID of the application to deploy.
                                        "version": "str"  # Optional. If this
                                          is omitted on a Pool, and no default version is specified for
                                          this application, the request fails with the error code
                                          InvalidApplicationPackageReferences and HTTP status code 409.
                                          If this is omitted on a Task, and no default version is
                                          specified for this application, the Task fails with a
                                          pre-processing error.
                                    }
                                ],
                                "authenticationTokenSettings": {
                                    "access": [
                                        "job"  # Optional. Default value is
                                          "job". The authentication token grants access to a limited
                                          set of Batch service operations. Currently the only supported
                                          value for the access property is 'job', which grants access
                                          to all operations related to the Job which contains the Task.
                                    ]
                                },
                                "commandLine": "str",  # Required. The command line
                                  does not run under a shell, and therefore cannot take advantage of
                                  shell features such as environment variable expansion. If you want to
                                  take advantage of such features, you should invoke the shell in the
                                  command line, for example using "cmd /c MyCommand" in Windows or
                                  "/bin/sh -c MyCommand" in Linux. If the command line refers to file
                                  paths, it should use a relative path (relative to the Task working
                                  directory), or use the Batch provided environment variable
                                  (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                                "constraints": {
                                    "maxTaskRetryCount": 0,  # Optional. Note
                                      that this value specifically controls the number of retries for
                                      the Task executable due to a nonzero exit code. The Batch service
                                      will try the Task once, and may then retry up to this limit. For
                                      example, if the maximum retry count is 3, Batch tries the Task up
                                      to 4 times (one initial try and 3 retries). If the maximum retry
                                      count is 0, the Batch service does not retry the Task after the
                                      first attempt. If the maximum retry count is -1, the Batch
                                      service retries the Task without limit, however this is not
                                      recommended for a start task or any task. The default value is 0
                                      (no retries).
                                    "maxWallClockTime": "1 day, 0:00:00",  #
                                      Optional. If this is not specified, there is no time limit on how
                                      long the Task may run.
                                    "retentionTime": "1 day, 0:00:00"  #
                                      Optional. The default is 7 days, i.e. the Task directory will be
                                      retained for 7 days unless the Compute Node is removed or the Job
                                      is deleted.
                                },
                                "containerSettings": {
                                    "containerRunOptions": "str",  # Optional.
                                      These additional options are supplied as arguments to the "docker
                                      create" command, in addition to those controlled by the Batch
                                      Service.
                                    "imageName": "str",  # Required. This is the
                                      full Image reference, as would be specified to "docker pull". If
                                      no tag is provided as part of the Image name, the tag ":latest"
                                      is used as a default.
                                    "registry": {
                                        "identityReference": {
                                            "resourceId": "str"  #
                                              Optional. The ARM resource id of the user assigned
                                              identity.
                                        },
                                        "password": "str",  # Optional. The
                                          password to log into the registry server.
                                        "registryServer": "str",  # Optional.
                                          If omitted, the default is "docker.io".
                                        "username": "str"  # Optional. The
                                          user name to log into the registry server.
                                    },
                                    "workingDirectory": "str"  # Optional. The
                                      default is 'taskWorkingDirectory'. Known values are:
                                      "taskWorkingDirectory", "containerImageDefault".
                                },
                                "displayName": "str",  # Optional. It need not be
                                  unique and can contain any Unicode characters up to a maximum length
                                  of 1024.
                                "environmentSettings": [
                                    {
                                        "name": "str",  # Required. The name
                                          of the environment variable.
                                        "value": "str"  # Optional. The value
                                          of the environment variable.
                                    }
                                ],
                                "id": "str",  # Required. The ID can contain any
                                  combination of alphanumeric characters including hyphens and
                                  underscores and cannot contain more than 64 characters.
                                "killJobOnCompletion": bool,  # Optional. If true,
                                  when the Job Manager Task completes, the Batch service marks the Job
                                  as complete. If any Tasks are still running at this time (other than
                                  Job Release), those Tasks are terminated. If false, the completion of
                                  the Job Manager Task does not affect the Job status. In this case,
                                  you should either use the onAllTasksComplete attribute to terminate
                                  the Job, or have a client or user terminate the Job explicitly. An
                                  example of this is if the Job Manager creates a set of Tasks but then
                                  takes no further role in their execution. The default value is true.
                                  If you are using the onAllTasksComplete and onTaskFailure attributes
                                  to control Job lifetime, and using the Job Manager Task only to
                                  create the Tasks for the Job (not to monitor progress), then it is
                                  important to set killJobOnCompletion to false.
                                "outputFiles": [
                                    {
                                        "destination": {
                                            "container": {
                                                "containerUrl":
                                                  "str",  # Required. If not using a managed identity,
                                                  the URL must include a Shared Access Signature (SAS)
                                                  granting write permissions to the container.
                                                "identityReference":
                                                  {
                                                    "resourceId":
                                                      "str"  # Optional. The ARM resource id of the
                                                      user assigned identity.
                                                },
                                                "path": "str",  #
                                                  Optional. If filePattern refers to a specific file
                                                  (i.e. contains no wildcards), then path is the name
                                                  of the blob to which to upload that file. If
                                                  filePattern contains one or more wildcards (and
                                                  therefore may match multiple files), then path is the
                                                  name of the blob virtual directory (which is
                                                  prepended to each blob name) to which to upload the
                                                  file(s). If omitted, file(s) are uploaded to the root
                                                  of the container with a blob name matching their file
                                                  name.
                                                "uploadHeaders": [
                                                    {
                "name": "str",  # Required. The
                                                          case-insensitive name of the header to be
                                                          used while uploading output files.
                "value": "str"  # Optional. The value of the
                                                          header to be used while uploading output
                                                          files.
                                                    }
                                                ]
                                            }
                                        },
                                        "filePattern": "str",  # Required.
                                          Both relative and absolute paths are supported. Relative
                                          paths are relative to the Task working directory. The
                                          following wildcards are supported: * matches 0 or more
                                          characters (for example pattern abc* would match abc or
                                          abcdef), ** matches any directory, ? matches any single
                                          character, [abc] matches one character in the brackets, and
                                          [a-c] matches one character in the range. Brackets can
                                          include a negation to match any character not specified (for
                                          example [!abc] matches any character but a, b, or c). If a
                                          file name starts with "." it is ignored by default but may be
                                          matched by specifying it explicitly (for example *.gif will
                                          not match .a.gif, but .*.gif will). A simple example: **""
                                          *.txt matches any file that does not start in '.' and ends
                                          with .txt in the Task working directory or any subdirectory.
                                          If the filename contains a wildcard character it can be
                                          escaped using brackets (for example abc["" *] would match a
                                          file named abc*"" ). Note that both and / are treated as
                                          directory separators on Windows, but only / is on Linux.
                                          Environment variables (%var% on Windows or $var on Linux) are
                                          expanded prior to the pattern being applied.
                                        "uploadOptions": {
                                            "uploadCondition": "str"  #
                                              Required. The default is taskcompletion. Known values
                                              are: "tasksuccess", "taskfailure", "taskcompletion".
                                        }
                                    }
                                ],
                                "requiredSlots": 0,  # Optional. The default is 1. A
                                  Task can only be scheduled to run on a compute node if the node has
                                  enough free scheduling slots available. For multi-instance Tasks,
                                  this property is not supported and must not be specified.
                                "resourceFiles": [
                                    {
                                        "autoStorageContainerName": "str",  #
                                          Optional. The autoStorageContainerName, storageContainerUrl
                                          and httpUrl properties are mutually exclusive and one of them
                                          must be specified.
                                        "blobPrefix": "str",  # Optional. The
                                          property is valid only when autoStorageContainerName or
                                          storageContainerUrl is used. This prefix can be a partial
                                          filename or a subdirectory. If a prefix is not specified, all
                                          the files in the container will be downloaded.
                                        "fileMode": "str",  # Optional. This
                                          property applies only to files being downloaded to Linux
                                          Compute Nodes. It will be ignored if it is specified for a
                                          resourceFile which will be downloaded to a Windows Compute
                                          Node. If this property is not specified for a Linux Compute
                                          Node, then a default value of 0770 is applied to the file.
                                        "filePath": "str",  # Optional. If
                                          the httpUrl property is specified, the filePath is required
                                          and describes the path which the file will be downloaded to,
                                          including the filename. Otherwise, if the
                                          autoStorageContainerName or storageContainerUrl property is
                                          specified, filePath is optional and is the directory to
                                          download the files to. In the case where filePath is used as
                                          a directory, any directory structure already associated with
                                          the input data will be retained in full and appended to the
                                          specified filePath directory. The specified relative path
                                          cannot break out of the Task's working directory (for example
                                          by using '..').
                                        "httpUrl": "str",  # Optional. The
                                          autoStorageContainerName, storageContainerUrl and httpUrl
                                          properties are mutually exclusive and one of them must be
                                          specified. If the URL points to Azure Blob Storage, it must
                                          be readable from compute nodes. There are three ways to get
                                          such a URL for a blob in Azure storage: include a Shared
                                          Access Signature (SAS) granting read permissions on the blob,
                                          use a managed identity with read permission, or set the ACL
                                          for the blob or its container to allow public access.
                                        "identityReference": {
                                            "resourceId": "str"  #
                                              Optional. The ARM resource id of the user assigned
                                              identity.
                                        },
                                        "storageContainerUrl": "str"  #
                                          Optional. The autoStorageContainerName, storageContainerUrl
                                          and httpUrl properties are mutually exclusive and one of them
                                          must be specified. This URL must be readable and listable
                                          from compute nodes. There are three ways to get such a URL
                                          for a container in Azure storage: include a Shared Access
                                          Signature (SAS) granting read and list permissions on the
                                          container, use a managed identity with read and list
                                          permissions, or set the ACL for the container to allow public
                                          access.
                                    }
                                ],
                                "runExclusive": bool,  # Optional. If true, no other
                                  Tasks will run on the same Node for as long as the Job Manager is
                                  running. If false, other Tasks can run simultaneously with the Job
                                  Manager on a Compute Node. The Job Manager Task counts normally
                                  against the Compute Node's concurrent Task limit, so this is only
                                  relevant if the Compute Node allows multiple concurrent Tasks. The
                                  default value is true.
                                "userIdentity": {
                                    "autoUser": {
                                        "elevationLevel": "str",  # Optional.
                                          The default value is nonAdmin. Known values are: "nonadmin",
                                          "admin".
                                        "scope": "str"  # Optional. The
                                          default value is pool. If the pool is running Windows a value
                                          of Task should be specified if stricter isolation between
                                          tasks is required. For example, if the task mutates the
                                          registry in a way which could impact other tasks, or if
                                          certificates have been specified on the pool which should not
                                          be accessible by normal tasks but should be accessible by
                                          StartTasks. Known values are: "task", "pool".
                                    },
                                    "username": "str"  # Optional. The userName
                                      and autoUser properties are mutually exclusive; you must specify
                                      one but not both.
                                }
                            },
                            "jobPreparationTask": {
                                "commandLine": "str",  # Required. The command line
                                  does not run under a shell, and therefore cannot take advantage of
                                  shell features such as environment variable expansion. If you want to
                                  take advantage of such features, you should invoke the shell in the
                                  command line, for example using "cmd /c MyCommand" in Windows or
                                  "/bin/sh -c MyCommand" in Linux. If the command line refers to file
                                  paths, it should use a relative path (relative to the Task working
                                  directory), or use the Batch provided environment variable
                                  (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                                "constraints": {
                                    "maxTaskRetryCount": 0,  # Optional. Note
                                      that this value specifically controls the number of retries for
                                      the Task executable due to a nonzero exit code. The Batch service
                                      will try the Task once, and may then retry up to this limit. For
                                      example, if the maximum retry count is 3, Batch tries the Task up
                                      to 4 times (one initial try and 3 retries). If the maximum retry
                                      count is 0, the Batch service does not retry the Task after the
                                      first attempt. If the maximum retry count is -1, the Batch
                                      service retries the Task without limit, however this is not
                                      recommended for a start task or any task. The default value is 0
                                      (no retries).
                                    "maxWallClockTime": "1 day, 0:00:00",  #
                                      Optional. If this is not specified, there is no time limit on how
                                      long the Task may run.
                                    "retentionTime": "1 day, 0:00:00"  #
                                      Optional. The default is 7 days, i.e. the Task directory will be
                                      retained for 7 days unless the Compute Node is removed or the Job
                                      is deleted.
                                },
                                "containerSettings": {
                                    "containerRunOptions": "str",  # Optional.
                                      These additional options are supplied as arguments to the "docker
                                      create" command, in addition to those controlled by the Batch
                                      Service.
                                    "imageName": "str",  # Required. This is the
                                      full Image reference, as would be specified to "docker pull". If
                                      no tag is provided as part of the Image name, the tag ":latest"
                                      is used as a default.
                                    "registry": {
                                        "identityReference": {
                                            "resourceId": "str"  #
                                              Optional. The ARM resource id of the user assigned
                                              identity.
                                        },
                                        "password": "str",  # Optional. The
                                          password to log into the registry server.
                                        "registryServer": "str",  # Optional.
                                          If omitted, the default is "docker.io".
                                        "username": "str"  # Optional. The
                                          user name to log into the registry server.
                                    },
                                    "workingDirectory": "str"  # Optional. The
                                      default is 'taskWorkingDirectory'. Known values are:
                                      "taskWorkingDirectory", "containerImageDefault".
                                },
                                "environmentSettings": [
                                    {
                                        "name": "str",  # Required. The name
                                          of the environment variable.
                                        "value": "str"  # Optional. The value
                                          of the environment variable.
                                    }
                                ],
                                "id": "str",  # Optional. The ID can contain any
                                  combination of alphanumeric characters including hyphens and
                                  underscores and cannot contain more than 64 characters. If you do not
                                  specify this property, the Batch service assigns a default value of
                                  'jobpreparation'. No other Task in the Job can have the same ID as
                                  the Job Preparation Task. If you try to submit a Task with the same
                                  id, the Batch service rejects the request with error code
                                  TaskIdSameAsJobPreparationTask; if you are calling the REST API
                                  directly, the HTTP status code is 409 (Conflict).
                                "rerunOnNodeRebootAfterSuccess": bool,  # Optional.
                                  The Job Preparation Task is always rerun if a Compute Node is
                                  reimaged, or if the Job Preparation Task did not complete (e.g.
                                  because the reboot occurred while the Task was running). Therefore,
                                  you should always write a Job Preparation Task to be idempotent and
                                  to behave correctly if run multiple times. The default value is true.
                                "resourceFiles": [
                                    {
                                        "autoStorageContainerName": "str",  #
                                          Optional. The autoStorageContainerName, storageContainerUrl
                                          and httpUrl properties are mutually exclusive and one of them
                                          must be specified.
                                        "blobPrefix": "str",  # Optional. The
                                          property is valid only when autoStorageContainerName or
                                          storageContainerUrl is used. This prefix can be a partial
                                          filename or a subdirectory. If a prefix is not specified, all
                                          the files in the container will be downloaded.
                                        "fileMode": "str",  # Optional. This
                                          property applies only to files being downloaded to Linux
                                          Compute Nodes. It will be ignored if it is specified for a
                                          resourceFile which will be downloaded to a Windows Compute
                                          Node. If this property is not specified for a Linux Compute
                                          Node, then a default value of 0770 is applied to the file.
                                        "filePath": "str",  # Optional. If
                                          the httpUrl property is specified, the filePath is required
                                          and describes the path which the file will be downloaded to,
                                          including the filename. Otherwise, if the
                                          autoStorageContainerName or storageContainerUrl property is
                                          specified, filePath is optional and is the directory to
                                          download the files to. In the case where filePath is used as
                                          a directory, any directory structure already associated with
                                          the input data will be retained in full and appended to the
                                          specified filePath directory. The specified relative path
                                          cannot break out of the Task's working directory (for example
                                          by using '..').
                                        "httpUrl": "str",  # Optional. The
                                          autoStorageContainerName, storageContainerUrl and httpUrl
                                          properties are mutually exclusive and one of them must be
                                          specified. If the URL points to Azure Blob Storage, it must
                                          be readable from compute nodes. There are three ways to get
                                          such a URL for a blob in Azure storage: include a Shared
                                          Access Signature (SAS) granting read permissions on the blob,
                                          use a managed identity with read permission, or set the ACL
                                          for the blob or its container to allow public access.
                                        "identityReference": {
                                            "resourceId": "str"  #
                                              Optional. The ARM resource id of the user assigned
                                              identity.
                                        },
                                        "storageContainerUrl": "str"  #
                                          Optional. The autoStorageContainerName, storageContainerUrl
                                          and httpUrl properties are mutually exclusive and one of them
                                          must be specified. This URL must be readable and listable
                                          from compute nodes. There are three ways to get such a URL
                                          for a container in Azure storage: include a Shared Access
                                          Signature (SAS) granting read and list permissions on the
                                          container, use a managed identity with read and list
                                          permissions, or set the ACL for the container to allow public
                                          access.
                                    }
                                ],
                                "userIdentity": {
                                    "autoUser": {
                                        "elevationLevel": "str",  # Optional.
                                          The default value is nonAdmin. Known values are: "nonadmin",
                                          "admin".
                                        "scope": "str"  # Optional. The
                                          default value is pool. If the pool is running Windows a value
                                          of Task should be specified if stricter isolation between
                                          tasks is required. For example, if the task mutates the
                                          registry in a way which could impact other tasks, or if
                                          certificates have been specified on the pool which should not
                                          be accessible by normal tasks but should be accessible by
                                          StartTasks. Known values are: "task", "pool".
                                    },
                                    "username": "str"  # Optional. The userName
                                      and autoUser properties are mutually exclusive; you must specify
                                      one but not both.
                                },
                                "waitForSuccess": bool  # Optional. If true and the
                                  Job Preparation Task fails on a Node, the Batch service retries the
                                  Job Preparation Task up to its maximum retry count (as specified in
                                  the constraints element). If the Task has still not completed
                                  successfully after all retries, then the Batch service will not
                                  schedule Tasks of the Job to the Node. The Node remains active and
                                  eligible to run Tasks of other Jobs. If false, the Batch service will
                                  not wait for the Job Preparation Task to complete. In this case,
                                  other Tasks of the Job can start executing on the Compute Node while
                                  the Job Preparation Task is still running; and even if the Job
                                  Preparation Task fails, new Tasks will continue to be scheduled on
                                  the Compute Node. The default value is true.
                            },
                            "jobReleaseTask": {
                                "commandLine": "str",  # Required. The command line
                                  does not run under a shell, and therefore cannot take advantage of
                                  shell features such as environment variable expansion. If you want to
                                  take advantage of such features, you should invoke the shell in the
                                  command line, for example using "cmd /c MyCommand" in Windows or
                                  "/bin/sh -c MyCommand" in Linux. If the command line refers to file
                                  paths, it should use a relative path (relative to the Task working
                                  directory), or use the Batch provided environment variable
                                  (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                                "containerSettings": {
                                    "containerRunOptions": "str",  # Optional.
                                      These additional options are supplied as arguments to the "docker
                                      create" command, in addition to those controlled by the Batch
                                      Service.
                                    "imageName": "str",  # Required. This is the
                                      full Image reference, as would be specified to "docker pull". If
                                      no tag is provided as part of the Image name, the tag ":latest"
                                      is used as a default.
                                    "registry": {
                                        "identityReference": {
                                            "resourceId": "str"  #
                                              Optional. The ARM resource id of the user assigned
                                              identity.
                                        },
                                        "password": "str",  # Optional. The
                                          password to log into the registry server.
                                        "registryServer": "str",  # Optional.
                                          If omitted, the default is "docker.io".
                                        "username": "str"  # Optional. The
                                          user name to log into the registry server.
                                    },
                                    "workingDirectory": "str"  # Optional. The
                                      default is 'taskWorkingDirectory'. Known values are:
                                      "taskWorkingDirectory", "containerImageDefault".
                                },
                                "environmentSettings": [
                                    {
                                        "name": "str",  # Required. The name
                                          of the environment variable.
                                        "value": "str"  # Optional. The value
                                          of the environment variable.
                                    }
                                ],
                                "id": "str",  # Optional. The ID can contain any
                                  combination of alphanumeric characters including hyphens and
                                  underscores and cannot contain more than 64 characters. If you do not
                                  specify this property, the Batch service assigns a default value of
                                  'jobrelease'. No other Task in the Job can have the same ID as the
                                  Job Release Task. If you try to submit a Task with the same id, the
                                  Batch service rejects the request with error code
                                  TaskIdSameAsJobReleaseTask; if you are calling the REST API directly,
                                  the HTTP status code is 409 (Conflict).
                                "maxWallClockTime": "1 day, 0:00:00",  # Optional.
                                  The maximum elapsed time that the Job Release Task may run on a given
                                  Compute Node, measured from the time the Task starts. If the Task
                                  does not complete within the time limit, the Batch service terminates
                                  it. The default value is 15 minutes. You may not specify a timeout
                                  longer than 15 minutes. If you do, the Batch service rejects it with
                                  an error; if you are calling the REST API directly, the HTTP status
                                  code is 400 (Bad Request).
                                "resourceFiles": [
                                    {
                                        "autoStorageContainerName": "str",  #
                                          Optional. The autoStorageContainerName, storageContainerUrl
                                          and httpUrl properties are mutually exclusive and one of them
                                          must be specified.
                                        "blobPrefix": "str",  # Optional. The
                                          property is valid only when autoStorageContainerName or
                                          storageContainerUrl is used. This prefix can be a partial
                                          filename or a subdirectory. If a prefix is not specified, all
                                          the files in the container will be downloaded.
                                        "fileMode": "str",  # Optional. This
                                          property applies only to files being downloaded to Linux
                                          Compute Nodes. It will be ignored if it is specified for a
                                          resourceFile which will be downloaded to a Windows Compute
                                          Node. If this property is not specified for a Linux Compute
                                          Node, then a default value of 0770 is applied to the file.
                                        "filePath": "str",  # Optional. If
                                          the httpUrl property is specified, the filePath is required
                                          and describes the path which the file will be downloaded to,
                                          including the filename. Otherwise, if the
                                          autoStorageContainerName or storageContainerUrl property is
                                          specified, filePath is optional and is the directory to
                                          download the files to. In the case where filePath is used as
                                          a directory, any directory structure already associated with
                                          the input data will be retained in full and appended to the
                                          specified filePath directory. The specified relative path
                                          cannot break out of the Task's working directory (for example
                                          by using '..').
                                        "httpUrl": "str",  # Optional. The
                                          autoStorageContainerName, storageContainerUrl and httpUrl
                                          properties are mutually exclusive and one of them must be
                                          specified. If the URL points to Azure Blob Storage, it must
                                          be readable from compute nodes. There are three ways to get
                                          such a URL for a blob in Azure storage: include a Shared
                                          Access Signature (SAS) granting read permissions on the blob,
                                          use a managed identity with read permission, or set the ACL
                                          for the blob or its container to allow public access.
                                        "identityReference": {
                                            "resourceId": "str"  #
                                              Optional. The ARM resource id of the user assigned
                                              identity.
                                        },
                                        "storageContainerUrl": "str"  #
                                          Optional. The autoStorageContainerName, storageContainerUrl
                                          and httpUrl properties are mutually exclusive and one of them
                                          must be specified. This URL must be readable and listable
                                          from compute nodes. There are three ways to get such a URL
                                          for a container in Azure storage: include a Shared Access
                                          Signature (SAS) granting read and list permissions on the
                                          container, use a managed identity with read and list
                                          permissions, or set the ACL for the container to allow public
                                          access.
                                    }
                                ],
                                "retentionTime": "1 day, 0:00:00",  # Optional. The
                                  default is 7 days, i.e. the Task directory will be retained for 7
                                  days unless the Compute Node is removed or the Job is deleted.
                                "userIdentity": {
                                    "autoUser": {
                                        "elevationLevel": "str",  # Optional.
                                          The default value is nonAdmin. Known values are: "nonadmin",
                                          "admin".
                                        "scope": "str"  # Optional. The
                                          default value is pool. If the pool is running Windows a value
                                          of Task should be specified if stricter isolation between
                                          tasks is required. For example, if the task mutates the
                                          registry in a way which could impact other tasks, or if
                                          certificates have been specified on the pool which should not
                                          be accessible by normal tasks but should be accessible by
                                          StartTasks. Known values are: "task", "pool".
                                    },
                                    "username": "str"  # Optional. The userName
                                      and autoUser properties are mutually exclusive; you must specify
                                      one but not both.
                                }
                            },
                            "lastModified": "2020-02-20 00:00:00",  # Optional. This is
                              the last time at which the Job level data, such as the Job state or
                              priority, changed. It does not factor in task-level changes such as
                              adding new Tasks or Tasks changing state.
                            "maxParallelTasks": -1,  # Optional. Default value is -1. The
                              value of maxParallelTasks must be -1 or greater than 0 if specified. If
                              not specified, the default value is -1, which means there's no limit to
                              the number of tasks that can be run at once. You can update a job's
                              maxParallelTasks after it has been created using the update job API.
                            "metadata": [
                                {
                                    "name": "str",  # Required. The name of the
                                      metadata item.
                                    "value": "str"  # Required. The value of the
                                      metadata item.
                                }
                            ],
                            "networkConfiguration": {
                                "subnetId": "str"  # Required. The virtual network
                                  must be in the same region and subscription as the Azure Batch
                                  Account. The specified subnet should have enough free IP addresses to
                                  accommodate the number of Compute Nodes which will run Tasks from the
                                  Job. This can be up to the number of Compute Nodes in the Pool. The
                                  'MicrosoftAzureBatch' service principal must have the 'Classic
                                  Virtual Machine Contributor' Role-Based Access Control (RBAC) role
                                  for the specified VNet so that Azure Batch service can schedule Tasks
                                  on the Nodes. This can be verified by checking if the specified VNet
                                  has any associated Network Security Groups (NSG). If communication to
                                  the Nodes in the specified subnet is denied by an NSG, then the Batch
                                  service will set the state of the Compute Nodes to unusable. This is
                                  of the form
                                  /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.
                                  If the specified VNet has any associated Network Security Groups
                                  (NSG), then a few reserved system ports must be enabled for inbound
                                  communication from the Azure Batch service. For Pools created with a
                                  Virtual Machine configuration, enable ports 29876 and 29877, as well
                                  as port 22 for Linux and port 3389 for Windows. Port 443 is also
                                  required to be open for outbound connections for communications to
                                  Azure Storage. For more details see:
                                  https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                            },
                            "onAllTasksComplete": "str",  # Optional. The default is
                              noaction. Known values are: "noaction", "terminatejob".
                            "onTaskFailure": "str",  # Optional. A Task is considered to
                              have failed if has a failureInfo. A failureInfo is set if the Task
                              completes with a non-zero exit code after exhausting its retry count, or
                              if there was an error starting the Task, for example due to a resource
                              file download error. The default is noaction. Known values are:
                              "noaction", "performexitoptionsjobaction".
                            "poolInfo": {
                                "autoPoolSpecification": {
                                    "autoPoolIdPrefix": "str",  # Optional. The
                                      Batch service assigns each auto Pool a unique identifier on
                                      creation. To distinguish between Pools created for different
                                      purposes, you can specify this element to add a prefix to the ID
                                      that is assigned. The prefix can be up to 20 characters long.
                                    "keepAlive": bool,  # Optional. If false, the
                                      Batch service deletes the Pool once its lifetime (as determined
                                      by the poolLifetimeOption setting) expires; that is, when the Job
                                      or Job Schedule completes. If true, the Batch service does not
                                      delete the Pool automatically. It is up to the user to delete
                                      auto Pools created with this option.
                                    "pool": {
                                        "applicationLicenses": [
                                            "str"  # Optional. The list
                                              of application licenses must be a subset of available
                                              Batch service application licenses. If a license is
                                              requested which is not supported, Pool creation will
                                              fail. The permitted licenses available on the Pool are
                                              'maya', 'vray', '3dsmax', 'arnold'. An additional charge
                                              applies for each application license added to the Pool.
                                        ],
                                        "applicationPackageReferences": [
                                            {
                                                "applicationId":
                                                  "str",  # Required. The ID of the application to
                                                  deploy.
                                                "version": "str"  #
                                                  Optional. If this is omitted on a Pool, and no
                                                  default version is specified for this application,
                                                  the request fails with the error code
                                                  InvalidApplicationPackageReferences and HTTP status
                                                  code 409. If this is omitted on a Task, and no
                                                  default version is specified for this application,
                                                  the Task fails with a pre-processing error.
                                            }
                                        ],
                                        "autoScaleEvaluationInterval": "1
                                          day, 0:00:00",  # Optional. The default value is 15 minutes.
                                          The minimum and maximum value are 5 minutes and 168 hours
                                          respectively. If you specify a value less than 5 minutes or
                                          greater than 168 hours, the Batch service rejects the request
                                          with an invalid property value error; if you are calling the
                                          REST API directly, the HTTP status code is 400 (Bad Request).
                                        "autoScaleFormula": "str",  #
                                          Optional. This property must not be specified if
                                          enableAutoScale is set to false. It is required if
                                          enableAutoScale is set to true. The formula is checked for
                                          validity before the Pool is created. If the formula is not
                                          valid, the Batch service rejects the request with detailed
                                          error information.
                                        "certificateReferences": [
                                            {
                                                "storeLocation":
                                                  "str",  # Optional. The default value is currentuser.
                                                  This property is applicable only for Pools configured
                                                  with Windows Compute Nodes (that is, created with
                                                  cloudServiceConfiguration, or with
                                                  virtualMachineConfiguration using a Windows Image
                                                  reference). For Linux Compute Nodes, the Certificates
                                                  are stored in a directory inside the Task working
                                                  directory and an environment variable
                                                  AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to
                                                  query for this location. For Certificates with
                                                  visibility of 'remoteUser', a 'certs' directory is
                                                  created in the user's home directory (e.g.,
                                                  /home/{user-name}/certs) and Certificates are placed
                                                  in that directory. Known values are: "currentuser",
                                                  "localmachine".
                                                "storeName": "str",
                                                  # Optional. This property is applicable only for
                                                  Pools configured with Windows Compute Nodes (that is,
                                                  created with cloudServiceConfiguration, or with
                                                  virtualMachineConfiguration using a Windows Image
                                                  reference). Common store names include: My, Root, CA,
                                                  Trust, Disallowed, TrustedPeople, TrustedPublisher,
                                                  AuthRoot, AddressBook, but any custom store name can
                                                  also be used. The default value is My.
                                                "thumbprint": "str",
                                                  # Required. The thumbprint of the Certificate.
                "thumbprintAlgorithm": "str",  # Required. The
                                                  algorithm with which the thumbprint is associated.
                                                  This must be sha1.
                                                "visibility": [
                                                    "str"  #
                                                      Optional. You can specify more than one
                                                      visibility in this collection. The default is all
                                                      Accounts.
                                                ]
                                            }
                                        ],
                                        "cloudServiceConfiguration": {
                                            "osFamily": "str",  #
                                              Required. Possible values are:"n2 - OS Family 2,
                                              equivalent to Windows Server 2008 R2 SP1."n3 - OS Family
                                              3, equivalent to Windows Server 2012."n4 - OS Family 4,
                                              equivalent to Windows Server 2012 R2."n5 - OS Family 5,
                                              equivalent to Windows Server 2016."n6 - OS Family 6,
                                              equivalent to Windows Server 2019. For more information,
                                              see Azure Guest OS Releases
                                              (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
                                            "osVersion": "str"  #
                                              Optional. The default value is * which specifies the
                                              latest operating system version for the specified OS
                                              family.
                                        },
                                        "displayName": "str",  # Optional.
                                          The display name need not be unique and can contain any
                                          Unicode characters up to a maximum length of 1024.
                                        "enableAutoScale": bool,  # Optional.
                                          If false, at least one of targetDedicatedNodes and
                                          targetLowPriorityNodes must be specified. If true, the
                                          autoScaleFormula element is required. The Pool automatically
                                          resizes according to the formula. The default value is false.
                                        "enableInterNodeCommunication": bool,
                                          # Optional. Enabling inter-node communication limits the
                                          maximum size of the Pool due to deployment restrictions on
                                          the Compute Nodes of the Pool. This may result in the Pool
                                          not reaching its desired size. The default value is false.
                                        "metadata": [
                                            {
                                                "name": "str",  #
                                                  Required. The name of the metadata item.
                                                "value": "str"  #
                                                  Required. The value of the metadata item.
                                            }
                                        ],
                                        "mountConfiguration": [
                                            {
                "azureBlobFileSystemConfiguration": {
                                                    "accountKey":
                                                      "str",  # Optional. This property is mutually
                                                      exclusive with both sasKey and identity; exactly
                                                      one must be specified.
                "accountName": "str",  # Required. The Azure
                                                      Storage Account name.
                "blobfuseOptions": "str",  # Optional. These are
                                                      'net use' options in Windows and 'mount' options
                                                      in Linux.
                "containerName": "str",  # Required. The Azure
                                                      Blob Storage Container name.
                "identityReference": {
                "resourceId": "str"  # Optional. The ARM
                                                          resource id of the user assigned identity.
                                                    },
                "relativeMountPath": "str",  # Required. All file
                                                      systems are mounted relative to the Batch mounts
                                                      directory, accessible via the
                                                      AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                                    "sasKey":
                                                      "str"  # Optional. This property is mutually
                                                      exclusive with both accountKey and identity;
                                                      exactly one must be specified.
                                                },
                "azureFileShareConfiguration": {
                                                    "accountKey":
                                                      "str",  # Required. The Azure Storage account
                                                      key.
                "accountName": "str",  # Required. The Azure
                                                      Storage account name.
                "azureFileUrl": "str",  # Required. This is of
                                                      the form
                                                      'https://{account}.file.core.windows.net/'.
                "mountOptions": "str",  # Optional. These are
                                                      'net use' options in Windows and 'mount' options
                                                      in Linux.
                "relativeMountPath": "str"  # Required. All file
                                                      systems are mounted relative to the Batch mounts
                                                      directory, accessible via the
                                                      AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                                },
                "cifsMountConfiguration": {
                "mountOptions": "str",  # Optional. These are
                                                      'net use' options in Windows and 'mount' options
                                                      in Linux.
                                                    "password":
                                                      "str",  # Required. The password to use for
                                                      authentication against the CIFS file system.
                "relativeMountPath": "str",  # Required. All file
                                                      systems are mounted relative to the Batch mounts
                                                      directory, accessible via the
                                                      AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                                    "source":
                                                      "str",  # Required. The URI of the file system to
                                                      mount.
                                                    "username":
                                                      "str"  # Required. The user to use for
                                                      authentication against the CIFS file system.
                                                },
                "nfsMountConfiguration": {
                "mountOptions": "str",  # Optional. These are
                                                      'net use' options in Windows and 'mount' options
                                                      in Linux.
                "relativeMountPath": "str",  # Required. All file
                                                      systems are mounted relative to the Batch mounts
                                                      directory, accessible via the
                                                      AZ_BATCH_NODE_MOUNTS_DIR environment variable.
                                                    "source":
                                                      "str"  # Required. The URI of the file system to
                                                      mount.
                                                }
                                            }
                                        ],
                                        "networkConfiguration": {
                                            "dynamicVNetAssignmentScope":
                                              "str",  # Optional. The scope of dynamic vnet assignment.
                                              Known values are: "none", "job".
                                            "endpointConfiguration": {
                                                "inboundNATPools": [
                                                    {
                "backendPort": 0,  # Required. This must be
                                                          unique within a Batch Pool. Acceptable values
                                                          are between 1 and 65535 except for 22, 3389,
                                                          29876 and 29877 as these are reserved. If any
                                                          reserved values are provided the request
                                                          fails with HTTP status code 400.
                "frontendPortRangeEnd": 0,  # Required.
                                                          Acceptable values range between 1 and 65534
                                                          except ports from 50000 to 55000 which are
                                                          reserved by the Batch service. All ranges
                                                          within a Pool must be distinct and cannot
                                                          overlap. Each range must contain at least 40
                                                          ports. If any reserved or overlapping values
                                                          are provided the request fails with HTTP
                                                          status code 400.
                "frontendPortRangeStart": 0,  # Required.
                                                          Acceptable values range between 1 and 65534
                                                          except ports from 50000 to 55000 which are
                                                          reserved. All ranges within a Pool must be
                                                          distinct and cannot overlap. Each range must
                                                          contain at least 40 ports. If any reserved or
                                                          overlapping values are provided the request
                                                          fails with HTTP status code 400.
                "name": "str",  # Required. The name must be
                                                          unique within a Batch Pool, can contain
                                                          letters, numbers, underscores, periods, and
                                                          hyphens. Names must start with a letter or
                                                          number, must end with a letter, number, or
                                                          underscore, and cannot exceed 77 characters.
                                                          If any invalid values are provided the
                                                          request fails with HTTP status code 400.
                "networkSecurityGroupRules": [
                {
                "access": "str",  # Required. The
                                                                  action that should be taken for a
                                                                  specified IP address, subnet range or
                                                                  tag. Known values are: "allow",
                                                                  "deny".
                "priority": 0,  # Required.
                                                                  Priorities within a Pool must be
                                                                  unique and are evaluated in order of
                                                                  priority. The lower the number the
                                                                  higher the priority. For example,
                                                                  rules could be specified with order
                                                                  numbers of 150, 250, and 350. The
                                                                  rule with the order number of 150
                                                                  takes precedence over the rule that
                                                                  has an order of 250. Allowed
                                                                  priorities are 150 to 4096. If any
                                                                  reserved or duplicate values are
                                                                  provided the request fails with HTTP
                                                                  status code 400.
                "sourceAddressPrefix": "str",  #
                                                                  Required. Valid values are a single
                                                                  IP address (i.e. 10.10.10.10), IP
                                                                  subnet (i.e. 192.168.1.0/24), default
                                                                  tag, or * (for all addresses).  If
                                                                  any other values are provided the
                                                                  request fails with HTTP status code
                                                                  400.
                "sourcePortRanges": [
                "str"  # Optional. Valid values
                                                                      are '"" *' (for all ports 0 -
                                                                      65535), a specific port (i.e.
                                                                      22), or a port range (i.e.
                                                                      100-200). The ports must be in
                                                                      the range of 0 to 65535. Each
                                                                      entry in this collection must not
                                                                      overlap any other entry (either a
                                                                      range or an individual port). If
                                                                      any other values are provided the
                                                                      request fails with HTTP status
                                                                      code 400. The default value is
                                                                      '*"" '.
                ]
                }
                                                        ],
                "protocol": "str"  # Required. The protocol
                                                          of the endpoint. Known values are: "tcp",
                                                          "udp".
                                                    }
                                                ]
                                            },
                "publicIPAddressConfiguration": {
                                                "ipAddressIds": [
                                                    "str"  #
                                                      Optional. The number of IPs specified here limits
                                                      the maximum size of the Pool - 100 dedicated
                                                      nodes or 100 Spot/Low-priority nodes can be
                                                      allocated for each public IP. For example, a pool
                                                      needing 250 dedicated VMs would need at least 3
                                                      public IPs specified. Each element of this
                                                      collection is of the form:
                                                      /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}.
                                                ],
                                                "provision": "str"  #
                                                  Optional. The default value is BatchManaged. Known
                                                  values are: "batchmanaged", "usermanaged",
                                                  "nopublicipaddresses".
                                            },
                                            "subnetId": "str"  #
                                              Optional. The virtual network must be in the same region
                                              and subscription as the Azure Batch Account. The
                                              specified subnet should have enough free IP addresses to
                                              accommodate the number of Compute Nodes in the Pool. If
                                              the subnet doesn't have enough free IP addresses, the
                                              Pool will partially allocate Nodes and a resize error
                                              will occur. The 'MicrosoftAzureBatch' service principal
                                              must have the 'Classic Virtual Machine Contributor'
                                              Role-Based Access Control (RBAC) role for the specified
                                              VNet. The specified subnet must allow communication from
                                              the Azure Batch service to be able to schedule Tasks on
                                              the Nodes. This can be verified by checking if the
                                              specified VNet has any associated Network Security Groups
                                              (NSG). If communication to the Nodes in the specified
                                              subnet is denied by an NSG, then the Batch service will
                                              set the state of the Compute Nodes to unusable. For Pools
                                              created with virtualMachineConfiguration only ARM virtual
                                              networks ('Microsoft.Network/virtualNetworks') are
                                              supported, but for Pools created with
                                              cloudServiceConfiguration both ARM and classic virtual
                                              networks are supported. If the specified VNet has any
                                              associated Network Security Groups (NSG), then a few
                                              reserved system ports must be enabled for inbound
                                              communication. For Pools created with a virtual machine
                                              configuration, enable ports 29876 and 29877, as well as
                                              port 22 for Linux and port 3389 for Windows. For Pools
                                              created with a cloud service configuration, enable ports
                                              10100, 20100, and 30100. Also enable outbound connections
                                              to Azure Storage on port 443. For more details see:
                                              https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                                        },
                                        "resizeTimeout": "1 day, 0:00:00",  #
                                          Optional. This timeout applies only to manual scaling; it has
                                          no effect when enableAutoScale is set to true. The default
                                          value is 15 minutes. The minimum value is 5 minutes. If you
                                          specify a value less than 5 minutes, the Batch service
                                          rejects the request with an error; if you are calling the
                                          REST API directly, the HTTP status code is 400 (Bad Request).
                                        "startTask": {
                                            "commandLine": "str",  #
                                              Required. The command line does not run under a shell,
                                              and therefore cannot take advantage of shell features
                                              such as environment variable expansion. If you want to
                                              take advantage of such features, you should invoke the
                                              shell in the command line, for example using "cmd /c
                                              MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
                                              If the command line refers to file paths, it should use a
                                              relative path (relative to the Task working directory),
                                              or use the Batch provided environment variable
                                              (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
                                            "containerSettings": {
                "containerRunOptions": "str",  # Optional. These
                                                  additional options are supplied as arguments to the
                                                  "docker create" command, in addition to those
                                                  controlled by the Batch Service.
                                                "imageName": "str",
                                                  # Required. This is the full Image reference, as
                                                  would be specified to "docker pull". If no tag is
                                                  provided as part of the Image name, the tag ":latest"
                                                  is used as a default.
                                                "registry": {
                "identityReference": {
                "resourceId": "str"  # Optional. The ARM
                                                          resource id of the user assigned identity.
                                                    },
                                                    "password":
                                                      "str",  # Optional. The password to log into the
                                                      registry server.
                "registryServer": "str",  # Optional. If omitted,
                                                      the default is "docker.io".
                                                    "username":
                                                      "str"  # Optional. The user name to log into the
                                                      registry server.
                                                },
                                                "workingDirectory":
                                                  "str"  # Optional. The default is
                                                  'taskWorkingDirectory'. Known values are:
                                                  "taskWorkingDirectory", "containerImageDefault".
                                            },
                                            "environmentSettings": [
                                                {
                                                    "name":
                                                      "str",  # Required. The name of the environment
                                                      variable.
                                                    "value":
                                                      "str"  # Optional. The value of the environment
                                                      variable.
                                                }
                                            ],
                                            "maxTaskRetryCount": 0,  #
                                              Optional. The Batch service retries a Task if its exit
                                              code is nonzero. Note that this value specifically
                                              controls the number of retries. The Batch service will
                                              try the Task once, and may then retry up to this limit.
                                              For example, if the maximum retry count is 3, Batch tries
                                              the Task up to 4 times (one initial try and 3 retries).
                                              If the maximum retry count is 0, the Batch service does
                                              not retry the Task. If the maximum retry count is -1, the
                                              Batch service retries the Task without limit, however
                                              this is not recommended for a start task or any task. The
                                              default value is 0 (no retries).
                                            "resourceFiles": [
                                                {
                "autoStorageContainerName": "str",  # Optional.
                                                      The autoStorageContainerName, storageContainerUrl
                                                      and httpUrl properties are mutually exclusive and
                                                      one of them must be specified.
                                                    "blobPrefix":
                                                      "str",  # Optional. The property is valid only
                                                      when autoStorageContainerName or
                                                      storageContainerUrl is used. This prefix can be a
                                                      partial filename or a subdirectory. If a prefix
                                                      is not specified, all the files in the container
                                                      will be downloaded.
                                                    "fileMode":
                                                      "str",  # Optional. This property applies only to
                                                      files being downloaded to Linux Compute Nodes. It
                                                      will be ignored if it is specified for a
                                                      resourceFile which will be downloaded to a
                                                      Windows Compute Node. If this property is not
                                                      specified for a Linux Compute Node, then a
                                                      default value of 0770 is applied to the file.
                                                    "filePath":
                                                      "str",  # Optional. If the httpUrl property is
                                                      specified, the filePath is required and describes
                                                      the path which the file will be downloaded to,
                                                      including the filename. Otherwise, if the
                                                      autoStorageContainerName or storageContainerUrl
                                                      property is specified, filePath is optional and
                                                      is the directory to download the files to. In the
                                                      case where filePath is used as a directory, any
                                                      directory structure already associated with the
                                                      input data will be retained in full and appended
                                                      to the specified filePath directory. The
                                                      specified relative path cannot break out of the
                                                      Task's working directory (for example by using
                                                      '..').
                                                    "httpUrl":
                                                      "str",  # Optional. The autoStorageContainerName,
                                                      storageContainerUrl and httpUrl properties are
                                                      mutually exclusive and one of them must be
                                                      specified. If the URL points to Azure Blob
                                                      Storage, it must be readable from compute nodes.
                                                      There are three ways to get such a URL for a blob
                                                      in Azure storage: include a Shared Access
                                                      Signature (SAS) granting read permissions on the
                                                      blob, use a managed identity with read
                                                      permission, or set the ACL for the blob or its
                                                      container to allow public access.
                "identityReference": {
                "resourceId": "str"  # Optional. The ARM
                                                          resource id of the user assigned identity.
                                                    },
                "storageContainerUrl": "str"  # Optional. The
                                                      autoStorageContainerName, storageContainerUrl and
                                                      httpUrl properties are mutually exclusive and one
                                                      of them must be specified. This URL must be
                                                      readable and listable from compute nodes. There
                                                      are three ways to get such a URL for a container
                                                      in Azure storage: include a Shared Access
                                                      Signature (SAS) granting read and list
                                                      permissions on the container, use a managed
                                                      identity with read and list permissions, or set
                                                      the ACL for the container to allow public access.
                                                }
                                            ],
                                            "userIdentity": {
                                                "autoUser": {
                "elevationLevel": "str",  # Optional. The default
                                                      value is nonAdmin. Known values are: "nonadmin",
                                                      "admin".
                                                    "scope":
                                                      "str"  # Optional. The default value is pool. If
                                                      the pool is running Windows a value of Task
                                                      should be specified if stricter isolation between
                                                      tasks is required. For example, if the task
                                                      mutates the registry in a way which could impact
                                                      other tasks, or if certificates have been
                                                      specified on the pool which should not be
                                                      accessible by normal tasks but should be
                                                      accessible by StartTasks. Known values are:
                                                      "task", "pool".
                                                },
                                                "username": "str"  #
                                                  Optional. The userName and autoUser properties are
                                                  mutually exclusive; you must specify one but not
                                                  both.
                                            },
                                            "waitForSuccess": bool  #
                                              Optional. If true and the StartTask fails on a Node, the
                                              Batch service retries the StartTask up to its maximum
                                              retry count (maxTaskRetryCount). If the Task has still
                                              not completed successfully after all retries, then the
                                              Batch service marks the Node unusable, and will not
                                              schedule Tasks to it. This condition can be detected via
                                              the Compute Node state and failure info details. If
                                              false, the Batch service will not wait for the StartTask
                                              to complete. In this case, other Tasks can start
                                              executing on the Compute Node while the StartTask is
                                              still running; and even if the StartTask fails, new Tasks
                                              will continue to be scheduled on the Compute Node. The
                                              default is true.
                                        },
                                        "targetDedicatedNodes": 0,  #
                                          Optional. This property must not be specified if
                                          enableAutoScale is set to true. If enableAutoScale is set to
                                          false, then you must set either targetDedicatedNodes,
                                          targetLowPriorityNodes, or both.
                                        "targetLowPriorityNodes": 0,  #
                                          Optional. This property must not be specified if
                                          enableAutoScale is set to true. If enableAutoScale is set to
                                          false, then you must set either targetDedicatedNodes,
                                          targetLowPriorityNodes, or both.
                                        "taskSchedulingPolicy": {
                                            "nodeFillType": "str"  #
                                              Required. If not specified, the default is spread. Known
                                              values are: "spread", "pack".
                                        },
                                        "taskSlotsPerNode": 0,  # Optional.
                                          The default value is 1. The maximum value is the smaller of 4
                                          times the number of cores of the vmSize of the pool or 256.
                                        "userAccounts": [
                                            {
                                                "elevationLevel":
                                                  "str",  # Optional. The default value is nonAdmin.
                                                  Known values are: "nonadmin", "admin".
                "linuxUserConfiguration": {
                                                    "gid": 0,  #
                                                      Optional. The uid and gid properties must be
                                                      specified together or not at all. If not
                                                      specified the underlying operating system picks
                                                      the gid.
                "sshPrivateKey": "str",  # Optional. The private
                                                      key must not be password protected. The private
                                                      key is used to automatically configure
                                                      asymmetric-key based authentication for SSH
                                                      between Compute Nodes in a Linux Pool when the
                                                      Pool's enableInterNodeCommunication property is
                                                      true (it is ignored if
                                                      enableInterNodeCommunication is false). It does
                                                      this by placing the key pair into the user's .ssh
                                                      directory. If not specified, password-less SSH is
                                                      not configured between Compute Nodes (no
                                                      modification of the user's .ssh directory is
                                                      done).
                                                    "uid": 0  #
                                                      Optional. The uid and gid properties must be
                                                      specified together or not at all. If not
                                                      specified the underlying operating system picks
                                                      the uid.
                                                },
                                                "name": "str",  #
                                                  Required. The name of the user Account.
                                                "password": "str",  #
                                                  Required. The password for the user Account.
                "windowsUserConfiguration": {
                                                    "loginMode":
                                                      "str"  # Optional. The default value for
                                                      VirtualMachineConfiguration Pools is 'batch' and
                                                      for CloudServiceConfiguration Pools is
                                                      'interactive'. Known values are: "batch",
                                                      "interactive".
                                                }
                                            }
                                        ],
                                        "virtualMachineConfiguration": {
                                            "containerConfiguration": {
                "containerImageNames": [
                                                    "str"  #
                                                      Optional. This is the full Image reference, as
                                                      would be specified to "docker pull". An Image
                                                      will be sourced from the default Docker registry
                                                      unless the Image is fully qualified with an
                                                      alternative registry.
                                                ],
                "containerRegistries": [
                                                    {
                "identityReference": {
                "resourceId": "str"  # Optional. The ARM
                                                              resource id of the user assigned
                                                              identity.
                                                        },
                "password": "str",  # Optional. The password
                                                          to log into the registry server.
                "registryServer": "str",  # Optional. If
                                                          omitted, the default is "docker.io".
                "username": "str"  # Optional. The user name
                                                          to log into the registry server.
                                                    }
                                                ],
                                                "type":
                                                  "dockerCompatible"  # Default value is
                                                  "dockerCompatible". The container technology to be
                                                  used. Has constant value: "dockerCompatible".
                                            },
                                            "dataDisks": [
                                                {
                                                    "caching":
                                                      "str",  # Optional. The default value for caching
                                                      is readwrite. For information about the caching
                                                      options see:
                                                      https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
                                                      Known values are: "none", "readonly",
                                                      "readwrite".
                                                    "diskSizeGB":
                                                      0,  # Required. The initial disk size in
                                                      gigabytes.
                                                    "lun": 0,  #
                                                      Required. The lun is used to uniquely identify
                                                      each data disk. If attaching multiple disks, each
                                                      should have a distinct lun. The value must be
                                                      between 0 and 63, inclusive.
                "storageAccountType": "str"  # Optional. If
                                                      omitted, the default is "standard_lrs". Known
                                                      values are: "standard_lrs", "premium_lrs".
                                                }
                                            ],
                "diskEncryptionConfiguration": {
                                                "targets": [
                                                    "str"  #
                                                      Optional. If omitted, no disks on the compute
                                                      nodes in the pool will be encrypted. On Linux
                                                      pool, only "TemporaryDisk" is supported; on
                                                      Windows pool, "OsDisk" and "TemporaryDisk" must
                                                      be specified.
                                                ]
                                            },
                                            "extensions": [
                                                {
                "autoUpgradeMinorVersion": bool,  # Optional.
                                                      Indicates whether the extension should use a
                                                      newer minor version if one is available at
                                                      deployment time. Once deployed, however, the
                                                      extension will not upgrade minor versions unless
                                                      redeployed, even with this property set to true.
                                                    "name":
                                                      "str",  # Required. The name of the virtual
                                                      machine extension.
                "protectedSettings": {},  # Optional. The
                                                      extension can contain either protectedSettings or
                                                      protectedSettingsFromKeyVault or no protected
                                                      settings at all.
                "provisionAfterExtensions": [
                                                        "str"
                                                          # Optional. Collection of extension names
                                                          after which this extension needs to be
                                                          provisioned.
                                                    ],
                                                    "publisher":
                                                      "str",  # Required. The name of the extension
                                                      handler publisher.
                                                    "settings":
                                                      {},  # Optional. Any object.
                                                    "type":
                                                      "str",  # Required. The type of the extension.
                "typeHandlerVersion": "str"  # Optional. The
                                                      version of script handler.
                                                }
                                            ],
                                            "imageReference": {
                                                "exactVersion":
                                                  "str",  # Optional. The specific version of the
                                                  platform image or marketplace image used to create
                                                  the node. This read-only field differs from 'version'
                                                  only if the value specified for 'version' when the
                                                  pool was created was 'latest'.
                                                "offer": "str",  #
                                                  Optional. For example, UbuntuServer or WindowsServer.
                                                "publisher": "str",
                                                  # Optional. For example, Canonical or
                                                  MicrosoftWindowsServer.
                                                "sku": "str",  #
                                                  Optional. For example, 18.04-LTS or 2019-Datacenter.
                                                "version": "str",  #
                                                  Optional. A value of 'latest' can be specified to
                                                  select the latest version of an Image. If omitted,
                                                  the default is 'latest'.
                "virtualMachineImageId": "str"  # Optional. This
                                                  property is mutually exclusive with other
                                                  ImageReference properties. The Shared Image Gallery
                                                  Image must have replicas in the same region and must
                                                  be in the same subscription as the Azure Batch
                                                  account. If the image version is not specified in the
                                                  imageId, the latest version will be used. For
                                                  information about the firewall settings for the Batch
                                                  Compute Node agent to communicate with the Batch
                                                  service see
                                                  https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
                                            },
                                            "licenseType": "str",  #
                                              Optional. This only applies to Images that contain the
                                              Windows operating system, and should only be used when
                                              you hold valid on-premises licenses for the Compute Nodes
                                              which will be deployed. If omitted, no on-premises
                                              licensing discount is applied. Values are:"n"n
                                              Windows_Server - The on-premises license is for Windows
                                              Server."n Windows_Client - The on-premises license is for
                                              Windows Client.
                                            "nodeAgentSKUId": "str",  #
                                              Required. The Batch Compute Node agent is a program that
                                              runs on each Compute Node in the Pool, and provides the
                                              command-and-control interface between the Compute Node
                                              and the Batch service. There are different
                                              implementations of the Compute Node agent, known as SKUs,
                                              for different operating systems. You must specify a
                                              Compute Node agent SKU which matches the selected Image
                                              reference. To get the list of supported Compute Node
                                              agent SKUs along with their list of verified Image
                                              references, see the 'List supported Compute Node agent
                                              SKUs' operation.
                                            "nodePlacementConfiguration":
                                              {
                                                "policy": "str"  #
                                                  Optional. Allocation policy used by Batch Service to
                                                  provision the nodes. If not specified, Batch will use
                                                  the regional policy. Known values are: "regional",
                                                  "zonal".
                                            },
                                            "osDisk": {
                "ephemeralOSDiskSettings": {
                                                    "placement":
                                                      "CacheDisk"  # Optional. Default value is
                                                      "CacheDisk". This property can be used by user in
                                                      the request to choose the location e.g., cache
                                                      disk space for Ephemeral OS disk provisioning.
                                                      For more information on Ephemeral OS disk size
                                                      requirements, please refer to Ephemeral OS disk
                                                      size requirements for Windows VMs at
                                                      https://docs.microsoft.com/en-us/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements
                                                      and Linux VMs at
                                                      https://docs.microsoft.com/en-us/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements.
                                                      The only acceptable values to pass in are None
                                                      and "CacheDisk". The default value is None.
                                                }
                                            },
                                            "windowsConfiguration": {
                "enableAutomaticUpdates": bool  # Optional. If
                                                  omitted, the default value is true.
                                            }
                                        },
                                        "vmSize": "str"  # Required. For
                                          information about available sizes of virtual machines in
                                          Pools, see Choose a VM size for Compute Nodes in an Azure
                                          Batch Pool
                                          (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
                                    },
                                    "poolLifetimeOption": "str"  # Required. The
                                      minimum lifetime of created auto Pools, and how multiple Jobs on
                                      a schedule are assigned to Pools. Known values are:
                                      "jobschedule", "job".
                                },
                                "poolId": "str"  # Optional. You must ensure that the
                                  Pool referenced by this property exists. If the Pool does not exist
                                  at the time the Batch service tries to schedule a Job, no Tasks for
                                  the Job will run until you create a Pool with that id. Note that the
                                  Batch service will not reject the Job request; it will simply not run
                                  Tasks until the Pool exists. You must specify either the Pool ID or
                                  the auto Pool specification, but not both.
                            },
                            "previousState": "str",  # Optional. This property is not set
                              if the Job is in its initial Active state. Known values are: "active",
                              "disabling", "disabled", "enabling", "terminating", "completed",
                              "deleting".
                            "previousStateTransitionTime": "2020-02-20 00:00:00",  #
                              Optional. This property is not set if the Job is in its initial Active
                              state.
                            "priority": 0,  # Optional. Priority values can range from
                              -1000 to 1000, with -1000 being the lowest priority and 1000 being the
                              highest priority. The default value is 0.
                            "state": "str",  # Optional. The state of the Job. Known
                              values are: "active", "disabling", "disabled", "enabling", "terminating",
                              "completed", "deleting".
                            "stateTransitionTime": "2020-02-20 00:00:00",  # Optional.
                              The time at which the Job entered its current state.
                            "stats": {
                                "kernelCPUTime": "1 day, 0:00:00",  # Required. The
                                  total kernel mode CPU time (summed across all cores and all Compute
                                  Nodes) consumed by all Tasks in the Job.
                                "lastUpdateTime": "2020-02-20 00:00:00",  # Required.
                                  The time at which the statistics were last updated. All statistics
                                  are limited to the range between startTime and lastUpdateTime.
                                "numFailedTasks": 0.0,  # Required. A Task fails if
                                  it exhausts its maximum retry count without returning exit code 0.
                                "numSucceededTasks": 0.0,  # Required. A Task
                                  completes successfully if it returns exit code 0.
                                "numTaskRetries": 0.0,  # Required. The total number
                                  of retries on all the Tasks in the Job during the given time range.
                                "readIOGiB": 0.0,  # Required. The total amount of
                                  data in GiB read from disk by all Tasks in the Job.
                                "readIOps": 0.0,  # Required. The total number of
                                  disk read operations made by all Tasks in the Job.
                                "startTime": "2020-02-20 00:00:00",  # Required. The
                                  start time of the time range covered by the statistics.
                                "url": "str",  # Required. The URL of the statistics.
                                "userCPUTime": "1 day, 0:00:00",  # Required. The
                                  total user mode CPU time (summed across all cores and all Compute
                                  Nodes) consumed by all Tasks in the Job.
                                "waitTime": "1 day, 0:00:00",  # Required. The wait
                                  time for a Task is defined as the elapsed time between the creation
                                  of the Task and the start of Task execution. (If the Task is retried
                                  due to failures, the wait time is the time to the most recent Task
                                  execution.) This value is only reported in the Account lifetime
                                  statistics; it is not included in the Job statistics.
                                "wallClockTime": "1 day, 0:00:00",  # Required. The
                                  wall clock time is the elapsed time from when the Task started
                                  running on a Compute Node to when it finished (or to the last time
                                  the statistics were updated, if the Task had not finished by then).
                                  If a Task was retried, this includes the wall clock time of all the
                                  Task retries.
                                "writeIOGiB": 0.0,  # Required. The total amount of
                                  data in GiB written to disk by all Tasks in the Job.
                                "writeIOps": 0.0  # Required. The total number of
                                  disk write operations made by all Tasks in the Job.
                            },
                            "url": "str",  # Optional. The URL of the Job.
                            "usesTaskDependencies": bool  # Optional. Whether Tasks in
                              the Job can define dependencies on each other. The default is false.
                        }
                    ]
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_list_from_job_schedule_request(
                    job_schedule_id=job_schedule_id,
                    api_version=api_version,
                    filter=filter,
                    select=select,
                    expand=expand,
                    max_results=max_results,
                    timeout=timeout,
                    client_request_id=client_request_id,
                    return_client_request_id=return_client_request_id,
                    ocp_date=ocp_date,
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

            else:
                
                request = build_list_from_job_schedule_request(
                    job_schedule_id=job_schedule_id,
                    client_request_id=client_request_id,
                    return_client_request_id=return_client_request_id,
                    ocp_date=ocp_date,
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(next_link, **path_format_arguments)  # type: ignore

                path_format_arguments = {
                    "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
                }
                request.method = "GET"
            return request

        def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("odata.nextLink", None), iter(list_of_elem)

        def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = self._client._pipeline.run(  # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response)

            return pipeline_response


        return ItemPaged(
            get_next, extract_data
        )


    @distributed_trace
    def list_preparation_and_release_task_status(
        self,
        job_id: str,
        *,
        filter: Optional[str] = None,
        select: Optional[str] = None,
        max_results: Optional[int] = 1000,
        timeout: Optional[int] = 30,
        client_request_id: Optional[str] = None,
        return_client_request_id: Optional[bool] = False,
        ocp_date: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> Iterable[JSON]:
        """Lists the execution status of the Job Preparation and Job Release Task for the specified Job
        across the Compute Nodes where the Job has run.

        This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have
        run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been
        removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job
        Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of
        JobPreparationTaskNotSpecified.

        :param job_id: The ID of the Job.
        :type job_id: str
        :keyword filter: An OData $filter clause. For more information on constructing this filter, see
         https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-preparation-and-release-status.
         Default value is None.
        :paramtype filter: str
        :keyword select: An OData $select clause. Default value is None.
        :paramtype select: str
        :keyword max_results: The maximum number of items to return in the response. A maximum of 1000
         Tasks can be returned. Default value is 1000.
        :paramtype max_results: int
        :keyword timeout: The maximum time that the server can spend processing the request, in
         seconds. The default is 30 seconds.
        :paramtype timeout: int
        :keyword client_request_id: The caller-generated request identity, in the form of a GUID with
         no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. Default value is
         None.
        :paramtype client_request_id: str
        :keyword return_client_request_id: Whether the server should return the client-request-id in
         the response. Default value is False.
        :paramtype return_client_request_id: bool
        :keyword ocp_date: The time the request was issued. Client libraries typically set this to the
         current system clock time; set it explicitly if you are calling the REST API directly. Default
         value is None.
        :paramtype ocp_date: ~datetime.datetime
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.paging.ItemPaged[JSON]
        :raises: ~azure.core.exceptions.HttpResponseError

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "odata.nextLink": "str",  # Optional. The URL to get the next set of results.
                    "value": [
                        {
                            "jobPreparationTaskExecutionInfo": {
                                "containerInfo": {
                                    "containerId": "str",  # Optional. The ID of
                                      the container.
                                    "error": "str",  # Optional. This is the
                                      detailed error string from the Docker service, if available. It
                                      is equivalent to the error field returned by "docker inspect".
                                    "state": "str"  # Optional. This is the state
                                      of the container according to the Docker service. It is
                                      equivalent to the status field returned by "docker inspect".
                                },
                                "endTime": "2020-02-20 00:00:00",  # Optional. This
                                  property is set only if the Task is in the Completed state.
                                "exitCode": 0,  # Optional. This parameter is
                                  returned only if the Task is in the completed state. The exit code
                                  for a process reflects the specific convention implemented by the
                                  application developer for that process. If you use the exit code
                                  value to make decisions in your code, be sure that you know the exit
                                  code convention used by the application process. Note that the exit
                                  code may also be generated by the Compute Node operating system, such
                                  as when a process is forcibly terminated.
                                "failureInfo": {
                                    "category": "str",  # Required. The category
                                      of the error. Known values are: "usererror", "servererror".
                                    "code": "str",  # Optional. An identifier for
                                      the Task error. Codes are invariant and are intended to be
                                      consumed programmatically.
                                    "details": [
                                        {
                                            "name": "str",  # Optional.
                                              The name in the name-value pair.
                                            "value": "str"  # Optional.
                                              The value in the name-value pair.
                                        }
                                    ],
                                    "message": "str"  # Optional. A message
                                      describing the Task error, intended to be suitable for display in
                                      a user interface.
                                },
                                "lastRetryTime": "2020-02-20 00:00:00",  # Optional.
                                  This property is set only if the Task was retried (i.e. retryCount is
                                  nonzero). If present, this is typically the same as startTime, but
                                  may be different if the Task has been restarted for reasons other
                                  than retry; for example, if the Compute Node was rebooted during a
                                  retry, then the startTime is updated but the lastRetryTime is not.
                                "result": "str",  # Optional. If the value is
                                  'failed', then the details of the failure can be found in the
                                  failureInfo property. Known values are: "success", "failure".
                                "retryCount": 0,  # Required. Task application
                                  failures (non-zero exit code) are retried, pre-processing errors (the
                                  Task could not be run) and file upload errors are not retried. The
                                  Batch service will retry the Task up to the limit specified by the
                                  constraints.
                                "startTime": "2020-02-20 00:00:00",  # Required. If
                                  the Task has been restarted or retried, this is the most recent time
                                  at which the Task started running.
                                "state": "str",  # Required. The current state of the
                                  Job Preparation Task on the Compute Node. Known values are:
                                  "running", "completed".
                                "taskRootDirectory": "str",  # Optional. The root
                                  directory of the Job Preparation Task on the Compute Node. You can
                                  use this path to retrieve files created by the Task, such as log
                                  files.
                                "taskRootDirectoryUrl": "str"  # Optional. The URL to
                                  the root directory of the Job Preparation Task on the Compute Node.
                            },
                            "jobReleaseTaskExecutionInfo": {
                                "containerInfo": {
                                    "containerId": "str",  # Optional. The ID of
                                      the container.
                                    "error": "str",  # Optional. This is the
                                      detailed error string from the Docker service, if available. It
                                      is equivalent to the error field returned by "docker inspect".
                                    "state": "str"  # Optional. This is the state
                                      of the container according to the Docker service. It is
                                      equivalent to the status field returned by "docker inspect".
                                },
                                "endTime": "2020-02-20 00:00:00",  # Optional. This
                                  property is set only if the Task is in the Completed state.
                                "exitCode": 0,  # Optional. This parameter is
                                  returned only if the Task is in the completed state. The exit code
                                  for a process reflects the specific convention implemented by the
                                  application developer for that process. If you use the exit code
                                  value to make decisions in your code, be sure that you know the exit
                                  code convention used by the application process. Note that the exit
                                  code may also be generated by the Compute Node operating system, such
                                  as when a process is forcibly terminated.
                                "failureInfo": {
                                    "category": "str",  # Required. The category
                                      of the error. Known values are: "usererror", "servererror".
                                    "code": "str",  # Optional. An identifier for
                                      the Task error. Codes are invariant and are intended to be
                                      consumed programmatically.
                                    "details": [
                                        {
                                            "name": "str",  # Optional.
                                              The name in the name-value pair.
                                            "value": "str"  # Optional.
                                              The value in the name-value pair.
                                        }
                                    ],
                                    "message": "str"  # Optional. A message
                                      describing the Task error, intended to be suitable for display in
                                      a user interface.
                                },
                                "result": "str",  # Optional. If the value is
                                  'failed', then the details of the failure can be found in the
                                  failureInfo property. Known values are: "success", "failure".
                                "startTime": "2020-02-20 00:00:00",  # Required. If
                                  the Task has been restarted or retried, this is the most recent time
                                  at which the Task started running.
                                "state": "str",  # Required. The current state of the
                                  Job Release Task on the Compute Node. Known values are: "running",
                                  "completed".
                                "taskRootDirectory": "str",  # Optional. The root
                                  directory of the Job Release Task on the Compute Node. You can use
                                  this path to retrieve files created by the Task, such as log files.
                                "taskRootDirectoryUrl": "str"  # Optional. The URL to
                                  the root directory of the Job Release Task on the Compute Node.
                            },
                            "nodeId": "str",  # Optional. The ID of the Compute Node to
                              which this entry refers.
                            "nodeUrl": "str",  # Optional. The URL of the Compute Node to
                              which this entry refers.
                            "poolId": "str"  # Optional. The ID of the Pool containing
                              the Compute Node to which this entry refers.
                        }
                    ]
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_list_preparation_and_release_task_status_request(
                    job_id=job_id,
                    api_version=api_version,
                    filter=filter,
                    select=select,
                    max_results=max_results,
                    timeout=timeout,
                    client_request_id=client_request_id,
                    return_client_request_id=return_client_request_id,
                    ocp_date=ocp_date,
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

            else:
                
                request = build_list_preparation_and_release_task_status_request(
                    job_id=job_id,
                    client_request_id=client_request_id,
                    return_client_request_id=return_client_request_id,
                    ocp_date=ocp_date,
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(next_link, **path_format_arguments)  # type: ignore

                path_format_arguments = {
                    "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
                }
                request.method = "GET"
            return request

        def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("odata.nextLink", None), iter(list_of_elem)

        def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = self._client._pipeline.run(  # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response)

            return pipeline_response


        return ItemPaged(
            get_next, extract_data
        )


    @distributed_trace
    def get_task_counts(
        self,
        job_id: str,
        *,
        timeout: Optional[int] = 30,
        client_request_id: Optional[str] = None,
        return_client_request_id: Optional[bool] = False,
        ocp_date: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> JSON:
        """Gets the Task counts for the specified Job.

        Task counts provide a count of the Tasks by active, running or completed Task state, and a
        count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running.
        Note that the numbers returned may not always be up to date. If you need exact task counts, use
        a list query.

        :param job_id: The ID of the Job.
        :type job_id: str
        :keyword timeout: The maximum time that the server can spend processing the request, in
         seconds. The default is 30 seconds.
        :paramtype timeout: int
        :keyword client_request_id: The caller-generated request identity, in the form of a GUID with
         no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. Default value is
         None.
        :paramtype client_request_id: str
        :keyword return_client_request_id: Whether the server should return the client-request-id in
         the response. Default value is False.
        :paramtype return_client_request_id: bool
        :keyword ocp_date: The time the request was issued. Client libraries typically set this to the
         current system clock time; set it explicitly if you are calling the REST API directly. Default
         value is None.
        :paramtype ocp_date: ~datetime.datetime
        :return: JSON object
        :rtype: JSON
        :raises: ~azure.core.exceptions.HttpResponseError

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "taskCounts": {
                        "active": 0,  # Required. The number of Tasks in the active state.
                        "completed": 0,  # Required. The number of Tasks in the completed
                          state.
                        "failed": 0,  # Required. The number of Tasks which failed. A Task
                          fails if its result (found in the executionInfo property) is 'failure'.
                        "running": 0,  # Required. The number of Tasks in the running or
                          preparing state.
                        "succeeded": 0  # Required. The number of Tasks which succeeded. A
                          Task succeeds if its result (found in the executionInfo property) is
                          'success'.
                    },
                    "taskSlotCounts": {
                        "active": 0,  # Required. The number of TaskSlots for active Tasks.
                        "completed": 0,  # Required. The number of TaskSlots for completed
                          Tasks.
                        "failed": 0,  # Required. The number of TaskSlots for failed Tasks.
                        "running": 0,  # Required. The number of TaskSlots for running Tasks.
                        "succeeded": 0  # Required. The number of TaskSlots for succeeded
                          Tasks.
                    }
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', "2022-01-01.15.0"))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_get_task_counts_request(
            job_id=job_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "batchUrl": self._serialize.url("self._config.batch_url", self._config.batch_url, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        response_headers = {}
        response_headers['client-request-id']=self._deserialize('str', response.headers.get('client-request-id'))
        response_headers['request-id']=self._deserialize('str', response.headers.get('request-id'))

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), response_headers)

        return cast(JSON, deserialized)


