# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6320, generator: {generator})
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING

from azure.core import PipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any

from ._configuration import BatchServiceConfiguration
from .operations import ApplicationOperations
from .operations import PoolOperations
from .operations import AccountOperations
from .operations import JobOperations
from .operations import CertificateOperations
from .operations import FileOperations
from .operations import JobScheduleOperations
from .operations import TaskOperations
from .operations import ComputeNodeOperations
from . import models
from .custom.patch import patch_client


class BatchServiceClient(object):
    """A client for issuing REST requests to the Azure Batch service.

    :ivar application: ApplicationOperations operations
    :vartype application: batch_service.operations.ApplicationOperations
    :ivar pool: PoolOperations operations
    :vartype pool: batch_service.operations.PoolOperations
    :ivar account: AccountOperations operations
    :vartype account: batch_service.operations.AccountOperations
    :ivar job: JobOperations operations
    :vartype job: batch_service.operations.JobOperations
    :ivar certificate: CertificateOperations operations
    :vartype certificate: batch_service.operations.CertificateOperations
    :ivar file: FileOperations operations
    :vartype file: batch_service.operations.FileOperations
    :ivar job_schedule: JobScheduleOperations operations
    :vartype job_schedule: batch_service.operations.JobScheduleOperations
    :ivar task: TaskOperations operations
    :vartype task: batch_service.operations.TaskOperations
    :ivar compute_node: ComputeNodeOperations operations
    :vartype compute_node: batch_service.operations.ComputeNodeOperations
    :param batch_url: The base URL for all Azure Batch service requests.
    :type batch_url: str
    """

    def __init__(
        self,
        batch_url,  # type: str
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        base_url = '{batchUrl}'
        self._config = BatchServiceConfiguration(batch_url, **kwargs)
        self._client = PipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._serialize.client_side_validation = False
        self._deserialize = Deserializer(client_models)

        self.application = ApplicationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.pool = PoolOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.account = AccountOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.job = JobOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.certificate = CertificateOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.file = FileOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.job_schedule = JobScheduleOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.task = TaskOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.compute_node = ComputeNodeOperations(
            self._client, self._config, self._serialize, self._deserialize)

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> BatchService
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)

patch_client()
